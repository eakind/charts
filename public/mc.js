(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("d3"));
	else if(typeof define === 'function' && define.amd)
		define("mc", ["d3"], factory);
	else if(typeof exports === 'object')
		exports["mc"] = factory(require("d3"));
	else
		root["mc"] = factory(root["d3"]);
})(window, function(__WEBPACK_EXTERNAL_MODULE_d3__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/multiCat.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Chart.js":
/*!**********************!*\
  !*** ./src/Chart.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Chart; });\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n\r\n\r\n\r\nclass Chart {\r\n  constructor(config) {\r\n    const $$ = this;\r\n    if (config.data.type === 'table') {\r\n\r\n      $$.getConfig(config)\r\n      $$.initBasicData()\r\n      $$.createContainer();\r\n      \r\n      $$.draw({})\r\n    } else {\r\n      $$.getConfig(config)\r\n      $$.initBasicData()\r\n      $$.initialDraw();\r\n    }\r\n    console.log('前', this.config)\r\n    // $$.getConfig(config)\r\n    // $$.initBasicData()\r\n    // $$.initialDraw();\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n  getConfig(config) {\r\n    const $$ = this;\r\n    //初始化config对象\r\n    $$.config = $$.getOptions();\r\n    //遍历外界输入的config对象，更新初始化的config对象\r\n    $$.loadConfig(config);\r\n  }\r\n\r\n  initBasicData() {\r\n    const $$ = this;\r\n    //初始化一些变量\r\n    $$.init();\r\n    //将data_json转为嵌套的有层级的结构\r\n    $$.getNestedList();\r\n    //有Y轴的话获取Y轴坐标范围\r\n    if ($$.hasYAxis) {\r\n      $$.getYDomain();\r\n    }\r\n  }\r\n\r\n  initialDraw() {\r\n    const $$ = this;\r\n    //获取svg所挂载的页面元素，清空内容，添加事件\r\n    $$.createContainer();\r\n    //创建svg\r\n    $$.initBasicSvgElements();\r\n    //计算svg的大小\r\n    $$.definedChartSize();\r\n    //计算svg的margin\r\n    $$.updateMargins();\r\n    //确定svg各个画图区域的大小，比如有坐标轴的情况下，左边需要留出多少空间画Y轴，右边需要留出多少空间画Y2轴，中间有多少空间画柱子\r\n    $$.updateSize();\r\n    //Y轴的宽高确定后，就可以确定scale函数，将实际值通过scale函数映射到svg上\r\n    $$.definedYScale();\r\n\r\n    if ($$.isBarLineType) {\r\n      //画竖的分割线\r\n      $$.drawDivideLines();\r\n      //画横的分割线\r\n      $$.drawHorizontalLines();\r\n    } else {\r\n      //画表格的线\r\n      $$.drawBorder()\r\n    }\r\n    //获取标签样式\r\n    $$.getLabelStyleList();\r\n    //画图\r\n    $$.draw({})\r\n    //修改图上标签的样式\r\n    $$.initLabelStyle();\r\n    // 调整柱状图标签的位置, svg的最后面，以免被遮挡\r\n    $$.reSortLabel();\r\n\r\n    if ($$.config.axis_zoom_enable) {\r\n      //缩放\r\n      $$.checkAndScale();\r\n    }\r\n  }\r\n\r\n  createContainer() {\r\n    const $$ = this;\r\n    const config = $$.config;\r\n    const opacity = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(config.color_opacity[0]) ? config.color_opacity[0] : 1\r\n    const type = config.data_type;\r\n\r\n    const bindto = {\r\n      element: config.bindto,\r\n      classname: \"mc\"\r\n    };\r\n\r\n    // select bind element\r\n    $$.MyContainer = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(bindto.element.node) ? config.bindto.element : d3.select(!bindto.element ? [] : bindto.element);\r\n    $$.MyContainer.html(\"\").classed(bindto.classname, true)\r\n    //$$.MyContainer.attr('style', `transform: translate(${config.smallMultiplePadding_left}px, ${config.smallMultiplePadding_top}px)`)\r\n\r\n    //点击事件使用捕获，默认是冒泡\r\n    $$.MyContainer.on('click', function () {\r\n      if (type === 'map') {\r\n        $$.shapeInstance.getAllCircles().forEach(c => c.setStyle({\r\n          fillOpacity: opacity\r\n        }))\r\n      } else {\r\n        $$.MyContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].element}`).attr('opacity', opacity)\r\n        $$.MyContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].stacked_group}`).attr('opacity', opacity)\r\n      }\r\n    }, true)\r\n  }\r\n\r\n  initBasicSvgElements() {\r\n    const $$ = this;\r\n    const config = $$.config;\r\n    const type = config.data_type;\r\n    const isRotated = config.axis_rotated;\r\n\r\n    if ($$.isBarLineType) {\r\n      //计算出4个div的宽度，一个用于画y轴，一个用于画主图，一个用于画y2轴，一个用于画x轴\r\n      if (!isRotated) $$.MyContainer.style('display', 'flex')\r\n      let div_yAxis = $$.MyContainer.append('div').attr('class', isRotated ? _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].top_div : _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].left_div),\r\n        div_main = $$.MyContainer.append('div').attr('class', _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].middle_div).attr('position', 'relative'),\r\n        div_y2Axis = $$.MyContainer.append('div').attr('class', isRotated ? _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].bottom_div : _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].right_div);\r\n\r\n      $$.divMain = div_main\r\n\r\n      $$.svg_yAxis = (isRotated ? div_y2Axis : div_yAxis).append('svg')\r\n        .style(\"overflow\", \"hidden\")\r\n        .style(\"display\", \"block\")\r\n        .style('background-color', 'transparent')\r\n\r\n      $$.svg = $$.divMain.append('svg')\r\n        .style(\"overflow\", \"hidden\")\r\n        .style(\"display\", \"block\")\r\n        .style('background-color', 'transparent')\r\n\r\n      $$.svg_y2Axis = (isRotated ? div_yAxis : div_y2Axis).append('svg')\r\n        .style(\"overflow\", \"hidden\")\r\n        .style(\"display\", \"block\")\r\n        .style('background-color', 'transparent')\r\n\r\n      //画柱子、线、X轴的位置\r\n      $$.main = $$.svg.append(\"g\")\r\n      //画y轴的位置\r\n      $$.ySvg = $$.svg_yAxis.append('g')\r\n      //画y2轴的位置\r\n      $$.y2Svg = $$.svg_y2Axis.append('g')\r\n      //行分类变量标题\r\n      $$.group_1 = (isRotated ? $$.svg_y2Axis : $$.svg_yAxis).append('g').attr('class', _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].column_cat_title)\r\n      //行分类变量竖向分割线\r\n      $$.group_2 = (isRotated ? $$.y2Svg : $$.ySvg).append('g').attr('class', 'row_cat_divide_lines')\r\n      //行分类变量横向分割线\r\n      $$.group_3 = (isRotated ? $$.y2Svg : $$.ySvg).append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide_lt_h}`)\r\n      //列分类变量标题\r\n      $$.group_4 = (isRotated ? $$.svg_y2Axis : $$.svg).append('g').attr('class', _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].x_axis_labels)\r\n      //列分类变量竖向分割线\r\n      $$.group_5 = $$.main.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide_lt_v}`)\r\n    } else {\r\n      if (type === 'map') {\r\n        $$.MyContainer.style('position', 'relative')\r\n        $$.svg = $$.MyContainer.append('svg').attr('style', 'position: absolute')\r\n        $$.main = $$.svg.append('g')\r\n      } else {\r\n        // -- Basic Elements --\r\n        $$.svg = $$.MyContainer.append(\"svg\")\r\n          .style(\"overflow\", \"hidden\")\r\n          .style(\"display\", \"block\")\r\n          .style('background-color', 'transparent')\r\n\r\n        $$.main = $$.svg.append(\"g\")\r\n      }\r\n      //行分类变量\r\n      $$.group_1 = $$.main.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide_lt_h}`)\r\n      //列分类变量\r\n      $$.group_2 = $$.main.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].divide_lt_v}`)\r\n      //表头\r\n      $$.group_3 = $$.main.append('g').attr('class', 'border-line-text')\r\n\r\n      if (type === 'map') {\r\n        $$.bigContainer = $$.MyContainer.append('div').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][type]}`)\r\n      } else {\r\n        $$.bigContainer = $$.main.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"][type]}`)\r\n      }\r\n    }\r\n\r\n    if ($$.hasYAxis) {\r\n      //call zoom\r\n      if (config.axis_zoom_enable) {\r\n        $$.zoom = $$.getZoom()\r\n        $$.svg.call($$.zoom)\r\n          .on(\"wheel.zoom\", null)\r\n          .on(\"dblclick.zoom\", null)\r\n        // .on(\"mousedown.zoom\", null)\r\n        // .on(\"touchstart.zoom\", null)\r\n        // .on(\"touchmove.zoom\", null)\r\n        // .on(\"touchend.zoom\", null)\r\n      }\r\n    }\r\n    //clip-path, pattern都需要使用defs定义\r\n    $$.defs = $$.svg.append(\"defs\")\r\n    //提示框函数\r\n    $$.tooltipDiv = $$.tooltip()\r\n    if (!$$.isBarLineType) {\r\n      //颜色函数\r\n      $$.color = $$.generateColor();\r\n      if (type !== 'table') {\r\n        //大小函数\r\n        $$.size = $$.generateSize();\r\n      }\r\n    }\r\n    //更新svg上一个字母的宽高\r\n    $$.textFont = `${config.font_size}px`\r\n    $$.textColor = config.font_color\r\n    _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sizeFor1Char = $$.getTextLength('a', $$.textFont, true);\r\n    _Classes_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sizeFor1CharUpper = $$.getTextLength('A', $$.textFont, true);\r\n  }\r\n\r\n}\n\n//# sourceURL=webpack://mc/./src/Chart.js?");

/***/ }),

/***/ "./src/Classes.js":
/*!************************!*\
  !*** ./src/Classes.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n\tchart: 'mc-chart',\r\n\tempty_text: 'empty-text',\r\n\taxis: 'mc-axis',\r\n\tx_axis: 'x-axis',\r\n\ty_axis: 'y-axis',\r\n\ty2_axis: 'y2-axis',\r\n\tmulti_row: 'mc-multirow',\r\n\tgrid: 'mc-grid',\r\n\tbars: 'mc-bars',\r\n\tlines: 'mc-lines',\r\n\tbar: 'mc-bar',\r\n\tline: 'mc-line',\r\n\tcombined: 'mc-combined',\r\n\tscatter: 'mc-scatter',\r\n\tmap: 'mc-map',\r\n\ttable: 'mc-table',\r\n\tpie: 'mc-pie',\r\n\tbubble: 'mc-bubble',\r\n\tfunnel: 'mc-funnel',\r\n\tarea: 'mc-area',\r\n\tbar_rotated: 'mc-bar-rotated',\r\n\telement: 'mc-element',\r\n\tstacked_group: 'mc-stacked-group',\r\n\tpoint: 'mc-point',\r\n\tcircle: 'mc-circle',\r\n\tlabels: 'mc-labels',\r\n\tline_labels: 'mc-line-labels',\r\n\tbar_labels: 'mc-bar-labels',\r\n\tlabel: 'mc-label',\r\n\tline_label: 'mc-line-label',\r\n\tbar_label: 'mc-bar-label',\r\n\tlabel_text: 'mc-label-text',\r\n\tchart_part: 'mc-chart-part',\r\n\tx_axis_label: 'mc-x-axis-label',\r\n\ty_axis_label: 'mc-y-axis-label',\r\n\ty2_axis_label: 'mc-y2-axis-label',\r\n\ttooltip: 'mc-tooltip',\r\n\tarc: 'mc-arc',\r\n\tpattern: 'mc-pattern',\r\n\ttexts: 'mc-texts',\r\n\ttext: 'mc-text',\r\n\tleaflet: 'mc-leaflet',\r\n\tdivide_lines: 'mc-divide-lines',\r\n\tdivide_texts: 'mc-divide-texts',\r\n\tdivide_lt_v: 'mc-divide-lines-texts_v',\r\n\tdivide_lt_h: 'mc-divide-lines-texts_h',\r\n\tzero_line: 'mc-divide-at-zero',\r\n\ttop_div: 'mc-top',\r\n\tbottom_div: 'mc-bottom',\r\n\tleft_div: 'mc-left',\r\n\tright_div: 'mc-right',\r\n\tmiddle_div: 'mc-middle',\r\n\tchild: 'mc-child',\r\n\tx_axis_labels: 'mc-x-axis-labels',\r\n\tcolumn_cat_title: 'mc-column-cat-title',\r\n\r\n\t/**处理数据**/\r\n\tjoin_factor: 'MC-SEPERATE-WORD', //'--mc--1992--',\r\n\t/**处理数据**/\r\n\r\n\t/**基本颜色**/\r\n\tbasic_color_schemes: ['#4284F5', '#03B98C', '#FACC14', '#F5282D', '#8543E0', '#3FAECC', '#3110D0', '#E88F00', '#DE2393', '#91BA38','#99B4BF', '#216A58', '#AB9438', '#F4999B', '#C9BFE1', '#055166', '#1F135A', '#43140A', '#96005A', '#8D8D8D'], //['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf','#999999'],\r\n\tbasic_color_linear: ['#7AC9F5', '#2A5783'],//['#e5f5e0','#238b45'],\r\n\r\n\t/**位置太小的话不显示标签**/\r\n\tmin_band: 10,\r\n\r\n\t/**分割线之间每一行文字的高度**/\r\n\tzone_width: 30,\r\n\r\n\tclass_name: 'mc-className',\r\n\r\n\tempty_row: 'MC-EMPTY_ROW',\r\n\tempty_column: 'MC-EMPTY-COLUMN',\r\n\tempty_string: '',\r\n\tclip_path: 'mc-clip-path',\r\n\r\n\ttooltip_style: `\r\n\t\tborder: 1px solid #fff; \r\n\t\tbackground-color: #fff; \r\n\t\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4); \r\n\t\tborder-radius: 3px; \r\n\t\tpadding: 6px; \r\n\t\tfont-size: 12px; \r\n\t\tposition: absolute;\r\n\t`,\r\n\r\n\thover_info: 'MC-HOVER-TOOLTIP',\r\n\tvalue_info: 'MC-VALUE-INFO',\r\n\tall_value: 'MC-ALL-VALUE',\r\n\tnumber_format: {\r\n\t\tselectFormat: 'digit',\r\n    decimal: '',\r\n    negative: '-1',\r\n    unit: '',\r\n    prefix: '',\r\n    suffix: '',\r\n    zone: 'CN',\r\n    useThousandMark: true\r\n\t},\r\n\ttext_format: {\r\n\t\talign: 'left',\r\n    fontSize: 12,\r\n    fontColor: '',\r\n    fontStyle: 'normal',\r\n    decoration: '',\r\n    letterSpacing: '',\r\n    lineHeight: '16.5',\r\n    display: 'auto'\r\n\t},\r\n\ttable_text_format: {\r\n\t\talign: 'right',\r\n    fontSize: 12,\r\n    fontColor: '#6b6b6b',\r\n    fontStyle: 'normal',\r\n    decoration: '',\r\n    letterSpacing: '',\r\n    lineHeight: '24'\r\n\t},\r\n\tsizeFor1Char: {\r\n\t\th:16.5,\r\n\t\tw:6.71875\r\n\t},\r\n  sizeFor1CharUpper: {\r\n\t\th:16.5,\r\n\t\tw:7.890625\r\n  },\r\n\tmc_hidden_key: 'MC-HIDDEN-KEY',\r\n\tmc_divide_text: 'MC-DIVIDE-TEXT',\r\n\tmc_divide_style: 'MC-DIVIDE-STYLE'\r\n});\n\n//# sourceURL=webpack://mc/./src/Classes.js?");

/***/ }),

/***/ "./src/Options.js":
/*!************************!*\
  !*** ./src/Options.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Options; });\nclass Options {\r\n\tconstructor() {\r\n\t\tthis.value = {\r\n\t\t\tscale: 1,\r\n\r\n\t\t\tbindto: '#chart',\r\n\r\n\t\t\tsize_width: undefined,\r\n\t\t\tsize_height: undefined,\r\n\r\n\t\t\tcontainer_width: undefined,\r\n\t\t\tcontainer_height: undefined,\r\n\t\t\thas_unit: true, // 是否添加单位\r\n\t\t\tsmallMultiplePadding_left: 10,\r\n\t\t\tsmallMultiplePadding_right: 18,\r\n\t\t\tsmallMultiplePadding_top: 10,\r\n\t\t\tsmallMultiplePadding_bottom: 10,\r\n\r\n\t\t\tfont_size: 12,\r\n\t\t\tfont_color: '#000',\r\n\r\n\t\t\tdata_time_format:'',\r\n\r\n\t\t\tdata_json: [],\r\n\r\n\t\t\tdata_row_categories: [],\r\n\t\t\tdata_row_aggressions: [],\r\n\t\t\tdata_row_catFirst: true,\r\n\t\t\tdata_column_categories: [],\r\n\t\t\tdata_column_aggressions: [],\r\n\t\t\tdata_column_catFirst: true,\r\n\r\n\t\t\tdata_type: undefined,\r\n\t\t\tdata_click: null,\r\n\r\n\t\t\tdata_colored_feature: undefined,\r\n\t\t\tdata_colored_type: undefined, //linear or ordinal\r\n\t\t\tdata_labeled: [], //['sum(sales)', 'sum(profits)']\r\n\t\t\tdata_sized_feature: undefined, //map and scatter plot\r\n\r\n\t\t\tdata_compare: [],\r\n\t\t\t/***\r\n      combined 格式 (该属性只有柱、线、或其组合可用)\r\n      [\r\n        {\r\n            axis: 'y', \r\n            bars: {\r\n              aggr: 'sum(Installs)',\r\n              colored: {\r\n                feature: 'Category',\r\n                type: 'ordinal',\r\n                stacked: false\r\n              },\r\n              labels: ['sum(Installs)']\r\n            },\r\n            type: 'bar',\r\n            axis_style: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\ttick: {\r\n\t\t\t\t\t\t\t\tstyle: {},\r\n\t\t\t\t\t\t\t\tcounts: undefined,\r\n\t\t\t\t\t\t\t\trange: [],\r\n\t\t\t\t\t\t\t\trotate: undefined,\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: {\r\n\t\t\t\t\t\t\t\tstyle: {},\r\n\t\t\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tline: {\r\n\t\t\t\t\t\t\t\tstyle: {},\r\n\t\t\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tzeroAligned: true,\r\n\t\t\t\t\t\t\talign: true\r\n            }\r\n         },\r\n         {\r\n            axis: 'y2', \r\n            bars: {\r\n              aggr: 'sum(Reviews)',\r\n              colored: {\r\n                feature: 'sum(Reviews)',\r\n                type: 'linear',\r\n                stacked: false\r\n              },\r\n              labels: ['sum(Reviews)']\r\n            },\r\n            type: 'line',\r\n            axis_style: {\r\n\t\t\t\t\t\t\tshow: true,\r\n\t\t\t\t\t\t\ttick: {\r\n\t\t\t\t\t\t\t\tstyle: {},\r\n\t\t\t\t\t\t\t\tcounts: undefined,\r\n\t\t\t\t\t\t\t\trange: [],\r\n\t\t\t\t\t\t\t\trotate: undefined,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\ttext: {\r\n\t\t\t\t\t\t\t\tstyle: {},\r\n\t\t\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tline: {\r\n\t\t\t\t\t\t\t\tstyle: {},\r\n\t\t\t\t\t\t\t\tshow: true\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tzeroAligned: true,\r\n\t\t\t\t\t\t\talign: true\r\n            }\r\n         }\r\n      ]\r\n      ***/\r\n\t\t\tdata_combined: [],\r\n\r\n\t\t\tdata_range_color: [],\r\n\t\t\tdata_range_size: [],\r\n\r\n\t\t\tcolor_schemes: [],\r\n\t\t\tcolor_opacity: [],\r\n\t\t\tcolor_colors: [],\r\n\t\t\tcolor_patterns: [],\r\n\t\t\t\r\n\t\t\taxis_zoom_scale: 1,\r\n\t\t\taxis_zoom_translate: undefined,\r\n\t\t\taxis_zoom_panning: null,\r\n\t\t\taxis_zoom_enable: false,\r\n\r\n\t\t\taxis_rotated: false,\r\n\r\n\t\t\taxis_x_show: true,\r\n\t\t\taxis_x_percent: false,\r\n\t\t\taxis_x_type: undefined, \r\n\t\t\taxis_x_tick_style: {}, /*style: {\r\n\t\t\t\tfill: '',\r\n\t\t\t\t'font-size': ''\r\n\t\t\t}*/\r\n\t\t\taxis_x_tick_counts: undefined,\r\n\t\t\taxis_x_tick_range: [],\r\n\t\t\taxis_x_tick_rotate: undefined,\r\n\t\t\taxis_x_text_style: {}, /*style: {\r\n\t\t\t\tfill: '',\r\n\t\t\t\t'font-size': '',\r\n\t\t\t\t'text-decoration': '',\r\n\t\t\t}*/\r\n\t\t\taxis_x_text_title: '',\r\n\t\t\taxis_x_text_show: true,\r\n\t\t\taxis_x_line_style: {},/*style: {\r\n\t\t\t\tstroke: '',\r\n\t\t\t\t'stroke-width': '',\r\n\t\t\t\t'stroke-dasharray': ''\r\n\t\t\t}*/\r\n\t\t\taxis_x_line_show: true,\r\n\r\n\t\t\tline_size: 1,\r\n\t\t\tline_pattern: \"circle\", //rect, ...\r\n\r\n\t\t\tbar_padding_inner: 0,\r\n\t\t\tbar_padding_outter: 0,\r\n\r\n\t\t\tfunnel_type: 'smooth', // data 根据数据绘制, smooth, smooth_invert 直接无视数据等差绘制\r\n\t\t\tfunnel_shape: 'trapezium', // rect, trapezium 矩形 / 梯形\r\n\t\t\tfunnel_minwidth: 200, // 梯形最短边宽度\r\n\t\t\tfunnel_sort: -1, // 排序 -1, 0, 1\r\n\t\t\tfunnel_gap: 2, // 行间距\r\n      funnel_align: 'center', // 对齐 left,center,right\r\n      funnel_rowMinHeight: 100, // 最小行高\r\n      funnel_innerPaddingLeft: 70, // 漏斗图的内padding，避免 label 超出\r\n      funnel_innerPaddingRight: 70,\r\n\t\t\tfunnel_labelPosition: 'middle', // left, middle, right\r\n\r\n\t\t\t// 转化率\r\n\t\t\tfunnel_conversion: false, // true 绘制转化率\r\n\t\t\tfunnel_conversionColor: '#424242',\r\n\t\t\tfunnel_conversionFontsize: 12,\r\n\r\n\t\t\tfunnel_compare_type: 'smooth_invert', // data compare 根据数据绘制, smooth, smooth_invert 直接无视数据等差绘制\r\n\t\t\tfunnel_compare_layout: 'inner', // inner, horizontal, vertical\r\n\t\t\tfunnel_compare_labelPosition: 'middle',\r\n\t\t\tdata_compareSized_feature: '',\r\n\t\t\tdata_compareColored_feature: '',\r\n\t\t\tdata_compareColored_type: '',\r\n\r\n\t\t\tmap_level: undefined,\r\n\t\t\tmap_center: [],\r\n\t\t\tmap_change: null,\r\n\t\t\tmap_showLatLong: false,\r\n\t\t\ttable_mode:'standard',\r\n\t\t\ttable_background:'#fff',\r\n\t\t\ttable_outter_color: '#ccc',\r\n\t\t\ttable_outter_width: 1,\r\n\t\t\ttable_inner_color: '#ccc',\r\n\t\t\ttable_inner_width: 1,\r\n\t\t\ttable_padding_top: 0,\r\n\t\t\ttable_padding_left: 0,\r\n\t\t\ttable_padding_bottom: 0,\r\n\t\t\ttable_padding_right: 0,\r\n\t\t\ttable_header_top_height: 35,\r\n\t\t\ttable_header_left_width: [],\r\n\t\t\ttable_header_auto: false,\r\n\t\t\ttable_body_width: 90,\r\n\t\t\ttable_body_height: 24,\r\n\t\t\ttable_body_auto: true,\r\n\t\t\t/*table_title 格式\r\n\t\t\t[{\t\r\n\t\t\t\tkey: '1',\r\n\t\t\t\tstyle: {},\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tshow: true\r\n\t\t\t}, ...]\r\n\t\t\t*/\r\n\t\t\ttable_title: [],\r\n\t\t\t/*** \r\n\t\t\t1. label_format 格式\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'sum(sales)',\r\n\t\t\t\t\t'sum(sales)': {\r\n\t\t\t\t\t\tdecimal: 2, \r\n\t\t\t\t\t\tnegative: -1, ['-1234', '(1234)', '1234-'] => [-1, 0, 1]\r\n\t\t\t\t\t\tprefix: \"\",\r\n\t\t\t\t\t\tselectFormat: 'digit', ['digit', 'percent', 'currency'] \r\n\t\t\t\t\t\tsuffix: \"\",\r\n\t\t\t\t\t\tunit: \"\", ['', 'k', 'M', 'G', 'T']\r\n\t\t\t\t\t\tuseThousandMark: true,\r\n\t\t\t\t\t\tzone: '', ['', 'CN', 'JP', 'HK', 'US', 'EUR', 'GBP']\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'sum(profits)': {...}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\r\n\t\t\t2. label_text 格式\r\n\t\t\t[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: 'sum(sales)',\r\n\t\t\t\t\t'sum(sales)': {\r\n\t\t\t\t\t\talign: \"right\", [left, right, center]\r\n\t\t\t\t\t\tdecoration: \"underline\",\r\n\t\t\t\t\t\tfontColor: \"#AB1717\",\r\n\t\t\t\t\t\tfontSize: 12,\r\n\t\t\t\t\t\tfontStyle: \"\",\r\n\t\t\t\t\t\tletterSpacing: \"0\",\r\n\t\t\t\t\t\tlineHeight: \"16.5\",\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'sum(profits)': {...}\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t\t***/\r\n\t\t\tlabel_format: [],\r\n\t\t\tlabel_text: [],\r\n\r\n\t\t\t/*** \r\n\t\t\t1. tooltip_format 格式\r\n\t\t\t{\r\n\t\t\t\t'sum(sales)': {\r\n\t\t\t\t\tdecimal: 2, \r\n\t\t\t\t\tnegative: -1, ['-1234', '(1234)', '1234-'] => [-1, 0, 1]\r\n\t\t\t\t\tprefix: \"\",\r\n\t\t\t\t\tselectFormat: 'digit', ['digit', 'percent', 'currency'] \r\n\t\t\t\t\tsuffix: \"\",\r\n\t\t\t\t\tunit: \"\", ['', 'k', 'M', 'G', 'T']\r\n\t\t\t\t\tuseThousandMark: true,\r\n\t\t\t\t\tzone: '', ['', 'CN', 'JP', 'HK', 'US', 'EUR', 'GBP']\r\n\t\t\t\t},\r\n\t\t\t\t'sum(profits)': {...}\r\n\t\t\t}\r\n\r\n\t\t\t2. tooltip_text 格式\r\n\t\t\t{\r\n\t\t\t\t'sum(sales)': {\r\n\t\t\t\t\talign: \"right\", [left, right, center]\r\n\t\t\t\t\tdecoration: \"underline\",\r\n\t\t\t\t\tfontColor: \"#AB1717\",\r\n\t\t\t\t\tfontSize: 12,\r\n\t\t\t\t\tfontStyle: \"\",\r\n\t\t\t\t\tletterSpacing: \"0\",\r\n\t\t\t\t\tlineHeight: \"16.5\",\r\n\t\t\t\t},\r\n\t\t\t\t'sum(profits)': {...}\r\n\t\t\t}\r\n\t\t\t***/\r\n\t\t\ttooltip_format: {},\r\n\t\t\ttooltip_text: {},\r\n\t\t\ttooltip_show: true,\r\n\t\t\ttooltip_name:[],\r\n\r\n\t\t\tpoint_size: 2,\r\n\t\t\tarc_size: 80,\r\n\t\t\tarc_innerRadius: 0,\r\n\t\t\torder_style: '', //'-1', '1'\r\n\t\t\t\r\n\t\t\t/*{stroke: '#eee', 'stroke-width': '1', 'stroke-dasharray': '0,0'}*/\r\n\t\t\tgrid_style: {},\r\n\t\t\tgrid_show: true,\r\n\t\t\t/*{stroke: '#bbb', 'stroke-width': '1', 'stroke-dasharray': '0,0'}*/\r\n\t\t\tcutoff_style: {},\r\n\t\t\tcutoff_show: false,\r\n\t\t\tdivide_column_text_style: {},/*style: {\r\n\t\t\t\tfill: '',\r\n\t\t\t\t'font-size': '',\r\n\t\t\t\t'text-decoration': '',\r\n\t\t\t}*/\r\n\t\t\tdivide_column_text_title: '',\r\n\t\t\tdivide_column_text_show: true,\r\n\t\t\tdivide_column_tick_styleList: [], /*[\r\n\t\t\t\t{\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\tfill: '',\r\n\t\t\t\t\t\t'font-size': ''\r\n\t\t\t\t\t},\r\n\t\t\t\t\trotate: undefined\r\n\t\t\t\t}\r\n\t\t\t]*/\r\n\t\t\tdivide_row_text_style: {},\r\n\t\t\tdivide_row_text_title: '',\r\n\t\t\tdivide_row_text_show: true,\r\n\t\t\tdivide_row_tick_styleList: [],\r\n\t\t\tarea_opacity: 0.25\r\n\t\t}\r\n\t\t//todo: data_time_format, data_row_catFirst, data_column_catFirst\r\n\t}\r\n}\n\n//# sourceURL=webpack://mc/./src/Options.js?");

/***/ }),

/***/ "./src/api.js":
/*!********************!*\
  !*** ./src/api.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst getColorList = function () {\r\n\treturn this.config.colorList || [];\r\n}\r\nconst getPatternList = function () {\r\n\treturn this.config.patternList || [];\r\n}\r\nconst getSizeList = function () {\r\n\treturn this.config.sizeList || [];\r\n}\r\nconst remove = function () {\r\n\tconst $$ = this;\r\n\tconst config = $$.config;\r\n\tconst type = config.data_type;\r\n\tlet map = $$.shapeInstance.getMapInstance()\r\n\tif (type === 'map') {\r\n\t\tif (map) {\r\n\t\t\tlet container = map.getContainer();\r\n\t\t\tmap.remove();\r\n\t\t\tcontainer.className = ''\r\n\t\t}\r\n\t} else {\r\n\t\t$$.MyContainer.html(\"\")\r\n\t}\r\n}\r\nconst getMapZoomLevel = function () {\r\n\treturn this.config.map_zoom_level;\r\n}\r\nconst getMapInstance = function () {\r\n\treturn this.map;\r\n}\r\nconst select = function (selected_class) {\r\n\tconst $$ = this\r\n\tconst config = $$.config\r\n\tconst type = config.data_type\r\n\tconst opacity = config.color_opacity[0] || 1\r\n\r\n\tif (selected_class) {\r\n\t\tlet className = selected_class.split(' ').map(v => `.${v}`).join('')\r\n\t\t$$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n\t\t$$.main.selectAll(className).attr('opacity', opacity)\r\n\t} else {\r\n\t\tif (type === 'map') $$.shapeInstance.getAllCircles().forEach(c => c.setStyle({\r\n\t\t\tfillOpacity: opacity\r\n\t\t}))\r\n\t\telse {\r\n\t\t\t$$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`).attr('opacity', opacity)\r\n\t\t\t$$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].stacked_group}`).attr('opacity', opacity)\r\n\t\t}\r\n\t}\r\n}\r\nconst resetScale = function (size) {\r\n\tthis.config.scale = size\r\n}\r\nconst getColorObj = function () {\r\n\tconst $$ = this\r\n\tconst config = $$.config\r\n\treturn {\r\n\t\topacity: config.color_opacity,\r\n\t\tschemes: config.color_schemes,\r\n\t\tcolors: config.color_colors,\r\n\t\tpatterns: config.color_patterns\r\n\t}\r\n}\r\nconst zoomAxis = function (scale) {\r\n\tthis.svg.call(this.zoom.transform, d3.zoomIdentity.scale(scale))\r\n}\r\nconst changeTableSettings = function ({\r\n\tpadding,\r\n\tinner,\r\n\toutter,\r\n\tcell\r\n}) {\r\n\tconst $$ = this\r\n\tconst config = $$.config\r\n\tif (cell.width <= (padding.left + padding.right)) return\r\n\tif (config.table_body_height <= (padding.top + padding.bottom)) return\r\n\r\n\tconfig.table_inner_width = inner.width\r\n\tconfig.table_outter_width = outter.width\r\n\tconfig.table_padding_top = padding.top\r\n\tconfig.table_padding_left = padding.left\r\n\tconfig.table_padding_bottom = padding.bottom\r\n\tconfig.table_padding_right = padding.right\r\n\r\n\tconfig.size_width += (cell.width - config.table_body_width) * ($$.nest_by_column.length || 1)\r\n\tconfig.table_body_width = cell.width\r\n\r\n\t$$.initialDraw()\r\n}\r\nconst changeSize = function ({\r\n\tsize = {},\r\n\tcontainer = {}\r\n}) {\r\n\tconst $$ = this\r\n\tconst config = $$.config\r\n\r\n\tconfig.size_width = size.width\r\n\tconfig.size_height = size.height\r\n\r\n\tconfig.container_width = container.width\r\n\tconfig.container_height = container.height\r\n\r\n\t$$.initialDraw()\r\n}\r\nconst redraw = function (config) {\r\n\tconst $$ = this\r\n\t$$.getConfig(config)\r\n\t\t$$.initBasicData()\r\n\tif (config.data.type === 'table') {\r\n\t\t$$.createContainer();\r\n\t\t$$.draw({})\r\n\t} else {\r\n\t\t$$.initialDraw();\r\n\t}\r\n}\r\nconst getChartSize = function () {\r\n\treturn {\r\n\t\twidth: this.config.size_width,\r\n\t\theight: this.config.size_height\r\n\t}\r\n}\r\nconst changeAxisTitleVal = function ({\r\n\taxis,\r\n\tnewVal\r\n}) {\r\n\tconst $$ = this\r\n\tconst className = `${axis}_axis_label`\r\n\t$$.main.select(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"][className]}`).text(newVal)\r\n}\r\nconst getAxisDomain = function () {\r\n\treturn this.domains || {}\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n\tgetColorList,\r\n\tgetPatternList,\r\n\tgetSizeList,\r\n\tremove,\r\n\tgetMapZoomLevel,\r\n\tgetMapInstance,\r\n\tselect,\r\n\tresetScale,\r\n\tzoomAxis,\r\n\tchangeTableSettings,\r\n\tgetChartSize,\r\n\tgetColorObj,\r\n\tchangeAxisTitleVal,\r\n\tgetAxisDomain,\r\n\tchangeSize,\r\n\tredraw\r\n})\n\n//# sourceURL=webpack://mc/./src/api.js?");

/***/ }),

/***/ "./src/axis.js":
/*!*********************!*\
  !*** ./src/axis.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n\r\n\r\n\r\n\r\nconst getYDomain = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const type = config.data_type;\r\n\r\n  let row_aggressions = config.data_row_aggressions\r\n  let data_combined = config.data_combined\r\n  let domain_list = []\r\n  \r\n  row_aggressions.forEach((r, idx) => {\r\n    let combined = data_combined[idx]\r\n    let data_y = [], data_y2 = [], y_style = {}, y2_style = {}, aggr_domain = {}, display_percent = {y: true, y2: true}, align = false\r\n    combined.forEach(v => {\r\n      let colored_stacked = v.bars && v.bars.colored && v.bars.colored.stacked;\r\n      let axis = v.axis;\r\n      let aggr = v.bars ? v.bars.aggr : r[0];\r\n      let chartType = v.type || type;\r\n      let domain = []\r\n      let axis_style = v.axis_style\r\n      let data = v.data || config.data_json\r\n      \r\n      if(axis_style.align) align = true\r\n\r\n      if(colored_stacked) {\r\n        d3.nest()\r\n          .key(function (d) { \r\n            return $$.getCombinedKeys({data: d, category: config.data_column_categories.concat(config.data_row_categories)})\r\n          })\r\n          .sortKeys($$.sortFunction)\r\n          .rollup(function(d){\r\n            if(chartType !== 'line') {\r\n              domain.push(d.reduce((a, b) => a += (b[aggr] || 0), 0))\r\n            } else {\r\n              d.forEach(sd => domain.push(sd[aggr]))\r\n            }\r\n          })\r\n          .entries(data)\r\n      } else {\r\n        domain = data.filter(d => Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d[aggr])).map(d => d[aggr])\r\n      }\r\n\r\n      if(axis === 'y') {\r\n        domain.forEach(d => data_y.push(d))\r\n        if(axis_style) {\r\n          y_style = axis_style\r\n        }\r\n        if(!v.percent) {\r\n          display_percent.y = false\r\n        }\r\n      }\r\n      if(axis === 'y2') {\r\n        domain.forEach(d => data_y2.push(d))\r\n        if(axis_style) {\r\n          y2_style = axis_style\r\n        }\r\n        if(!v.percent) {\r\n          display_percent.y2 = false\r\n        }\r\n      }\r\n\r\n      aggr_domain[aggr] = d3.extent(domain)\r\n    })\r\n\r\n    let config_y = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(y_style) ? y_style.tick.range : [], config_y2 = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(y2_style) ? y2_style.tick.range : [];\r\n    let y_domain = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(config_y) ? config_y : Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(data_y) ? [d3.min([...data_y, 0]), d3.max([...data_y, 0]) * 1.1] : []\r\n    let y2_domain = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(config_y2) ? config_y2 : Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(data_y2) ? [d3.min([...data_y2, 0]), d3.max([...data_y2, 0]) * 1.1] : []\r\n    if(y_domain[0] === 0 && y_domain[1] === 0) {\r\n      y_domain[1] = 1\r\n    }\r\n    if(y2_domain[0] === 0 && y2_domain[1] === 0) {\r\n      y2_domain[1] = 1\r\n    }\r\n    \r\n    if(type !== 'scatter' && align) { \r\n      let temp = [...y2_domain, ...y_domain].sort((a, b) => a - b)\r\n      let new_domain = [temp[0] || 0, temp[temp.length - 1] || 1]\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(y_domain)) y_domain = new_domain\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(y2_domain)) y2_domain = new_domain\r\n    }\r\n    \r\n    domain_list.push({\r\n      aggr_idx: idx,\r\n      aggr_domain: aggr_domain,\r\n      y: y_domain,\r\n      y2: y2_domain,\r\n      userDefined_y: Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(config_y),\r\n      userDefined_y2: Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(config_y2),\r\n      y_style: y_style,\r\n      y2_style: y2_style,\r\n      y_percent: display_percent.y,\r\n      y2_percent: display_percent.y2\r\n    })\r\n  })\r\n\r\n  $$.domain_list = domain_list\r\n\r\n  return domain_list\r\n}\r\n\r\nconst getDomainForZeroBasedAxies = function({domain_y, domain_y2}) {\r\n  let actual_y = domain_y, actual_y2 = domain_y2, flag = true\r\n  \r\n  //y轴最大值小于等于0，y2轴最小值大于等于0\r\n  if(actual_y[1] <= 0 && actual_y2[0] >= 0) {\r\n    actual_y[1] = (actual_y[1] - actual_y[0]) / 2\r\n    if(actual_y[1] !== 0) {\r\n      actual_y2[0] = actual_y[0] / actual_y[1] * actual_y2[1]\r\n    }\r\n  //y轴最小值大于等于0，y2轴最大值小于等于0\r\n  } else if(actual_y[0] >= 0 && actual_y2[1] <= 0) {\r\n    actual_y2[1] = (actual_y2[1] - actual_y2[0]) / 2\r\n    actual_y[0] = actual_y2[0] / actual_y2[1] * actual_y[1]\r\n  //y轴最大值大于0，y2轴最大值大于0\r\n  } else if(actual_y[1] > 0 && actual_y2[1] > 0) {\r\n   if(actual_y[0] < 0) {\r\n     if(actual_y2[0] < 0) {\r\n       if(actual_y[0] / actual_y2[0] <= 1) {\r\n         actual_y2[1] = actual_y[1] / actual_y[0] * actual_y2[0]\r\n       } else {\r\n         actual_y2[0] = actual_y[0] / actual_y[1] * actual_y2[1]\r\n       }\r\n     } else {\r\n       actual_y2[0] = actual_y[0] / actual_y[1] * actual_y2[1]\r\n     }\r\n   } else {\r\n     if(actual_y2[0] < 0) {\r\n       actual_y[0] = actual_y2[0] / actual_y2[1] * actual_y[1]\r\n     } else {\r\n       flag = false\r\n     }\r\n   }\r\n  //y轴最大值大于0，最小值小于0，y2轴最大值小于等于0\r\n  } else if(actual_y[1] > 0 && actual_y[0] < 0 && actual_y2[1] <= 0) {\r\n    actual_y2[1] = actual_y2[0] / (actual_y[0] / actual_y[1])\r\n  //y2轴最大值大于0，最小值小于0，y轴最大值小于等于0\r\n  } else if(actual_y2[1] > 0 && actual_y2[0] < 0 && actual_y[1] <= 0) {\r\n    actual_y[1] = actual_y[0] / (actual_y2[0] / actual_y2[1])\r\n  //不需要计算\r\n  } else {\r\n    flag = false\r\n  }\r\n\r\n  return {\r\n    actual_y, \r\n    actual_y2,\r\n    flag\r\n  }\r\n}\r\n\r\nconst definedYScale = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const isRotated = config.axis_rotated\r\n\r\n  $$.domain_list.forEach(yDomain => {\r\n    let domain_y = yDomain.y, domain_y2 = yDomain.y2, userDefined_y = yDomain.userDefined_y, userDefined_y2 = yDomain.userDefined_y2;\r\n    let y_title = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(yDomain.y_style) ? yDomain.y_style.text.title : undefined, y2_title = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(yDomain.y2_style) ? yDomain.y2_style.text.title : undefined\r\n\r\n    const actual_range = isRotated ? [0, $$.width_one_chart] : [$$.height_one_chart, 0]\r\n    yDomain.y_scale = userDefined_y ? d3.scaleLinear().range(actual_range).domain(domain_y) : \r\n      d3.scaleLinear().range(actual_range).domain(domain_y).nice()\r\n\r\n    if(yDomain.y2_style.show) {\r\n      yDomain.y2_scale = userDefined_y2 ? d3.scaleLinear().range(actual_range).domain(domain_y2) : \r\n        d3.scaleLinear().range(actual_range).domain(domain_y2).nice()\r\n      \r\n      if(yDomain.y2_style.zeroAligned) {\r\n        let { actual_y, actual_y2, flag } = $$.getDomainForZeroBasedAxies({\r\n          domain_y,\r\n          domain_y2\r\n        })\r\n        \r\n        if(flag) {\r\n          yDomain.y_scale = d3.scaleLinear().range(actual_range).domain(actual_y).nice()\r\n          yDomain.y2_scale = d3.scaleLinear().range(actual_range).domain(actual_y2).nice()\r\n\r\n          let temp = $$.getDomainForZeroBasedAxies({\r\n            domain_y: yDomain.y_scale.domain(),\r\n            domain_y2: yDomain.y2_scale.domain()\r\n          })\r\n\r\n          yDomain.y_scale = d3.scaleLinear().range(actual_range).domain(temp.actual_y)\r\n          yDomain.y2_scale = d3.scaleLinear().range(actual_range).domain(temp.actual_y2)\r\n        }\r\n      }\r\n    }\r\n    \r\n    y_title && ($$.domains[y_title] = {\r\n          domain: yDomain.y_scale.domain(),\r\n          ticks_length: yDomain.y_scale.ticks().length\r\n        })\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(domain_y2)) {\r\n      y2_title && ($$.domains[y2_title] = {\r\n              domain: yDomain.y2_scale.domain(),\r\n              ticks_length: yDomain.y2_scale.ticks().length\r\n            })\r\n    }\r\n  })\r\n}\r\n\r\nconst drawGrid = function({svg, height, idx=0, idy=0, scale_x, scale_y}) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const cell_width = config.table_body_width, cell_height = config.table_body_height;\r\n  let chart_height = height || $$.height,\r\n      grid_style = config.grid_style,\r\n      grid_show = config.grid_show,\r\n      cutoff_style = config.cutoff_style,\r\n      cutoff_show = config.cutoff_show;\r\n\r\n  !grid_style.stroke && (grid_style.stroke = '#eee')\r\n  !cutoff_style.stroke && (cutoff_style.stroke = '#bbb')\r\n\r\n  let grid_group = svg.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].grid}`);\r\n  let tickArray = $$.calculateTickvalues(config.axis_y_tick_counts, scale_y.domain())\r\n  let cuttoffStyle = Object.keys(cutoff_style).map(g => `${g}:${cutoff_style[g]}`).join(';')\r\n  let gridStyle = Object.keys(grid_style).map(g => `${g}:${grid_style[g]}`).join(';')\r\n\r\n  let chart_x = idx * chart_height\r\n  let cell_x = idx * cell_width\r\n  let cell_y = idy * cell_height\r\n      \r\n  //add grid lines\r\n  if(grid_show) {\r\n    if($$.isBarLineType) {\r\n      if(config.axis_rotated) {\r\n        grid_group.append('g')\r\n          .attr(\"transform\", `translate(${chart_x}, ${$$.height})`)\r\n          .call(\r\n            d3.axisBottom(scale_y)\r\n              .tickSize(-$$.height)\r\n              .tickValues(tickArray)\r\n              .tickFormat('')\r\n          )\r\n      } else {\r\n        grid_group.append('g')\r\n          .attr('transform', `translate(0, ${chart_x})`)\r\n          .call(\r\n            d3.axisLeft(scale_y)\r\n              .tickSize(-$$.width)\r\n              .tickValues(tickArray)\r\n              .tickFormat('')\r\n          )\r\n      }\r\n    } else {\r\n      let tickArray2 = $$.calculateTickvalues(config.axis_x_tick_counts, scale_x.domain())\r\n      //add grid lines\r\n      grid_group.append('g')\r\n        .attr(\"transform\", `translate(${cell_x}, ${cell_y})`)\r\n        .call(\r\n          d3.axisLeft(scale_y)\r\n          .tickValues(tickArray)\r\n          .tickSize(-$$.width_one_chart)\r\n          .tickFormat('')\r\n        )\r\n      grid_group.append('g')\r\n        .attr(\"transform\", `translate(${cell_x}, ${cell_y + $$.height_one_chart})`)\r\n        .call(\r\n          d3.axisBottom(scale_x)\r\n            .tickValues(tickArray2)\r\n            .tickSize(-$$.height_one_chart)\r\n            .tickFormat('')\r\n        )\r\n    }\r\n\r\n    grid_group.selectAll('path').attr('style', 'stroke: transparent')\r\n    grid_group.selectAll('line').attr('style', gridStyle)\r\n    grid_group.select('line').attr('style', 'stroke: transparent')\r\n  }\r\n\r\n  if(cutoff_show) {\r\n    svg.append('g')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].grid} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].grid}-line`)\r\n      .attr(\"transform\", `translate(${cell_x}, ${cell_y})`)\r\n      .append('line')\r\n      .attr('x1', 0)\r\n      .attr('x2', $$.width_one_chart)\r\n      .attr('y1', $$.height_one_chart)\r\n      .attr('y2', 0)\r\n      .attr('style', cuttoffStyle)\r\n  }\r\n}\r\n\r\nconst calculateTickvalues = function(tickCounts, domain) {\r\n  if(!tickCounts) return null\r\n\r\n  let tickArray = [], interval = (domain[1] - domain[0]) / tickCounts;\r\n  for(let i=0; i<=tickCounts; i++) {\r\n    tickArray.push(domain[0] + interval * i)\r\n  }\r\n\r\n  //if(tickArray.findIndex((e) => e === 0) === -1) {}\r\n  return tickArray\r\n}\r\n\r\nconst drawAxisById = function({idx=0, idy=0, container, scale, axis, style, base_axis=true, show_percent=false}) { \r\n  const $$ = this;\r\n  const config = $$.config;\r\n  let isRotated = config.axis_rotated,\r\n      width = config.table_body_width, \r\n      height = config.table_body_height,\r\n      isScatter = config.data_type === 'scatter',\r\n      isArea = config.data_type === 'area',\r\n      isYAxis = axis === 'y',\r\n      isY2Axis = axis === 'y2',\r\n      axis_format = show_percent ? $$.axis_format_percent : $$.axis_format,\r\n      translate_factor = '0, 0'\r\n \r\n  if(isYAxis || isY2Axis) {\r\n    let tick_style = style.tick.style,\r\n        tick_rotate = style.tick.rotate,\r\n        text_style = style.text.style,\r\n        line_style = style.line.style;\r\n  \r\n    !text_style['font-size'] && (text_style['font-size'] = $$.textFont)\r\n    !tick_style['font-size'] && (tick_style['font-size'] = $$.textFont)\r\n    !text_style['fill'] && (text_style['fill'] = $$.textColor)\r\n    !tick_style['fill'] && (tick_style['fill'] = $$.textColor)\r\n    !line_style['stroke'] && (line_style['stroke'] = $$.textColor)\r\n\r\n    let axis_func = (isRotated ? (isYAxis ? d3.axisBottom(scale) : d3.axisTop(scale)) : (isYAxis ? d3.axisLeft(scale) : d3.axisRight(scale)))\r\n                .tickValues($$.calculateTickvalues(style.tick.counts, scale.domain()))\r\n                .tickFormat(axis_format)\r\n\r\n    let axis = container.append(\"g\")\r\n      .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y_axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y_axis}-${idx}`)\r\n      .call(axis_func)\r\n    // console.log('idx', idx);\r\n    // console.log('$$.nest_by_row.length', $$.nest_by_row.length)\r\n    // if (idx === $$.nest_by_row.length - 1) {\r\n    if(style.text.show) {\r\n      axis\r\n        .append(\"text\")\r\n        .attr('x', isRotated ? $$.width_one_chart : 0)\r\n        .attr(\"y\", isRotated ? \r\n          (isYAxis ? ($$.margin.bottom - _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h) : -$$.margins.axis_right_space) : \r\n          (isYAxis ? -$$.margins.axis_left_space + 5 : $$.margins.axis_right_space))\r\n        .attr(\"transform\", `rotate(${isRotated ? 0 : -90})`)\r\n        .attr(\"text-anchor\", \"end\")\r\n        .text(() => {\r\n          let max_length = isRotated ? $$.width_one_chart : $$.height_one_chart\r\n          return $$.truncateText({\r\n            text: style.text.title, \r\n            max_length, \r\n            fontSize: text_style['font-size']\r\n          })\r\n        })\r\n        .attr('style', Object.keys(text_style).map(g => `${g}:${text_style[g]}`).join(';'))\r\n        .attr('class', _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].y_axis_label)\r\n    }\r\n    // }\r\n\r\n    let tick_height = (isRotated ? $$.width_one_chart : $$.height_one_chart) / scale.ticks().length, flag = tick_height < _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h;\r\n    let total_height = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h\r\n    axis.selectAll(`.tick text`)\r\n      .attr('style', Object.keys(tick_style).filter(k => k !== 'fill').map(g => `${g}:${tick_style[g]}`).join(';'))\r\n      .attr('fill', () => {\r\n          if(flag) {\r\n            if(total_height < _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h) {\r\n              total_height += tick_height\r\n              return 'transparent'\r\n            } else {\r\n              total_height = 0\r\n              return tick_style.fill\r\n            }\r\n          } else {\r\n            return tick_style.fill\r\n          }\r\n        })\r\n      .attr('transform', () => {\r\n        const factor = isYAxis ? -1 : 1\r\n        const translate_factor = tick_rotate === 45 ? `${5*factor}, ${-15*factor}` : tick_rotate === -45 ? `${5*factor}, ${10*factor}` : tick_rotate === 90 ? `${20*factor}, ${-25*factor}` : '0, 0'\r\n        return `translate(${translate_factor})rotate(${tick_rotate || 0})`\r\n      })\r\n      .attr('text-anchor', isYAxis ? 'end' : 'start')\r\n\r\n    if(!style.line.show) {\r\n      axis.select('path').attr('stroke', 'transparent')\r\n      axis.selectAll(`.tick line`).attr('stroke', 'transparent')\r\n    } else {\r\n      total_height = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h\r\n      axis.select('path').attr('style', Object.keys(line_style).map(g => `${g}:${line_style[g]}`).join(';'))\r\n      axis.selectAll(`.tick line`)\r\n        .attr('stroke', () => {\r\n          if(flag){\r\n            if(total_height < _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h) {\r\n              total_height += tick_height\r\n              return 'transparent'\r\n            } else {\r\n              total_height = 0\r\n              return line_style.stroke\r\n            }\r\n          } else {\r\n            return line_style.stroke\r\n          }\r\n        })\r\n    }\r\n\r\n    if(isRotated) {\r\n      if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(tick_rotate)) tick_rotate = 90\r\n      axis.attr(\"transform\", `translate(${$$.width_one_chart * idx}, ${isYAxis ? 0 : -$$.margins.row_title_space})`)\r\n    \r\n      axis.selectAll(`.tick text`)\r\n        .attr('transform', () => {\r\n          const trans = isYAxis ? (tick_rotate === 0 || tick_rotate === -45 ? '0, 0' : '12, 10') : (tick_rotate === 90 ? '-12, -10' : '0, 0')\r\n          return `translate(${trans})rotate(${tick_rotate})`\r\n        })\r\n        .attr('text-anchor', isYAxis ? (tick_rotate === 90 ? 'start' : tick_rotate === -45 ? 'end' : 'middle') : (tick_rotate === 90 || tick_rotate === 45 ? 'end' : tick_rotate === -45 ? 'start' : 'middle'))\r\n\r\n      if(idx !== 0) {\r\n        axis.select(`.tick text`).attr('fill', 'transparent')\r\n      }\r\n    } else {\r\n      if(isScatter) {\r\n        axis.attr(\"transform\", `translate(${width * idx}, ${height * idy})`)\r\n      } else {\r\n        axis.attr(\"transform\", isYAxis ? `translate(${$$.margin.left - $$.margins.row_title_space - 1}, ${$$.height_one_chart * idx})` : `translate(0, ${$$.height_one_chart * idx})`)\r\n      }\r\n\r\n      if(idx !== 0) {\r\n        let group = axis.selectAll(`.tick text`)\r\n        d3.select(axis.selectAll(`.tick text`)['_groups'][0][group.size() - 1]).attr('fill', 'transparent')\r\n      }\r\n    }\r\n  }\r\n\r\n  if(axis === 'x') {\r\n    let tick_style = config.axis_x_tick_style,\r\n        tick_counts = config.axis_x_tick_counts,\r\n        text_style = config.axis_x_text_style,\r\n        line_style = config.axis_x_line_style;\r\n    \r\n    // let tick_rotate = isDefined(config.axis_x_tick_rotate) ? config.axis_x_tick_rotate : ($$.margins.rotate_x_tick_text ? 90 : 0)\r\n    \r\n    // 计算x坐标轴的方向\r\n    let categories = config.data_column_categories;\r\n    let tick_styleList = config.divide_column_tick_styleList;\r\n    let tick_rotate;\r\n    let x_tick_style = tick_styleList.filter((item) => {\r\n      return item.name === categories[categories.length - 1]\r\n    });\r\n    if (x_tick_style[0]) {\r\n      tick_rotate = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(x_tick_style[0].rotate) ? x_tick_style[0].rotate : ($$.margins.rotate_x_tick_text ? 90 : 0);\r\n    } else {\r\n      tick_rotate = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.axis_x_tick_rotate) ? config.axis_x_tick_rotate : ($$.margins.rotate_x_tick_text ? 90 : 0);\r\n    }\r\n\r\n    \r\n    !text_style['font-size'] && (text_style['font-size'] = $$.textFont)\r\n    !tick_style['font-size'] && (tick_style['font-size'] = $$.textFont)\r\n    !text_style['fill'] && (text_style['fill'] = $$.textColor)\r\n    !tick_style['fill'] && (tick_style['fill'] = $$.textColor)\r\n    !line_style['stroke'] && (line_style['stroke'] = $$.textColor)\r\n    if (config.data_type==='scatter'){\r\n      line_style= style.line.style\r\n    }\r\n    let textStyle = Object.keys(text_style).map(g => `${g}:${text_style[g]}`).join(';')\r\n    let tickStyle = Object.keys(tick_style).filter(k => k !== 'fill').map(g => `${g}:${tick_style[g]}`).join(';')\r\n    let lineStyle = Object.keys(line_style).map(g => `${g}:${line_style[g]}`).join(';')\r\n    \r\n    let textAnchor = (tick_rotate === -45 || isRotated) ? 'end' : tick_rotate ? 'start' : 'middle'\r\n\r\n    if(isRotated) {\r\n      translate_factor = tick_rotate === 90 ? '-15, 25' : tick_rotate === -45 ? '-5, -15' : \r\n      tick_rotate === 45 ? '-5, 15' : '0, 0'\r\n    } else {\r\n      translate_factor = tick_rotate === 90 ? '15, 7.5' : '0, 0'\r\n    }\r\n\r\n    let xAxis = (isRotated ? d3.axisLeft(scale) : d3.axisBottom(scale))\r\n                .tickFormat((Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"inArray\"])(['bin', 'numeric'], config.axis_x_type) || isScatter) ? axis_format : $$.tick_label_format())\r\n    \r\n    if(isScatter) {\r\n      let tickArray = $$.calculateTickvalues(tick_counts, scale.domain())\r\n      xAxis.tickValues(tickArray)\r\n    }\r\n\r\n    let x_axis;\r\n\r\n    if(isRotated) {\r\n      if(base_axis) {\r\n        x_axis = container.append(\"g\")\r\n          .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis}`)\r\n          .call(xAxis)\r\n      } else {\r\n        if(config.axis_x_line_show) {\r\n          container.append('g')\r\n            .append('path')\r\n            .attr('d', `M ${idx * $$.width_one_chart}, 0 V ${$$.height}`)\r\n            .attr('style', lineStyle)\r\n        } \r\n      }\r\n    } else {\r\n      if (isArea) {\r\n        if(base_axis) {\r\n          x_axis = container.append(\"g\")\r\n            .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis}-${idx}-${idy}`)\r\n            .call(xAxis)\r\n          x_axis.attr(\"transform\", `translate(0, ${(idx + 1) * $$.height_one_chart})`)\r\n        }\r\n      } else {\r\n        if(base_axis) {\r\n          x_axis = container.append(\"g\")\r\n            .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis}-${idx}-${idy}`)\r\n            .call(xAxis)\r\n          \r\n          x_axis.attr(\"transform\", isScatter ? `translate(${width * idx}, ${height * idy + $$.height_one_chart})` : `translate(0, ${$$.height})`)\r\n        } else {\r\n           if(config.axis_x_line_show) {\r\n             container.append('g')\r\n               .append('path')\r\n               .attr('d', `M 0, ${idx * $$.height_one_chart} H ${$$.width}`)\r\n               .attr('style', lineStyle)\r\n           }\r\n        }\r\n      }\r\n   \r\n    }\r\n\r\n    if(x_axis) {\r\n      if(config.axis_x_text_show) {\r\n        if(!isRotated) {\r\n          let xTitle;\r\n          if (isArea) {\r\n            xTitle =x_axis.append(\"text\")\r\n            .attr(\"text-anchor\", isRotated ? \"start\" : \"end\")\r\n            .attr('transform', () => {\r\n              return `translate(${isRotated ? -$$.margin.left+_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h : $$.width_one_chart}, ${isRotated ? 0 : ($$.margin.bottom - _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h - 10)})rotate(${isRotated ? 90 : 0})`\r\n            })\r\n            .text(config.axis_x_text_title[idx])\r\n            .attr('style', textStyle)\r\n            .attr('class', _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis_label)\r\n          } else {\r\n            xTitle =x_axis.append(\"text\")\r\n            .attr(\"text-anchor\", isRotated ? \"start\" : \"end\")\r\n            .attr('transform', () => {\r\n              return `translate(${isRotated ? -$$.margin.left+_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h : $$.width_one_chart}, ${isRotated ? 0 : (_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h * 3)})rotate(${isRotated ? 90 : 0})`\r\n              // return `translate(${isRotated ? -$$.margin.left+CLASS.sizeFor1Char.h : 578.703125}, ${isRotated ? 0 : (8)})rotate(${isRotated ? 90 : 0})`\r\n            })\r\n            .text(config.axis_x_text_title)\r\n            .attr('style', textStyle)\r\n            .attr('class', _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].x_axis_label)\r\n          }\r\n          // 计算svg和x轴标题之和，重置svg的宽度，将标题放置最右边\r\n          // let svgWidth = $$.svg.property('width').baseVal.value + container.select('.mc-x-axis-label').node().getBBox().width + 10;\r\n          // let yLength = $$.config.data_combined[0].length;\r\n          // let yTextWidth = container.select('.mc-x-axis-label').node().getBBox().width;\r\n          // if (yLength === 1) {\r\n          //   // 一个y坐标轴的话直接设置svg宽度，避免被另一个坐标轴影响\r\n          //   let svgWidth = parseInt($$.width) + parseInt($$.y_category_width) + yTextWidth + 10;\r\n          //   $$.svg.attr('width', svgWidth);\r\n          //   if (isArea) {\r\n          //     xTitle.attr('transform', () => {\r\n          //       return `translate(${isRotated ? -$$.margin.left+CLASS.sizeFor1Char.h : $$.width_one_chart}, ${isRotated ? 0 : ($$.margin.bottom - CLASS.sizeFor1Char.h - 10)})rotate(${isRotated ? 90 : 0})`\r\n          //     })\r\n          //   } else {\r\n          //     xTitle.attr('transform', () => {\r\n          //       return `translate(${isRotated ? -$$.margin.left+CLASS.sizeFor1Char.h : parseInt($$.width) + parseInt($$.y_category_width)}, ${isRotated ? 0 : (8)})rotate(${isRotated ? 90 : 0})`\r\n          //     })\r\n          //   }\r\n          // } else {\r\n          //   // 两个y坐标轴的话直接设置再加一个div放在最后面\r\n          //   let div_y_title = $$.MyContainer.append('div').attr('class', isRotated ? CLASS.bottom_div : CLASS.right_div);\r\n          //   $$.svg_y_title = div_y_title.append('svg').attr('width', yTextWidth).attr('height', $$.currentHeight).append(\"text\")\r\n          //   .attr(\"text-anchor\", isRotated ? \"start\" : \"end\")\r\n          //   .attr('transform', () => {\r\n          //     return `translate(${yTextWidth}, ${isRotated ? 0 : ($$.height + $$.margin.top + 10)}) rotate(${isRotated ? 90 : 0})`\r\n          //   })\r\n          //   .text(config.axis_x_text_title)\r\n          //   .attr('style', textStyle)\r\n          //   .attr('class', CLASS.x_axis_label)\r\n          // }\r\n        } else {\r\n          // 条形图添加标题\r\n          // let xTitle;\r\n          // xTitle =x_axis.append(\"text\")\r\n          //   .attr(\"text-anchor\", isRotated ? \"start\" : \"end\")\r\n          //   .attr('transform', () => {\r\n          //     return `translate(${isRotated ? -$$.margin.left+CLASS.sizeFor1Char.h : $$.width_one_chart}, ${isRotated ? 0 : (CLASS.sizeFor1Char.h * 3)})rotate(${isRotated ? 90 : 0})`\r\n          //   })\r\n          //   .text(config.axis_x_text_title)\r\n          //   .attr('style', textStyle)\r\n          //   .attr('class', CLASS.x_axis_label)\r\n        }\r\n      }\r\n\r\n      let bands = Math.round((isScatter ? 1 : _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h / scale.bandwidth()) + (isRotated ? 0.5 : 0)) || 1\r\n\r\n      if (tick_rotate === 90) {\r\n        // x轴刻度值如果是竖向显示的话，每个中文文字方向不做旋转\r\n        x_axis.selectAll(`.tick text`)\r\n        .attr('style', tickStyle)\r\n        .attr('fill', (d, i) => {\r\n          if(tick_rotate || isRotated) {\r\n            return (isRotated ? i + 1 : i) % bands ? 'transparent' : tick_style.fill\r\n          } else {\r\n            return tick_style.fill\r\n          }\r\n        })\r\n        .attr(\"writing-mode\", \"vertical-rl\")\r\n        .attr('text-anchor', () => {\r\n          return textAnchor\r\n        })\r\n      } else {\r\n        x_axis.selectAll(`.tick text`)\r\n        .attr('style', tickStyle)\r\n        .attr('fill', (d, i) => {\r\n          if(tick_rotate || isRotated) {\r\n            return (isRotated ? i + 1 : i) % bands ? 'transparent' : tick_style.fill\r\n          } else {\r\n            return tick_style.fill\r\n          }\r\n        })\r\n        .attr('transform', () => {\r\n          return `translate(${translate_factor})rotate(${tick_rotate})`\r\n        })\r\n        .attr('text-anchor', () => {\r\n          return textAnchor\r\n        })\r\n      }\r\n\r\n      if (!isRotated) {\r\n        // 调整x轴标题位置：根据刻度值的最大高度进行调整\r\n        let xMaxHeight = 0\r\n        if (tick_rotate === -45 || tick_rotate === 45) {\r\n          x_axis.selectAll('.tick text').call(g => {\r\n            if (g.nodes().length < 5) {\r\n              let curNode = g.nodes()[g.nodes().length - 1];\r\n              // xMaxHeight = (g.nodes()[g.nodes().length - 1].getBBox().width) / 2;\r\n              xMaxHeight = Math.sqrt(Math.pow(curNode.getBBox().width, 2)  / 2) + curNode.getBBox().y;\r\n            } else {\r\n              for (let i = 1; i < 4; i++){\r\n                let curNode = g.nodes()[g.nodes().length - i];\r\n                // if ((g.nodes()[g.nodes().length - i].getBBox().width) / 2  > xMaxHeight) {\r\n                //   xMaxHeight = (g.nodes()[g.nodes().length - i].getBBox().width) / 2;\r\n                // }\r\n                if ((Math.sqrt(Math.pow(curNode.getBBox().width, 2) / 2) + curNode.getBBox().y)  > xMaxHeight) {\r\n                  xMaxHeight = Math.sqrt(Math.pow(curNode.getBBox().width, 2) / 2) + curNode.getBBox().y;\r\n                }\r\n              }\r\n            }\r\n          })\r\n          xMaxHeight = xMaxHeight + 6;\r\n        } else {\r\n          x_axis.selectAll('.tick text').call(g => {\r\n            if (g.nodes().length > 0) {\r\n              if (g.nodes().length < 5) {\r\n                let curNode = g.nodes()[g.nodes().length - 1];\r\n                // xMaxHeight = g.nodes()[g.nodes().length - 1].getBBox().height;\r\n                xMaxHeight = curNode.getBBox().height + curNode.getBBox().y;\r\n              } else {\r\n                for (let i = 1; i < 4; i++){\r\n                  let curNode = g.nodes()[g.nodes().length - i];\r\n                  // if (g.nodes()[g.nodes().length - i].getBBox().height > xMaxHeight) {\r\n                  //   xMaxHeight = g.nodes()[g.nodes().length - i].getBBox().height;\r\n                  // }\r\n                  if (curNode.getBBox().height + curNode.getBBox().y > xMaxHeight) {\r\n                    xMaxHeight = curNode.getBBox().height + curNode.getBBox().y;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          })\r\n        }\r\n        let rotatedY = x_axis.select('.mc-x-axis-label');\r\n        if(!rotatedY.empty()) {\r\n          let rotatedYHeight = rotatedY.node().getBBox().height;\r\n          rotatedY.attr('transform', () => {\r\n            return `translate(${isRotated ? -$$.margin.left+_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h : $$.width_one_chart}, ${isRotated ? 0 : (xMaxHeight + rotatedYHeight)})rotate(${isRotated ? 90 : 0})`\r\n            // return `translate(${isRotated ? -$$.margin.left+CLASS.sizeFor1Char.h : 578.703125}, ${isRotated ? 0 : (8)})rotate(${isRotated ? 90 : 0})`\r\n          });\r\n        }\r\n      }\r\n      \r\n      // x_axis.selectAll(`.tick text`)\r\n      //   .attr('style', tickStyle)\r\n      //   .attr('fill', (d, i) => {\r\n      //     if(tick_rotate || isRotated) {\r\n      //       return (isRotated ? i + 1 : i) % bands ? 'transparent' : tick_style.fill\r\n      //     } else {\r\n      //       return tick_style.fill\r\n      //     }\r\n      //   })\r\n      //   .attr('transform', () => {\r\n      //     return `translate(${translate_factor})rotate(${tick_rotate})`\r\n      //   })\r\n      //   .attr(\"writing-mode\", \"vertical-rl\")\r\n      //   .attr('text-anchor', () => {\r\n      //     return textAnchor\r\n      //   })\r\n\r\n      // 坐标轴刻度值重叠的话使用省略号\r\n      if (!isRotated && tick_rotate === 0) {\r\n        x_axis.selectAll(`.tick text`)\r\n        // .attr(\"text-anchor\", \"start\").attr(\"transform\", \"translate(0,0) rotate(30)\")\r\n        .call(g => {\r\n          // console.log(scale.bandwidth())\r\n          // console.log(g.nodes())\r\n          if (scale.bandwidth) {\r\n            let xBandWdith = scale.bandwidth();\r\n            let xWidth = xBandWdith/(1 - scale.padding());\r\n            for (let i = 0; i < g.nodes().length; i++){\r\n              // console.log(g.nodes()[i].getBBox())\r\n              if (g.nodes()[i].getBBox().width > xWidth) {\r\n                let val = g.nodes()[i].firstChild;\r\n                let splitVal = val.splitText(1);\r\n                let textDom = document.createTextNode('...')\r\n                g.nodes()[i].insertBefore(textDom, splitVal)\r\n                g.nodes()[i].childNodes[2].remove();\r\n              }\r\n            }\r\n          }\r\n        })\r\n      } else if (isRotated && tick_rotate === 90) {\r\n        x_axis.selectAll(`.tick text`)\r\n        // .attr(\"text-anchor\", \"start\").attr(\"transform\", \"translate(0,0) rotate(30)\")\r\n        .call(g => {\r\n          // console.log(scale.bandwidth())\r\n          // console.log(g.nodes())\r\n          if (scale.bandwidth) {\r\n            let xBandWdith = scale.bandwidth();\r\n            let xWidth = xBandWdith/(1 - scale.padding());\r\n            for (let i = 0; i < g.nodes().length; i++){\r\n              // console.log(g.nodes()[i].getBBox())\r\n              if (g.nodes()[i].getBBox().height > xWidth) {\r\n                let val = g.nodes()[i].firstChild;\r\n                let splitVal = val.splitText(1);\r\n                let textDom = document.createTextNode('...')\r\n                g.nodes()[i].insertBefore(textDom, splitVal)\r\n                g.nodes()[i].childNodes[2].remove();\r\n              }\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      if(!config.axis_x_line_show) {\r\n        x_axis.select('path').attr('stroke', 'transparent')\r\n        x_axis.selectAll(`.tick line`).attr('stroke', 'transparent')\r\n      } else {\r\n        x_axis.select('path').attr('style', lineStyle)\r\n        x_axis.selectAll(`.tick line`)\r\n          .attr('stroke', (d, i) => {\r\n            if(tick_rotate || isRotated) {\r\n              return (isRotated ? i + 1 : i) % bands ? 'transparent' : line_style.stroke\r\n            } else {\r\n              return line_style.stroke\r\n            }\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  if(axis === 'y') {\r\n    // y轴在水平方向；\r\n    // 刻度值都是均等的；\r\n    // 当isRotated为true的时候，刻度值重叠的话也是以省略号显示\r\n    if (isRotated && style.tick.rotate === 0 && !container.empty()) {\r\n      let containerWidth = container.node().getBBox().width;\r\n      let itemSum = 0;\r\n      let yMaxHeight = 0;\r\n      container.selectAll('.tick text').call(g => {\r\n        for (let i = 0; i < g.nodes().length; i++){\r\n          itemSum = itemSum + g.nodes()[i].getBBox().width;\r\n          if (g.nodes()[i].getBBox().height > yMaxHeight) {\r\n            yMaxHeight = g.nodes()[i].getBBox().height;\r\n          }\r\n        }\r\n        if (itemSum > containerWidth) {\r\n          for (let i = 0; i < g.nodes().length; i++){\r\n            let val = g.nodes()[i].firstChild;\r\n            let splitVal = val.splitText(1);\r\n            let textDom = document.createTextNode('...')\r\n            g.nodes()[i].insertBefore(textDom, splitVal)\r\n            g.nodes()[i].childNodes[2].remove();\r\n          }\r\n        }\r\n      })\r\n\r\n      // 根据刻度值最大高度调整标题位置\r\n      let rotatedY = container.select('.mc-y-axis-label');\r\n      if(!rotatedY.empty()) {\r\n        let rotatedYHeight = rotatedY.node().getBBox().height + 8;\r\n        rotatedY.attr('y', rotatedYHeight + yMaxHeight);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  getYDomain,\r\n  definedYScale,\r\n  getDomainForZeroBasedAxies,\r\n  drawGrid,\r\n  drawAxisById,\r\n  calculateTickvalues\r\n})\n\n//# sourceURL=webpack://mc/./src/axis.js?");

/***/ }),

/***/ "./src/check.js":
/*!**********************!*\
  !*** ./src/check.js ***!
  \**********************/
/*! exports provided: asHalfPixel, callFn, capitalize, ceil10, diffDomain, extend, getCssRules, getOption, hasValue, isArray, isBoolean, isDefined, isEmpty, isFunction, isNumber, isObject, isObjectType, isString, isUndefined, isValue, notEmpty, merge, sanitise, toArray, hasKey, inArray, dcDeepClone, browserIsIE, getTextSize, isInteger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"asHalfPixel\", function() { return asHalfPixel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"callFn\", function() { return callFn; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"capitalize\", function() { return capitalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ceil10\", function() { return ceil10; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"diffDomain\", function() { return diffDomain; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"extend\", function() { return extend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getCssRules\", function() { return getCssRules; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getOption\", function() { return getOption; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasValue\", function() { return hasValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isArray\", function() { return isArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isBoolean\", function() { return isBoolean; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isDefined\", function() { return isDefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isEmpty\", function() { return isEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObject\", function() { return isObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isObjectType\", function() { return isObjectType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isUndefined\", function() { return isUndefined; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isValue\", function() { return isValue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"notEmpty\", function() { return notEmpty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"merge\", function() { return merge; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sanitise\", function() { return sanitise; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toArray\", function() { return toArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasKey\", function() { return hasKey; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"inArray\", function() { return inArray; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dcDeepClone\", function() { return dcDeepClone; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"browserIsIE\", function() { return browserIsIE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getTextSize\", function() { return getTextSize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"isInteger\", function() { return isInteger; });\nconst isValue = v => v || v === 0;\r\nconst isFunction = v => typeof v === \"function\";\r\nconst isString = v => typeof v === \"string\";\r\nconst isNumber = v => typeof v === \"number\";\r\nconst isUndefined = v => typeof v === \"undefined\";\r\nconst isDefined = v => typeof v !== \"undefined\";\r\nconst isBoolean = v => typeof v === \"boolean\";\r\nconst ceil10 = v => Math.ceil(v / 10) * 10;\r\nconst asHalfPixel = n => Math.ceil(n) + 0.5;\r\nconst diffDomain = d => d[1] - d[0];\r\nconst isObjectType = v => typeof v === \"object\";\r\nconst isEmpty = o => (\r\n  isUndefined(o) || o === null ||\r\n    (isString(o) && o.length === 0) ||\r\n    (isObjectType(o) && Object.keys(o).length === 0)\r\n);\r\nconst notEmpty = o => !isEmpty(o);\r\n\r\n/**\r\n * Check if is array\r\n * @param {Array} arr\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nconst isArray = arr => arr && arr.constructor === Array;\r\n\r\n/**\r\n * Check if is object\r\n * @param {Object} obj\r\n * @returns {Boolean}\r\n * @private\r\n */\r\nconst isObject = obj => obj && !obj.nodeType && isObjectType(obj) && !isArray(obj);\r\n\r\nconst getOption = (options, key, defaultValue) => (\r\n  isDefined(options[key]) ? options[key] : defaultValue\r\n);\r\n\r\nconst hasValue = (dict, value) => {\r\n  let found = false;\r\n\r\n  Object.keys(dict).forEach(key => (dict[key] === value) && (found = true));\r\n\r\n  return found;\r\n};\r\n\r\nconst hasKey = (dict, key) => {\r\n  let found = false;\r\n  \r\n  Object.keys(dict).includes(key) && (found = true)\r\n\r\n  return found\r\n}\r\n\r\nconst inArray = (array, val) => {\r\n  let found = false;\r\n\r\n  (isArray(array) && array.indexOf(val) !== -1) && (found = true);\r\n\r\n  return found;\r\n}\r\n\r\n/**\r\n * Call function with arguments\r\n * @param {Function} fn Function to be called\r\n * @param {*} args Arguments\r\n * @return {Boolean} true: fn is function, false: fn is not function\r\n * @private\r\n */\r\nconst callFn = (fn, ...args) => {\r\n  const isFn = isFunction(fn);\r\n\r\n  isFn && fn.call(...args);\r\n  return isFn;\r\n};\r\n\r\n/**\r\n * Replace tag sign to html entity\r\n * @param {String} str\r\n * @return {String}\r\n * @private\r\n */\r\nconst sanitise = str => (isString(str) ? str.replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\") : str);\r\n\r\nconst extend = (target = {}, source) => {\r\n  for (const p in source) {\r\n    target[p] = source[p];\r\n  }\r\n\r\n  return target;\r\n};\r\n\r\n/**\r\n * Return first letter capitalized\r\n * @param {String} str\r\n * @return {String} capitalized string\r\n * @private\r\n */\r\nconst capitalize = str => str.charAt(0).toUpperCase() + str.slice(1);\r\n\r\n/**\r\n * Merge object returning new object\r\n * @param {Object} target\r\n * @param {Object} objectN\r\n * @returns {Object} merged target object\r\n * @private\r\n * @example\r\n *  var target = { a: 1 };\r\n *  utils.extend(target, { b: 2, c: 3 });\r\n *  target;  // { a: 1, b: 2, c: 3 };\r\n */ \r\nconst merge = (target, ...objectN) => {\r\n  if (!objectN.length || (objectN.length === 1 && !objectN[0])) {\r\n    return target;\r\n  }\r\n\r\n  const source = objectN.shift();\r\n\r\n  if (isObject(target) && isObject(source)) {\r\n    Object.keys(source).forEach(key => {\r\n      const value = source[key];\r\n\r\n      if (isObject(value)) {\r\n        !target[key] && (target[key] = {});\r\n\r\n        target[key] = merge(target[key], value);\r\n      } else {\r\n        target[key] = isArray(value) ?\r\n          value.concat() : value;\r\n      }\r\n    });\r\n  }\r\n\r\n  return extend(target, ...objectN);\r\n};\r\n\r\n/**\r\n * Convert to array\r\n * @param {Object} v\r\n * @returns {Array}\r\n * @private\r\n */\r\nconst toArray = v => [].slice.call(v);\r\n\r\n/**\r\n * Get css rules for specified stylesheets\r\n * @param {Array} styleSheets The stylesheets to get the rules from\r\n * @returns {Array}\r\n * @private\r\n */\r\nconst getCssRules = styleSheets => {\r\n  let rules = [];\r\n\r\n  styleSheets.forEach(sheet => {\r\n    try {\r\n      if (sheet.cssRules && sheet.cssRules.length) {\r\n        rules = rules.concat(toArray(sheet.cssRules));\r\n      }\r\n    } catch (e) {\r\n      console.error(`Error while reading rules from ${sheet.href}: ${e.toString()}`);\r\n    }\r\n  });\r\n\r\n  return rules;\r\n};\r\n\r\nconst dcDeepClone = (item) => {\r\n  if (!item) { return item; } // null, undefined values check\r\n\r\n  let types = [ Number, String, Boolean ], \r\n      result;\r\n\r\n  // normalizing primitives if someone did new String('aaa'), or new Number('444');\r\n  types.forEach(function(type) {\r\n    if (item instanceof type) {\r\n      result = type( item );\r\n    }\r\n  });\r\n\r\n  if (typeof result == \"undefined\") {\r\n    if (Object.prototype.toString.call( item ) === \"[object Array]\") {\r\n      result = [];\r\n      item.forEach(function(child, index) { \r\n          result[index] = dcDeepClone( child );\r\n      });\r\n    } else if (isObjectType(item)) {\r\n      // testing that this is DOM\r\n      if (item.nodeType && typeof item.cloneNode == \"function\") {\r\n        result = item.cloneNode( true );    \r\n      } else if (!item.prototype) { // check that this is a literal\r\n        if (item instanceof Date) {\r\n          result = new Date(item);\r\n        } else {\r\n          // it is an object literal\r\n          result = {};\r\n          for (var i in item) {\r\n              result[i] = dcDeepClone( item[i] );\r\n          }\r\n        }\r\n      } else {\r\n        // depending what you would like here,\r\n        // just keep the reference, or create new object\r\n        // if (false && item.constructor) {\r\n        //   // would not advice to do that, reason? Read below\r\n        //   result = new item.constructor();\r\n        // } else {\r\n        //   result = item;\r\n        // }\r\n        result = item;\r\n      }\r\n    } else {\r\n      result = item;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nconst browserIsIE = () => { //ie?\r\n return (!!window.ActiveXObject || \"ActiveXObject\" in window) \r\n}\r\n\r\nconst getTextSize = (fontSize,text) => {\r\n  let span = document.createElement(\"span\");\r\n  let result = {};\r\n  result.width = span.offsetWidth;\r\n  result.height = span.offsetHeight;\r\n  span.style.visibility = \"hidden\";\r\n  span.style.fontSize = fontSize;\r\n  //span.style.fontFamily = fontFamily;\r\n  span.style.display = \"inline-block\";\r\n  document.body.appendChild(span);\r\n  if(typeof span.textContent != \"undefined\"){\r\n    span.textContent = text;\r\n  }else{\r\n    span.innerText = text;\r\n  }\r\n  result.width = parseFloat(window.getComputedStyle(span).width) - result.width;\r\n  result.height = parseFloat(window.getComputedStyle(span).height) - result.height;\r\n  document.body.removeChild(span);\r\n  return result;\r\n}\r\n\r\nconst isInteger = (val) => {\r\n  let func = Number.isInteger || function(value) {\r\n    return typeof value === 'number' && \r\n      isFinite(value) && \r\n      Math.floor(value) === value;\r\n  };\r\n\r\n  return func(val)\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://mc/./src/check.js?");

/***/ }),

/***/ "./src/color.js":
/*!**********************!*\
  !*** ./src/color.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst generateColor = function(schemes, type, feature, color_range, color_list, data) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n\r\n  let colorRange = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color_range) ? color_range : Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(config.data_range_color) ? config.data_range_color[0] : [],\r\n      color_schemes = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(schemes) ? schemes : Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(config.color_schemes) ? config.color_schemes[0] : [],\r\n      colors = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color_list) ? color_list : (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(config.color_colors) && config.color_colors[0]) ? config.color_colors[0] : [],\r\n      colored_type = type || config.data_colored_type,\r\n      colored_feature = feature || config.data_colored_feature;\r\n\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(color_schemes)) {\r\n    color_schemes = colored_type === 'linear' ? _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_linear : _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_schemes\r\n  }\r\n\r\n  let pattern = d3.scaleOrdinal(color_schemes).range(); //d3.schemeSet3, schemeCategory10\r\n  //数值变量作为颜色，需要计算数值变量的范围\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_feature) && colored_type === 'linear') {\r\n    let y_colored = [], flag = true\r\n    let aggr_list = $$.domain_list.map(d => d.aggr_domain)\r\n    aggr_list.forEach(a => {\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(a[colored_feature])) {\r\n        y_colored = a[colored_feature]\r\n        flag = false\r\n      }\r\n    })\r\n    if(flag) {\r\n      y_colored = d3.extent((data || config.data_json).map((d) => d[colored_feature]));\r\n    }\r\n    \r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colorRange[0]) && colorRange[0] !== null) y_colored[0] = Number(colorRange[0])\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colorRange[1]) && colorRange[1] !== null) y_colored[1] = Number(colorRange[1])\r\n\r\n    let min = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(y_colored[0]) ? y_colored[0] : 0;\r\n    let max = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(y_colored[1]) ? y_colored[1] : min;\r\n    if (config.data_type!=='scatter'){\r\n          if(min > max) min = max;\r\n    }\r\n\r\n    $$.userDefined_colorRange = [min, max]\r\n\r\n    let linear_colors = color_schemes, count = 0;\r\n\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(colors) && Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(colors)) linear_colors = colors\r\n\r\n    linear_colors.forEach(l => {\r\n      if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(l)) count++\r\n    })\r\n    \r\n    if(count === linear_colors.length) {\r\n      linear_colors = color_schemes\r\n    }\r\n\r\n    if(linear_colors.length === 1) {\r\n      linear_colors = [linear_colors[0], linear_colors[0]]\r\n    }\r\n    \r\n    pattern = d3.scaleLinear().range(linear_colors).domain($$.userDefined_colorRange).clamp(true)\r\n  }\r\n\r\n  const ids = [];\r\n  const all_colors = {}\r\n  return function(d) {\r\n    let id = d\r\n    if(isNaN(id) || id === null || !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isString\"])(id)) id = '' + id\r\n    if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(id)) return color_schemes[0]\r\n    let color;\r\n    // if callback function is provided\r\n    if (colors[id]) {\r\n      color = colors[id];\r\n    // if not specified, choose from pattern\r\n    } else if(all_colors[id]) {\r\n      color = all_colors[id]\r\n    } else {\r\n      if(ids.indexOf(id) < 0) ids.push(id);\r\n      if(colored_type === 'linear') {\r\n        color = pattern(id)\r\n      } else {\r\n        color = pattern[ids.indexOf(id) % pattern.length];\r\n        all_colors[id] = color\r\n      }\r\n    }\r\n\r\n    return color;\r\n  };\r\n}\r\n\r\nconst modifyColorList = function({colored_type, colored_feature='', keys=[], color_function, pattern_function, aggr, type, cmi=\"0-0\", color_schemes, opacity, color_colors, color_patterns}) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const bindto = config.bindto;\r\n  if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color_function)) {\r\n    color_function = $$.color\r\n  }\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(keys)) return\r\n  \r\n  let list = []\r\n\r\n  if(colored_type === 'linear') {\r\n    list = d3.extent(keys).map((d, i) => {\r\n      let format_val = $$.axis_format($$.userDefined_colorRange[i])\r\n      return {\r\n        val: format_val, \r\n        color: color_function(d),\r\n        unique: $$.isBarLineType ? `${d}(${aggr})` : format_val,\r\n        index: i, \r\n        originalVal: d, \r\n        rangeType: i > 0 ? 'max' : 'min'\r\n      }\r\n    })\r\n  } else {\r\n    list = keys.map((d, i) => {\r\n      return {\r\n        val: d, \r\n        color: color_function(d), \r\n        fill: Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(pattern_function) ? pattern_function(d) : '',\r\n        unique: $$.isBarLineType ? `${d}(${aggr})` : d,\r\n        index: i, \r\n        className: $$.isBarLineType ? `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${i}-${cmi}` : `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${i}`,\r\n      }\r\n    })\r\n  }\r\n  \r\n  let colorObj = {\r\n    id: bindto,\r\n    aggr: $$.isBarLineType ? aggr : colored_feature,\r\n    name: colored_feature,\r\n    colored_type: colored_type,\r\n    key: `${colored_feature}(${aggr})`,\r\n    key_id: cmi,\r\n    type: colored_type === 'linear' ? 'linear' : type || '',\r\n    showRange: colored_type === 'linear',\r\n    list: list,\r\n    opacity: (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(opacity) ? opacity : config.color_opacity[0]) * 100 || 100\r\n  }\r\n\r\n  let scheme = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color_schemes) ? color_schemes : config.color_schemes[0]\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(scheme)) {\r\n    scheme = colored_type === 'linear' ? _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_linear : _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_schemes\r\n  }\r\n\r\n  let colorList = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color_colors) ? color_colors : config.color_colors[0]\r\n  \r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(colorList)) {\r\n    if(colored_type === 'linear') {\r\n      colorList = list.map(l => l.color)\r\n    } else {\r\n      colorList = {}\r\n      list.forEach(l => {\r\n        colorList[l.val] = l.color\r\n      })\r\n    }\r\n  }\r\n  \r\n  let patternList = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color_patterns) ? color_patterns : config.color_patterns[0]\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(patternList)) {\r\n    patternList = {}\r\n    list.forEach(l => {\r\n      patternList[l.val] = l.fill\r\n    })\r\n  }\r\n\r\n  colorObj.schemes = scheme\r\n  colorObj.colors = colorList\r\n  colorObj.patterns = patternList\r\n\r\n  config.colorList.push(colorObj)\r\n  return colorObj\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  generateColor,\r\n  modifyColorList\r\n})\n\n//# sourceURL=webpack://mc/./src/color.js?");

/***/ }),

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Options_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Options.js */ \"./src/Options.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\n\r\nconst getOptions = function() {\r\n  const config = new _Options_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n  return config.value;\r\n}\r\n\r\nconst loadConfig = function(config) {\r\n  const thisConfig = this.config;\r\n  let target;\r\n  let keys;\r\n  let read;\r\n\r\n  const find = () => {\r\n    const key = keys.shift();\r\n\r\n    if (key && target && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isObjectType\"])(target) && key in target) {\r\n      target = target[key];\r\n      return find();\r\n    } else if (!key) {\r\n      return target;\r\n    }\r\n\r\n    return undefined;\r\n  };\r\n\r\n  Object.keys(thisConfig).forEach(key => {\r\n    target = config;\r\n    keys = key.split(\"_\");\r\n    read = find();\r\n\r\n    if (Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(read)) {\r\n      thisConfig[key] = read;\r\n    }\r\n  });\r\n}\r\n\r\n//去重\r\nconst getUniqueArray = (arr) => {\r\n  let result = []\r\n  let obj = {}\r\n  for(let i of arr) {\r\n    if (!obj[i]) {\r\n      result.push(i)\r\n      obj[i] = 1\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\nconst getAllCombinedKeys = function({data, aggressions, category, join}) {\r\n  let keys = []\r\n  let $$ = this,\r\n      config = $$.config,\r\n      categories = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(category) ? category : config.data_column_categories,\r\n      join_factor = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(join) ? join : _Classes_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].join_factor,\r\n      total_aggr = aggressions.length;\r\n  \r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isArray\"])(categories) && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(categories)) {\r\n    data.forEach((d, i) => {\r\n      let combined_keys = [];\r\n      let aggr = total_aggr <= 1 ? aggressions[0] : aggressions[i % total_aggr]\r\n      categories.forEach(v => {\r\n        let val = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(v.val) ? d[v.val] : d[v]\r\n        combined_keys.push(val)\r\n      })\r\n      Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(aggr) && combined_keys.push(aggr)\r\n      let key = combined_keys.join(join_factor)\r\n      if(keys.indexOf(key) === -1) {\r\n        keys.push(key)\r\n      }\r\n    })\r\n  }\r\n\r\n  return keys\r\n}\r\n\r\nconst getCombinedKeys = function({data, aggression, category, join}) {\r\n  let $$ = this,\r\n      config = $$.config,\r\n      categories = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(category) ? category : config.data_column_categories,\r\n      aggressions = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(aggression) ? (Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isArray\"])(aggression) ? aggression : [aggression]) : [],\r\n      join_factor = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(join) ? join : _Classes_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].join_factor,\r\n      combined_keys = [];\r\n  \r\n  Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isArray\"])(categories) && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(categories) && categories.forEach(v => {\r\n    let val = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(v.val) ? data[v.val] : data[v]\r\n    combined_keys.push(val)\r\n  })\r\n\r\n  combined_keys = combined_keys.concat(aggressions)\r\n  //!config.data_row_catFirst || !config.data_column_catFirst ? \r\n    //aggressions.concat(combined_keys) : combined_keys.concat(aggressions)\r\n\r\n  return combined_keys.join(join_factor)\r\n}\r\n\r\nconst getNestedData = function({data, aggressions=[], category, isAggr, join}) {\r\n  let $$ = this;\r\n\r\n  if(isAggr) {\r\n    let list = []\r\n    aggressions.forEach(c => {\r\n      d3.nest().key(() => c).sortKeys($$.sortFunction).entries(data).forEach(t => list.push(t))\r\n    })\r\n\r\n    return list\r\n  } else {\r\n    let total_aggr = aggressions.length;\r\n    let i = 0\r\n\r\n    // let all_keys = $$.getAllCombinedKeys({\r\n    //   data: data, \r\n    //   category: category,\r\n    //   aggressions: aggressions\r\n    // })\r\n    // //不好的做法\r\n    // let test = []\r\n    // all_keys.forEach(k => {\r\n    //   let item = d3.nest()\r\n    //     .key(() => k)\r\n    //     .sortKeys($$.sortFunction)\r\n    //     .entries(data) \r\n    //   item.length && test.push(item[0])\r\n    // })\r\n    let nestedData = d3.nest()\r\n      .key((d) => {\r\n        let result = $$.getCombinedKeys({\r\n          data: d, \r\n          category: category, \r\n          join: join, \r\n          aggression: total_aggr <= 1 ? aggressions[0] : aggressions[i % total_aggr]\r\n        })\r\n        d[_Classes_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].mc_hidden_key] = result\r\n        i++\r\n        return result\r\n      })\r\n     .sortKeys($$.sortFunction)\r\n     .entries(data) \r\n    return nestedData\r\n  }\r\n}\r\n\r\nconst getNestedList = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const isTable = config.data_type === 'table';\r\n  const isArea = config.data_type === 'area';\r\n  const x_categories = config.data_column_categories;\r\n  const y_categories = config.data_row_categories;\r\n  const x_aggressions = config.data_column_aggressions\r\n  const y_aggressions = config.data_row_aggressions\r\n  let data = config.data_json;\r\n\r\n  if($$.isBarLineType) {\r\n    $$.nest_by_column = $$.getNestedData({data: data})\r\n    $$.nest_by_row = $$.getNestedData({\r\n      data: data, \r\n      category: y_categories\r\n    })\r\n  } else {\r\n    let all_data = []\r\n    let isAggr_col = isTable && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(x_categories) && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(x_aggressions)\r\n    let isAggr_row = isTable && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(y_categories) && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(y_aggressions)\r\n    $$.nest_by_column = $$.getNestedData({\r\n      data: data, \r\n      category: x_categories,\r\n      aggressions: isTable ? x_aggressions : [],\r\n      isAggr: isAggr_col\r\n    })\r\n    $$.nest_by_row = $$.getNestedData({\r\n      data: data, \r\n      category: y_categories,\r\n      aggressions: isTable ? y_aggressions : [], \r\n      isAggr: isAggr_row\r\n    })\r\n\r\n    // $$.nest_by_column.forEach((m) => {\r\n    //   m.values.forEach((e, i) => {\r\n    //     let total_aggr = y_aggressions.length\r\n    //     let aggression = !isTable ? [] : total_aggr <= 1 ? y_aggressions[0] : y_aggressions[i % total_aggr]\r\n    //     let result = $$.getCombinedKeys({\r\n    //       data: e, \r\n    //       category: y_categories, \r\n    //       aggression: aggression\r\n    //     })\r\n    //     e.row_key = result\r\n    //   })\r\n    // })\r\n    $$.nest_by_row.forEach((n, i) => {\r\n      $$.nest_by_column.forEach((m, j) => {\r\n        let values = m.values.filter((e) => e[_Classes_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].mc_hidden_key] === n.key) || []\r\n        let elt = {\r\n          x: j,\r\n          y: i,\r\n          values: isAggr_row ? m.values : values\r\n        }\r\n        if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(elt.values)) {\r\n          all_data.push(elt)\r\n        }\r\n      })\r\n    })\r\n    $$.all_data = all_data\r\n  }\r\n}\r\n// modify by lss 20200612 \r\nlet createNestingFunction=function(propertyName) {\r\n  return (d)=> {\r\n    return d[propertyName];\r\n  };\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  getOptions,\r\n  loadConfig,\r\n  getCombinedKeys,\r\n  getNestedData,\r\n  getNestedList,\r\n  getUniqueArray,\r\n  getAllCombinedKeys,\r\n  createNestingFunction\r\n})\n\n//# sourceURL=webpack://mc/./src/data.js?");

/***/ }),

/***/ "./src/divide-lines.js":
/*!*****************************!*\
  !*** ./src/divide-lines.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n\r\n\r\n\r\n\r\nconst drawBorder = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const isTable = config.data_type === 'table';\r\n  const column_length = $$.nest_by_column.length;\r\n  const row_length = $$.nest_by_row.length\r\n  let row_aggr = config.data_row_aggressions,\r\n      column_aggr = config.data_column_aggressions,\r\n      row_factor = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(row_aggr) || !isTable ? 0 : 1,\r\n      col_factor = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(column_aggr) || !isTable ? 0 : 1,\r\n      rows = row_factor ? config.data_row_categories.concat(_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_string) : config.data_row_categories,\r\n      columns = col_factor ? config.data_column_categories.concat(_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_string) : config.data_column_categories;\r\n\r\n  if(column_length <= 1 && row_length <= 1 && !isTable) return\r\n\r\n  let border_color = config.table_inner_color,\r\n      border_outter_color = config.table_outter_color,\r\n      border_width = config.table_inner_width,\r\n      border_outter_width = config.table_outter_width,\r\n      band = config.table_body_width,\r\n      header_height = config.table_header_top_height,\r\n      rowder_width = config.table_header_left_width,\r\n      margin_left = rowder_width.reduce((a, b) => a += b, 0),\r\n      margin_top = columns.length * header_height,\r\n      row_height = config.table_body_height,\r\n      colored_feature = config.data_colored_feature,\r\n      table_title = config.table_title;\r\n\r\n  let g2 = $$.group_1, g1 = $$.group_2, gg = $$.group_3\r\n\r\n  //分割行的属性名与数据的竖线\r\n  rows.forEach((y, yi) => {\r\n    let width = rowder_width.slice(0, yi).reduce((a, b) => a += b, 0)\r\n    gg.append('path')\r\n      .attr('d', `M ${width + rowder_width[yi]} 0 V ${margin_top + row_length * row_height}`)\r\n      .attr('stroke', border_color)\r\n      .attr('stroke-width', border_width)\r\n\r\n    let text = $$.truncateText({\r\n      text: y, \r\n      max_length: rowder_width[yi], \r\n      fontSize: $$.textFont\r\n    })\r\n    let style = $$.getTextStyle(table_title, y)\r\n    let anchor = style.anchor || 'end'\r\n    style.show && text !== _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_string && gg.append('text')\r\n      .text(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(style.title) ? style.title : text)\r\n      .attr('style', style.style)\r\n      .attr('text-anchor', anchor)\r\n      .attr('transform', () => {\r\n        let is_middle = anchor === 'middle'\r\n        let is_start = anchor === 'start'\r\n        let adjust_1 = is_middle ? width + rowder_width[yi] / 2 : is_start ? width : width + rowder_width[yi]\r\n        let adjust_2 = is_middle ? 0 : is_start ? 3 : -3\r\n        let x = adjust_1 + adjust_2\r\n        let y = columns.length * header_height - _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h/2 - 3\r\n        return `translate(${x}, ${y})`\r\n      })\r\n  })\r\n  \r\n  //分割列的属性名与数据的横线\r\n  columns.forEach((c, ci) => {\r\n    gg.append('path')\r\n      .attr('d', `M ${ci === columns.length-1 ? 0 : margin_left} ${(ci+1) * header_height} H ${margin_left + band * column_length}`)\r\n      .attr('stroke', border_color)\r\n      .attr('stroke-width', border_width)\r\n  })\r\n  let text = columns.filter(col => col !== _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_string).join(' / ')\r\n  let style = $$.getTextStyle(table_title, text)\r\n  let anchor = style.anchor || 'middle'\r\n  style.show && gg.append('text')\r\n    .text(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(style.title) ? style.title : text)\r\n    .attr('style', style.style)\r\n    .attr('text-anchor', anchor)\r\n    .attr('transform', () => {\r\n      let x = margin_left + (anchor === 'middle' ? column_length * band / 2 : anchor === 'start' ? 0 : column_length * band)\r\n      let y = -_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h/2\r\n      return `translate(${x}, ${y})`\r\n    })\r\n\r\n  //左边border\r\n  gg.append('path')\r\n    .attr('d', `M ${border_outter_width / 2} 0 V ${margin_top + row_length * row_height}`)\r\n    .attr('stroke', border_outter_color)\r\n    .attr('stroke-width', border_outter_width)\r\n\r\n  //最上面的border\r\n  gg.append('path')\r\n    .attr('d', `M 0 0 H ${margin_left + band * column_length}`)\r\n    .attr('stroke', border_outter_color)\r\n    .attr('stroke-width', border_outter_width)\r\n\r\n  let mc_divide_lines = $$.getLineTextData({})\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(columns)) columns = [`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_column}`]\r\n  columns.forEach((c, ci) => {\r\n    let groups = mc_divide_lines.filter(m => m.group_idx === ci)\r\n    let y = header_height * (ci + 1) - _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h / 2 - 3\r\n    let last_path = groups.length - 1\r\n    groups = groups.map((g, gi) => {\r\n      let ex = groups.filter((r, ri) => ri < gi)\r\n      let total = ex.reduce((a, b) => (a += b.length), 0)\r\n      return {txt: g.txt, length: total + g.length, length2: total + g.length / 2}\r\n    })\r\n\r\n    g1.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${ci}`)\r\n      .data(groups)\r\n      .enter().append('path')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${ci}`)\r\n      .attr('stroke', (d, i) => (i === last_path ? border_outter_color : border_color))\r\n      .attr('stroke-width', (d, i) => (i === last_path ? border_outter_width : border_width))\r\n      .attr('d', (d, i) => `M ${d.length * band + margin_left - (i === last_path ? border_outter_width / 2 : 0)} ${header_height * ci} V \r\n        ${margin_top + row_length * row_height}`)\r\n    \r\n    if(c === _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_column) return\r\n\r\n    groups.forEach(d => {\r\n      let text = d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop()\r\n      let style = $$.getTextStyle(table_title, c === _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_string ? text: '')\r\n      if(!style.show) text = ''\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(style.title)) {\r\n        text = style.title\r\n      }\r\n      let available_w = (d.length * band - d.length2 * band) * 2;\r\n      text = $$.truncateText({\r\n        text, \r\n        max_length: available_w, \r\n        fontSize: $$.textFont\r\n      })\r\n      d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_text] = text\r\n      d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style] = style\r\n    })\r\n    \r\n    g1.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${ci}`)\r\n      .data(groups)\r\n      .enter().append('text')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${ci}`)\r\n      .attr('style', d => d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style].style)\r\n      .attr('text-anchor', d => d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style].anchor || 'middle')\r\n      .text(d => d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_text])\r\n      .attr('transform', (d) => {\r\n        let anchor = d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style].anchor || 'middle'\r\n        let is_middle = anchor === 'middle'\r\n        let is_start = anchor === 'start'\r\n        let adjust_1 = is_middle ? d.length2 * band : is_start ? (d.length2 - 0.5) * band : (d.length2 + 0.5) * band\r\n        let adjust_2 = is_middle ? 0 : is_start ? 3 : -3\r\n        let x = margin_left + adjust_1 + adjust_2\r\n        return `translate(${x}, ${y})`\r\n      })\r\n      .on(\"mouseenter\", function(d) {\r\n        let text = d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop()\r\n        $$.displayTip(text, d3.event.offsetX, d3.event.offsetY, margin_left + column_length * band)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      });\r\n  })\r\n\r\n  //计算线的位置，文本的位置\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(rows)) rows = [`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_row}`]\r\n  let mc_divide_lines2 = $$.getLineTextData({data_type: 'row', total_length: rows.length})\r\n\r\n  //画线和画文本\r\n  rows.forEach((y, yi) => {\r\n    let groups = mc_divide_lines2.filter((m) => m.group_idx === yi);\r\n    let rect_x = rowder_width.slice(0, yi).reduce((a, b) => a += b, 0)\r\n    let last_path = groups.length - 1\r\n    if(groups.length > 1 && yi === rows.length - 1 && !Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(colored_feature) && isTable) {\r\n      g2.selectAll('rect')\r\n        .data(groups)\r\n        .enter().append('rect')\r\n        .attr('width', `${margin_left + band * column_length}`)\r\n        .attr('height', row_height)\r\n        .attr('x', rect_x)\r\n        .attr('y', (d) => `${(d.line_pos - 1) * row_height + margin_top}`)\r\n        .attr('stroke-width', 0)\r\n        .attr('fill', (d, i) => (i % 2 === 1 ? 'rgba(245, 249, 254, 0.5)' : 'rgba(255, 255, 255, 0.1)'))\r\n    }\r\n    \r\n    g2.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${yi}`)\r\n      .data(groups)\r\n      .enter().append('path')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${yi}`)\r\n      .attr('stroke', (d, i) => (i === last_path ? border_outter_color : border_color))\r\n      .attr('stroke-width', (d, i) => (i === last_path ? border_outter_width : border_width))\r\n      .attr('d', (d, i) => `M ${rect_x} ${d.line_pos * row_height + margin_top - (i === last_path ? border_outter_width / 2 : 0)} H \r\n        ${margin_left + band * column_length}`)\r\n\r\n    if(y === _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_row) return\r\n\r\n    groups.forEach(d => {\r\n      let text = d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop()\r\n      let style = $$.getTextStyle(table_title, y === _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].empty_string ? text : '')\r\n      if(!style.show) text = ''\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(style.title)) {\r\n        text = style.title\r\n      }\r\n      let cut_text = row_height < 8 ? '..' : $$.truncateText({\r\n        text, \r\n        max_length: rowder_width[yi] - 3, \r\n        fontSize: $$.textFont\r\n      })\r\n      \r\n      d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_text] = cut_text\r\n      d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style] = style\r\n    })\r\n    \r\n    g2.selectAll(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${yi}`)\r\n      .data(groups)\r\n      .enter().append('text')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${yi}`)\r\n      .text(d => d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_text])\r\n      .attr('text-anchor', d => d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style].anchor || 'end')\r\n      .attr('style', d => d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style].style)\r\n      .attr('transform', (d) => {\r\n        let anchor = d[_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_divide_style].anchor || 'end'\r\n        let is_middle = anchor === 'middle'\r\n        let is_start = anchor === 'start'\r\n        let adjust_1 = is_middle ? rect_x + rowder_width[yi] / 2 : is_start ? rect_x : rect_x + rowder_width[yi]\r\n        let adjust_2 = is_middle ? 0 : is_start ? 3 : -3\r\n        let x = adjust_1 + adjust_2\r\n        let pos_y = d.txt_pos * row_height + margin_top + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h/2 - 3\r\n        return `translate(${x}, ${pos_y})`\r\n      })\r\n      .on(\"mouseenter\", function(d) {\r\n        let text = d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop()\r\n        $$.displayTip(text, d3.event.offsetX, d3.event.offsetY, margin_left + column_length * band)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      });\r\n  })\r\n}\r\n\r\nconst drawDivideLines = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  let categories = config.data_column_categories,\r\n      isRotated = config.axis_rotated,\r\n      zone_width = $$.x_category_height, //30\r\n      rotated_cat_width = $$.y_category_width, //90\r\n      band = $$.x.bandwidth(),\r\n      axis_label_g = $$.group_4;\r\n\r\n  let grid_style = config.grid_style, \r\n      text_style = config.divide_column_text_style,\r\n      text_show = config.divide_column_text_show,\r\n      text_title = config.divide_column_text_title,\r\n      tick_style = config.divide_column_tick_styleList,\r\n      default_tickStyle = {'font-size': $$.textFont, fill: $$.textColor};\r\n\r\n  !text_style['font-size'] && (text_style['font-size'] = $$.textFont)\r\n  !text_style['fill'] && (text_style['fill'] = $$.textColor)\r\n  !grid_style.stroke && (grid_style.stroke = '#eee')\r\n  \r\n  tick_style.forEach(list => {\r\n    !list.style['font-size'] && (list.style['font-size'] = $$.textFont)\r\n    !list.style['fill'] && (list.style['fill'] = $$.textColor)\r\n  })\r\n  \r\n  if ($$.config.axis_rotated || config.data_column_categories.length > 1) {\r\n  text_show && axis_label_g.append('text')\r\n    .text(text_title)\r\n    .attr('transform', () => {\r\n      if (categories.length > 1) {\r\n        return isRotated ? `translate(${rotated_cat_width*categories.length/2}, ${$$.margin.top})` : \r\n         `translate(${$$.width/2}, ${$$.margins.column_title_space - $$.margins.titlePadding})`\r\n      } else {\r\n        return isRotated ? `translate(${rotated_cat_width}, ${$$.margin.top})` : \r\n          `translate(${$$.width/2}, ${$$.margins.column_title_space - $$.margins.titlePadding})`\r\n      }\r\n    })\r\n    .attr('style', Object.keys(text_style).map(g => `${g}:${text_style[g]}`).join(';'))\r\n    .attr('text-anchor', 'middle')\r\n  }\r\n  \r\n  if(categories.length < 2) return \r\n\r\n  let g =  $$.group_5.append('g').attr('transform', `translate(0, ${isRotated ? 0 : $$.margins.column_title_space})`)\r\n  let mc_divide_lines = $$.getLineTextData({chart_type: config.data_type})\r\n\r\n  categories.slice(0, categories.length-1).forEach((c, ci) => {\r\n    let temp = tick_style.filter(t => t.name === c)\r\n    let user_rotated = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(temp) ? 0 : temp[0].rotate\r\n    let css = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(temp) ? default_tickStyle : temp[0].style\r\n    let style = Object.keys(css).map(g => `${g}:${css[g]}`).join(';')\r\n    \r\n    let groups = mc_divide_lines.filter(m => m.group_idx === ci)\r\n    groups = groups.map((g, gi) => {\r\n      let ex = groups.filter((r, ri) => ri < gi)\r\n      let total = ex.reduce((a, b) => (a += b.length), 0)\r\n      return {txt: g.txt, length: total + g.length, length2: total + g.length / 2}\r\n    })\r\n\r\n    let lines = g.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${ci}`)\r\n      .data(groups)\r\n      .enter().append('path')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${ci}`)\r\n      .style('stroke', (d, i) => i === groups.length-1 ? 'transparent' : grid_style.stroke)\r\n\r\n    let texts = g.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${ci}`)\r\n      .data(groups)\r\n      .enter().append('text')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${ci}`)\r\n      .attr('text-anchor', 'middle')\r\n      .attr('style', style)\r\n      .text(d => {\r\n        let text = d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop()\r\n        let max_w = isRotated ? rotated_cat_width : (d.length * band - d.length2 * band) * 2\r\n\r\n        return $$.truncateText({\r\n          text, \r\n          max_length: max_w, \r\n          fontSize: $$.textFont\r\n        })\r\n      })\r\n    \r\n    let left = $$.margin.left, top = $$.margin.top, right = $$.margin.right, bottom = $$.margin.bottom;\r\n    if(isRotated) {\r\n      g.append('g')\r\n        .append('path')\r\n        .attr('d', `M ${-left + rotated_cat_width * (ci+1)} ${-top} V ${$$.height + bottom}`)\r\n        .attr('stroke', grid_style.stroke)\r\n\r\n      lines\r\n        .attr('d', (d) => `M ${-left + rotated_cat_width * ci} ${d.length * band} H ${$$.width + right}`)\r\n\r\n      texts\r\n        .attr('transform', (d) => {\r\n          let x = -left + rotated_cat_width * ci + rotated_cat_width / 2\r\n          let y = d.length2 * band\r\n          return `translate(${x}, ${y}) rotate(${user_rotated || 0})`\r\n        })\r\n    } else {\r\n      // lines\r\n      //   .attr('d', (d) => `M ${d.length * band} ${zone_width * ci - top} V ${$$.height + bottom}`)\r\n      lines\r\n        .attr('d', (d) => `M ${d.length * band} ${zone_width * ci - top} V ${$$.height + bottom}`)\r\n\r\n      texts\r\n        .attr('transform', (d) => {\r\n          let x = d.length2 * band\r\n          let y = zone_width * (ci + 0.5) - top\r\n          return `translate(${x}, ${y}) rotate(${user_rotated || 0})`\r\n        })\r\n    }\r\n  })\r\n}\r\n\r\nconst drawHorizontalLines = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const isRotated = config.axis_rotated;\r\n  const y_categories = config.data_row_categories\r\n  const row_aggressions_length = config.data_row_aggressions.length || 1\r\n  let chart_length = (isRotated ? $$.width_one_chart : $$.height_one_chart) * row_aggressions_length\r\n  let left = $$.margin.left, top = $$.margin.top, right = $$.margin.right, bottom = $$.margin.bottom;\r\n\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(y_categories)) return\r\n\r\n  let cat_title_g = $$.group_1, gg = $$.group_2, g = $$.group_3;\r\n\r\n  let mc_divide_lines = $$.getLineTextData({chart_type: config.data_type, data_type: 'row', total_length: y_categories.length})\r\n  let line_style = config.axis_x_line_style,\r\n      line_show = config.axis_x_line_show,\r\n      text_style = config.divide_row_text_style,\r\n      text_show = config.divide_row_text_show,\r\n      text_title = config.divide_row_text_title,\r\n      tick_style = config.divide_row_tick_styleList,\r\n      default_tickStyle = {'font-size': $$.textFont, fill: $$.textColor};\r\n\r\n  !line_style['stroke'] && (line_style['stroke'] = $$.textColor)\r\n  !text_style['font-size'] && (text_style['font-size'] = $$.textFont)\r\n  !text_style['fill'] && (text_style['fill'] = $$.textColor)\r\n  \r\n  tick_style.forEach(list => {\r\n    !list.style['font-size'] && (list.style['font-size'] = $$.textFont)\r\n    !list.style['fill'] && (list.style['fill'] = $$.textColor)\r\n  })\r\n\r\n  let style = Object.keys(text_style).map(g => `${g}:${text_style[g]}`).join(';')\r\n  let lineStyle = Object.keys(line_style).map(g => `${g}:${line_style[g]}`).join(';')\r\n\r\n  text_show && cat_title_g.append('text')\r\n    .text(text_title)\r\n    .attr('style', style)\r\n    .attr('text-anchor', 'middle')\r\n    .attr('transform',  () => {\r\n      return isRotated ? `translate(${$$.width/2 + left}, ${$$.margins.row_title_space})` : \r\n        `translate(1, ${$$.height/2 + top})rotate(90)`\r\n    })\r\n\r\n  y_categories.forEach((y, yi) => {\r\n    let temp = tick_style.filter(t => t.name === y)\r\n    let user_rotated = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(temp) ? undefined : temp[0].rotate\r\n    let css = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(temp) ? default_tickStyle : temp[0].style\r\n    let style = Object.keys(css).map(g => `${g}:${css[g]}`).join(';')\r\n    let groups = mc_divide_lines.filter((m) => m.group_idx === yi);\r\n    //判断文本是否需要rotate\r\n    !isRotated && groups.forEach(d => {\r\n      let text = d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop()\r\n      if($$.getTextLength(text) > $$.y_category_width) {\r\n        groups.forEach(g => g.rotated = true)\r\n        return\r\n      }\r\n    })\r\n    \r\n    if(line_show) {\r\n      g.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${yi}`)\r\n        .data(groups.slice(0, groups.length - 1))\r\n        .enter().append('path')\r\n        .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_lines}-${yi}`)\r\n        .attr('style', lineStyle)\r\n        .attr('d', (d) => {\r\n          return isRotated  \r\n              ? `M ${d.line_pos * $$.width_one_chart*row_aggressions_length} ${-top + $$.x_category_height * yi} V ${$$.height + bottom}`\r\n              : `M ${$$.y_category_width * yi} ${d.line_pos * $$.height_one_chart*row_aggressions_length} H ${$$.width + right + left}`\r\n        })\r\n\r\n      //draw vertical line\r\n      if(yi !== y_categories.length-1) {\r\n        if(isRotated) {\r\n          gg\r\n            .append('path')\r\n            .attr('d', `M 0 ${-top + (yi+1) * $$.x_category_height} H ${$$.width + right}`)\r\n            .attr('style', lineStyle)\r\n        } else {\r\n          gg\r\n            .append('path')\r\n            .attr('d', `M ${(yi+1) * $$.y_category_width} ${-top} V ${$$.height + bottom / 2}`)\r\n            .attr('style', lineStyle)\r\n        }\r\n      }\r\n    }\r\n\r\n    g.selectAll(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${yi}`)\r\n      .data(groups)\r\n      .enter().append('text')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].divide_texts}-${yi}`)\r\n      .attr('style', style)\r\n      .text(d => d.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`).pop())\r\n      .attr('text-anchor', (d) => (d.rotated || isRotated) ? 'middle' : 'start')\r\n      .attr('transform', (d) => {\r\n        let x_pos = isRotated ? (d.txt_pos * chart_length) : $$.y_category_width * yi + 3\r\n        let y_pos = isRotated ? -top + $$.x_category_height * (yi+1) - 8 : d.txt_pos * chart_length\r\n        let rotate = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(tick_style) ? (d.rotated ? 90 : 0) : user_rotated\r\n        return `translate(${x_pos}, ${y_pos}) rotate(${rotate || 0})`\r\n      })\r\n  })\r\n}\r\n\r\nconst getLineTextData = function({chart_type='table', data_type='column', total_length=0}) {\r\n  const $$ = this;\r\n  let mc_divide_lines = []\r\n\r\n  if(data_type === 'column') {\r\n    $$.nest_by_column.forEach(v => {\r\n      let split_keys = v.key.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`);\r\n      split_keys.slice(0, chart_type === 'table' ? split_keys.length : split_keys.length-1).forEach((s, i) => {\r\n        let past = split_keys.filter((v, vi) => vi <= i);\r\n        let key = past.join(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`);\r\n        let exit = mc_divide_lines.filter(m => m.txt === key);\r\n        if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(exit)) {\r\n          exit[0].length++\r\n        } else {\r\n          mc_divide_lines.push({txt: key, length: 1, group_idx: i})\r\n        } \r\n      })\r\n    })\r\n  } else {\r\n    $$.nest_by_row.forEach(v => {\r\n      let split_keys = v.key.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`);\r\n      split_keys.forEach((s, i) => {\r\n        let past = split_keys.filter((v, vi) => vi <= i);\r\n        let key = past.join(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`)\r\n        let exit = mc_divide_lines.filter(m => m.txt === key);\r\n        if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(exit)) {\r\n          exit[0].line_pos++\r\n          exit[0].txt_pos += 0.5\r\n        } else {\r\n          let obj = {txt: key, line_pos: 1, group_idx: i};\r\n          let line_pos_past = mc_divide_lines.filter(m => m.group_idx === i).map(m => m.line_pos).pop();\r\n          let val = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(line_pos_past) ? line_pos_past : 0;\r\n          obj.line_pos = val+1\r\n          obj.txt_pos = val+0.5\r\n          mc_divide_lines.push(obj)\r\n        }\r\n      })\r\n    })\r\n\r\n    mc_divide_lines.forEach((m) => {\r\n      let split_keys = m.txt.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`);\r\n      if(split_keys.length === total_length) {\r\n        m.txt_pos = m.line_pos - 0.5\r\n      }\r\n    })\r\n  }\r\n\r\n  return mc_divide_lines\r\n}\r\n\r\nconst getTextStyle = function(styleList, key) {\r\n  const $$ = this\r\n  let item = styleList.filter(l => l.key === key)[0]\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(item)) {\r\n    let style = item.style;\r\n    !style['font-size'] && (style['font-size'] = $$.textFont)\r\n    !style['fill'] && (style['fill'] = $$.textColor)\r\n    return {\r\n      show: item.show,\r\n      title: item.title,\r\n      style: Object.keys(style).map(g => `${g}:${style[g]}`).join(';'),\r\n      anchor: style['text-align'] === 'center' ? 'middle' : style['text-align'] === 'left' ? 'start' : 'end'\r\n    }\r\n  } else {\r\n    return {\r\n      show: true,\r\n      title: undefined,\r\n      style: `font-size: ${$$.textFont}; fill: ${$$.textColor}`\r\n    }\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawDivideLines,\r\n  drawBorder,\r\n  drawHorizontalLines,\r\n  getLineTextData,\r\n  getTextStyle\r\n})\n\n//# sourceURL=webpack://mc/./src/divide-lines.js?");

/***/ }),

/***/ "./src/draw.js":
/*!*********************!*\
  !*** ./src/draw.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst draw = function({createBarPatterns, drawClipPath=true, x_scale, scale, scale_y2, drawXaxis=true}) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const type = config.data_type;\r\n  const y_categories = config.data_row_categories;\r\n  const y_aggressions = config.data_row_aggressions\r\n  let isRotated = config.axis_rotated;\r\n  const bindto = config.bindto.slice(1);\r\n  const cell_width = config.table_body_width;\r\n  const cell_height = config.table_body_height\r\n  const shapeInstance = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])($$[`draw${type.charAt(0).toUpperCase() + type.slice(1)}`]) ? \r\n                      $$[`draw${type.charAt(0).toUpperCase() + type.slice(1)}`]() : $$.drawBarLine();\r\n  $$.shapeInstance = shapeInstance\r\n\r\n  let all_data = $$.all_data\r\n  config.colorList = []\r\n  switch(type) {\r\n    case 'bar':\r\n    case 'line':\r\n    case 'bar-line':\r\n      y_aggressions.forEach((arr, idx) => {\r\n        let combined = config.data_combined[idx]\r\n        let aggr_length = combined.filter(c => c.type === 'bar').length\r\n        let bar_index = -1\r\n        let domains = $$.domain_list.filter(d => d.aggr_idx === idx)[0]\r\n        let y_scale = scale || domains.y_scale, y2_scale = scale_y2 || domains.y2_scale;\r\n        let x_container = $$.main.append('g').attr('class', 'x_axis_group')\r\n\r\n        if(idx === 0) {\r\n          drawXaxis && $$.drawAxisById({\r\n            container: x_container, \r\n            scale: x_scale || $$.x, \r\n            axis: 'x',\r\n            base_axis: true //需要画出text的axis\r\n          });\r\n        }\r\n        arr.forEach((d, d_idx) => {\r\n          let cm = combined[d_idx], cmi = `${idx}-${d_idx}`\r\n         \r\n          !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(cm.type) && (cm.type = config.data_type)\r\n          if(cm.type === 'bar') bar_index++\r\n          shapeInstance.initStyle(cm, cmi)\r\n          shapeInstance.initKeys(cm.data)\r\n          shapeInstance.initColorPatternSchemes(cm.data)\r\n          shapeInstance.initBarPatterns({createBarPatterns})\r\n\r\n          let colorsObj = shapeInstance.getColorList()\r\n          let nest_by_row = $$.getNestedData({\r\n            data: cm.data, \r\n            category: y_categories\r\n          })\r\n          \r\n          if(d_idx === 0) {\r\n            nest_by_row.forEach((n, i) => {\r\n              let new_idx = i*y_aggressions.length+idx\r\n \r\n              let multirow = $$.main.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}`);\r\n\r\n              let container = multirow.append('g')\r\n               .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined}-${new_idx}`)\r\n               .attr('clip-path', `url(#${`${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${new_idx}-${bindto}`})`)\r\n\r\n              $$.drawGrid({\r\n                 svg: container, \r\n                 height: isRotated ? $$.width_one_chart : $$.height_one_chart, \r\n                 idx: new_idx, \r\n                 scale_y: y_scale\r\n              });      \r\n              if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(domains.y)) {\r\n                $$.drawAxisById({\r\n                  idx: new_idx, \r\n                  container: $$.ySvg.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}-${new_idx}`), \r\n                  scale: y_scale, \r\n                  axis: 'y',\r\n                  style: domains.y_style,\r\n                  show_percent: domains.y_percent\r\n                });\r\n              }\r\n              if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(domains.y2)) {\r\n                $$.drawAxisById({\r\n                  idx: new_idx, \r\n                  container: $$.y2Svg.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}-${new_idx}`), \r\n                  scale: y2_scale,\r\n                  axis: 'y2',\r\n                  style: domains.y2_style,\r\n                  show_percent: domains.y2_percent\r\n                });\r\n              }\r\n\r\n              if(drawClipPath) {\r\n                $$.defs.append('clipPath')\r\n                  .attr('id', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${new_idx}-${bindto}`)\r\n                  .append('rect')\r\n                  .attr('width', isRotated ? $$.width_one_chart : $$.width)\r\n                  .attr('height', isRotated ? $$.height : $$.height_one_chart)\r\n                  .attr('transform', `translate(${isRotated ? $$.width_one_chart * new_idx : 0}, ${isRotated ? 0 : $$.height_one_chart * new_idx})`)\r\n              }\r\n\r\n              if(new_idx !== 0) {\r\n                drawXaxis && $$.drawAxisById({\r\n                  idx: new_idx,\r\n                  container: x_container, \r\n                  scale: x_scale || $$.x, \r\n                  axis: 'x',\r\n                  base_axis: false, // 需要画出text的axis\r\n               });\r\n              }\r\n            })\r\n          }\r\n          nest_by_row.forEach((n, i) => {\r\n            let new_idx = i*y_aggressions.length+idx;\r\n            shapeInstance.updateData({\r\n              colorsObj,\r\n              data: n.values\r\n            })\r\n            shapeInstance.addPath({\r\n              bar_index, \r\n              aggr_length, \r\n              multirow_idx: new_idx, \r\n              scale: y_scale, \r\n              scale_y2: y2_scale, \r\n              container: $$.main.select(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined}.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined}-${new_idx}`)\r\n            })\r\n          })\r\n        })\r\n      })\r\n      break;\r\n    case 'area':\r\n      y_aggressions.forEach((arr, idx) => {\r\n        let combined = config.data_combined[idx];\r\n        let aggr_length = combined.filter(c => c.type === 'bar').length;\r\n        let bar_index = -1;\r\n        let domains = $$.domain_list.filter(d => d.aggr_idx === idx)[0]\r\n        let x_container = $$.main.append('g').attr('class', 'x_axis_group').attr('transform', `translate(0, ${50*idx})`)\r\n        shapeInstance.initAreaAxis(idx, x_container);\r\n        \r\n        arr.forEach((d, d_idx) => {\r\n          let cm = combined[d_idx], cmi = `${idx}-${d_idx}`;\r\n          shapeInstance.initStyle(cm, cmi);\r\n          shapeInstance.initAreaKey(cm.data[0], d)\r\n          shapeInstance.initAreaColor();\r\n          let nest_by_row = $$.getNestedData({\r\n            data: cm.data[0], \r\n            category: y_categories\r\n          });          \r\n          if(d_idx === 0) {\r\n            let key = 0;\r\n            nest_by_row.forEach((n) => {\r\n              let new_idx = key * y_aggressions.length + idx;\r\n              let multirow = $$.main.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}`);\r\n              let container = multirow.append('g')\r\n              .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined}-${new_idx}`)\r\n              .attr('clip-path', `url(#${`${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${new_idx}-${bindto}`})`)\r\n    \r\n              let yData = [];\r\n              for (let i = 0; i < n.values.length; i++) {\r\n                yData.push(n.values[i][d]);\r\n              }\r\n              let yDomain = [d3.min([...yData, 0]), d3.max([...yData, 0]) * 1.1]\r\n              let range = [$$.height_one_chart, 0];\r\n              let y_scale  = d3.scaleLinear().range(range).domain(yDomain).nice()\r\n              let yContent = $$.ySvg.append('g')\r\n                                .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}-${new_idx}`)\r\n                                .attr('transform', `translate(0, ${idx * 50})`);\r\n              \r\n              $$.drawGrid({\r\n                svg: container,\r\n                height: $$.height_one_chart + 50,\r\n                idx: new_idx,\r\n                scale_y: y_scale\r\n              })\r\n              d && ($$.domains[d] = {\r\n                domain: y_scale.domain(),\r\n                ticks_length: y_scale.ticks().length\r\n              })\r\n              $$.drawAxisById({\r\n                 idx: new_idx, \r\n                 container: yContent, \r\n                 scale: y_scale, \r\n                 axis: 'y',\r\n                 style: domains.y_style,\r\n                 show_percent: false\r\n              });\r\n              if(drawClipPath) { \r\n                $$.defs.append('clipPath')\r\n                  .attr('id', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${new_idx}-${bindto}`)\r\n                  .append('rect')\r\n                  .attr('width', $$.width)\r\n                  .attr('height', $$.height_one_chart)\r\n                  .attr('transform', `translate(${isRotated ? $$.width_one_chart * new_idx : 0}, ${isRotated ? 0 : ($$.height_one_chart * new_idx + new_idx * 50)})`)\r\n              }\r\n              key++\r\n            })\r\n          }\r\n          nest_by_row.forEach((n, i) => {\r\n            let new_idx = i*y_aggressions.length+idx\r\n            shapeInstance.initAreaData(n.values);\r\n            let yData = [];\r\n            for (let i = 0; i < n.values.length; i++) {\r\n              yData.push(n.values[i][d]);\r\n            }\r\n            let yDomain = [d3.min([...yData, 0]), d3.max([...yData, 0]) * 1.1]\r\n            let range = [$$.height_one_chart, 0];\r\n            let y_scale  = d3.scaleLinear().range(range).domain(yDomain).nice();\r\n            shapeInstance.addPath({\r\n              bar_index, \r\n              aggr_length, \r\n              multirow_idx: new_idx, \r\n              scale: y_scale, \r\n              container: $$.main.select(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined}.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].combined}-${new_idx}`)\r\n            });\r\n          });\r\n        })\r\n      })\r\n      break;\r\n    case 'map':\r\n      all_data.forEach((n) => {\r\n        shapeInstance.initData(n.values)\r\n        shapeInstance.createMap(n.x, n.y)\r\n        shapeInstance.optimizeBounds();\r\n        shapeInstance.setView();\r\n        shapeInstance.addSymbols(n.x, n.y);\r\n        shapeInstance.addLabels(n.x, n.y);\r\n        shapeInstance.addEvents(n.x, n.y);\r\n        shapeInstance.getColorList();\r\n        shapeInstance.getSizeList();\r\n      })\r\n      break;\r\n    case 'bubble':\r\n      all_data.forEach((n) => {\r\n        shapeInstance.initData(n.values)\r\n        shapeInstance.initGroup(n.x, n.y);\r\n        shapeInstance.addCircles(n.x, n.y);\r\n        shapeInstance.addLabels(n.x, n.y);\r\n        shapeInstance.getColorList(n.values);\r\n      })\r\n      break;\r\n    case 'pie':\r\n      all_data.forEach((n) => {\r\n        shapeInstance.initData(n.values);\r\n        shapeInstance.initGroup(n.x, n.y);\r\n        shapeInstance.addPath(n.x, n.y);\r\n        shapeInstance.addLabels(n.x, n.y);\r\n        shapeInstance.getColorList();\r\n      })\r\n      break;\r\n    case 'funnel':\r\n      all_data.forEach((n) => {\r\n        let parent_height = 0;\r\n        const width = config.table_body_width;\r\n        const height = config.table_body_height;\r\n        const size = config.data_sized_feature;\r\n        const compare_size = config.data_compareSized_feature || size;\r\n\r\n        const funnel_type = config.funnel_type;\r\n        const funnel_sort = config.funnel_sort;\r\n        const funnel_compare_layout = config.funnel_compare_layout;\r\n        const funnel_compare_type = config.funnel_compare_type;\r\n        const data_compare = config.data_compare;\r\n        const isVertical = funnel_compare_layout === 'vertical';\r\n\r\n        const idx = n.x;\r\n        const idy = n.y;\r\n\r\n        let funnel_data = n.values;\r\n        let funnel_compare_data = data_compare || [];\r\n        if (funnel_sort == -1) {\r\n          funnel_data.sort((a, b) => b[size] - a[size])\r\n          funnel_compare_data.sort((a, b) => b[compare_size] - a[compare_size])\r\n        } else if(funnel_sort == 1) {\r\n          funnel_data.sort((a, b) => a[size] - b[size])\r\n          funnel_compare_data.sort((a, b) => a[compare_size] - b[compare_size])\r\n        }\r\n        const params = { idx, idy }\r\n        const hasCompareData = funnel_compare_data.length !== 0;\r\n\r\n        let opacity = 1;\r\n        if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(config.color_opacity[0])) {\r\n          opacity = config.color_opacity[0];\r\n        }\r\n        let funnelConfig = {\r\n          funnelAlign: config.funnel_align,\r\n          rowMinHeight: config.funnel_rowMinHeight,\r\n          paddingLeft: config.funnel_innerPaddingLeft,\r\n          paddingRight: config.funnel_innerPaddingRight,\r\n          funnelOpacity: opacity,\r\n          labelPosition: config.funnel_labelPosition,\r\n          colored: config.data_colored_feature,\r\n          coloredType: config.data_colored_type,\r\n          sized: size,\r\n          isCompare: false,\r\n        };\r\n        let funnelCompareConfig = Object.assign({}, funnelConfig, {\r\n          labelPosition: config.funnel_compare_labelPosition,\r\n          sized: compare_size,\r\n          colored: config.data_compareColored_feature,\r\n          coloredType: config.data_compareColored_type,\r\n          isCompare: true,\r\n        });\r\n        \r\n        if (hasCompareData) {\r\n          switch (funnel_compare_layout) {\r\n            case 'vertical':\r\n              funnel_compare_data.reverse();\r\n              break;\r\n            case 'horizontal':\r\n              funnelConfig.paddingRight = width / 2 + 1; // 留下左右对比的中间空隙\r\n              funnelConfig.funnelAlign = 'right';\r\n              funnelCompareConfig.paddingLeft = width / 2 + 1; // 留下左右对比的中间空隙\r\n              funnelCompareConfig.funnelAlign = 'left';\r\n              break;\r\n            case 'inner':\r\n              funnelConfig.labelPosition = config.funnel_labelPosition === 'middle' ? 'right' : config.funnel_labelPosition;\r\n              funnelCompareConfig.paddingLeft += 60;\r\n              funnelCompareConfig.paddingRight += 60;\r\n              // funnelCompareConfig.funnelOpacity *= .5;\r\n              funnelCompareConfig.labelPosition = 'middle';\r\n          }\r\n        }\r\n\r\n        shapeInstance.initConfig(funnelConfig)\r\n        const { ct_height } = shapeInstance.initData(funnel_data, funnel_type);\r\n        parent_height = ct_height;\r\n        shapeInstance.initGroup(params);\r\n        shapeInstance.addPath(params);\r\n        shapeInstance.addLabels(params);\r\n        shapeInstance.addConversions(params);\r\n        shapeInstance.getColorList();\r\n\r\n        if (hasCompareData) {\r\n          shapeInstance.initConfig(funnelCompareConfig)\r\n          const { ct_height } = shapeInstance.initData(funnel_compare_data, funnel_compare_type);\r\n\r\n          const compareParams = { idx, idy, suffix: '-c' }\r\n          if (isVertical) {\r\n            const verticalParams = Object.assign({}, compareParams, { startY: parent_height })\r\n            parent_height += ct_height;\r\n            shapeInstance.initGroup(verticalParams);\r\n            shapeInstance.addPath(verticalParams);\r\n            shapeInstance.addLabels(verticalParams);\r\n            shapeInstance.addConversions(verticalParams);\r\n          } else {\r\n            if ( ct_height > parent_height ) { parent_height = ct_height }\r\n            shapeInstance.initGroup(compareParams);\r\n            shapeInstance.addPath(compareParams);\r\n            shapeInstance.addLabels(compareParams);\r\n            shapeInstance.addConversions(compareParams);\r\n          }\r\n          shapeInstance.getColorList();\r\n        }\r\n\r\n        if (parent_height > height) {\r\n          parent_height += config.size_height - height;\r\n          $$.MyContainer\r\n            .style('overflow-y', 'auto')\r\n            .style('height', config.container_height + 'px')\r\n          $$.svg.style('height', parent_height)\r\n        }\r\n      })\r\n      break;\r\n    case 'scatter':\r\n      all_data.forEach((n, i) => { \r\n        let multirow = $$.bigContainer.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}-${i}`);\r\n\r\n        let domains = $$.domain_list[0]\r\n        let xScale = x_scale || $$.x, yScale = scale || domains.y_scale;\r\n        let x_percent = config.axis_x_percent;\r\n        let group = multirow.append('g').attr('clip-path', `url(#${`${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${i}-${bindto}`})`)\r\n\r\n         if(drawClipPath) {\r\n           $$.defs.append('clipPath')\r\n             .attr('id', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${i}-${bindto}`)\r\n             .append('rect')\r\n             .attr('width', $$.width_one_chart)\r\n             .attr('height', $$.height_one_chart)\r\n             .attr('transform', `translate(${n.x * cell_width }, ${n.y * cell_height})`)\r\n         \r\n           group.attr('clip-path', `url(#${`${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].clip_path}-${i}-${bindto}`})`)\r\n         }\r\n\r\n        $$.drawGrid({svg: group, height: config.table_body_height, idx: n.x, idy: n.y, scale_y: yScale, scale_x: xScale}); \r\n        $$.drawAxisById({idx: n.x, idy: n.y, container: multirow, scale: yScale, axis: 'y', style: domains.y_style, show_percent: domains.y_percent});\r\n        $$.drawAxisById({idx: n.x, idy: n.y, container: multirow, scale: xScale, axis: 'x',style: domains.y_style, show_percent: x_percent});\r\n\r\n        shapeInstance.initData({x_scale: xScale, y_scale: yScale, values: n.values})\r\n        shapeInstance.initGroup(n.x, n.y, group)\r\n        shapeInstance.addCircles(n.x, n.y, group)\r\n        shapeInstance.addLabels(n.x, n.y, group)\r\n        shapeInstance.getColorList()\r\n        shapeInstance.getSizeList()\r\n      })\r\n      break;\r\n    case 'table':\r\n      shapeInstance.initData(all_data)\r\n      // shapeInstance.addLabels()\r\n      shapeInstance.getColorList()\r\n       shapeInstance.drawTable(all_data)\r\n      // console.log(config.colorList)\r\n      break;\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  draw\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/draw.js?");

/***/ }),

/***/ "./src/init.js":
/*!*********************!*\
  !*** ./src/init.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_3__);\n\r\n\r\n\r\n\r\n\r\nconst init = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const type = config.data_type\r\n  config.colorList = [];\r\n  //每个分类变量占据的宽度，表格的话会不使用该值，而是使用table_header_left_width\r\n  $$.y_category_width = 90;\r\n  //每个分类变量占据的高度，表格的话会不使用该值，而是使用table_header_top_height\r\n  $$.x_category_height = 30;\r\n  $$.height_one_chart = 0;\r\n  $$.width_one_chart = 0;\r\n  $$.userDefined_colorRange = [];\r\n  $$.userDefined_sizeRange = [];\r\n  $$.label_format_list = [];\r\n  $$.nest_by_column = [];\r\n  $$.nest_by_row = [];\r\n  $$.isBarLineType = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"inArray\"])(['bar', 'line', 'bar-line', 'area'], type);\r\n  $$.hasYAxis = $$.isBarLineType || type === 'scatter'\r\n  $$.domain_list = []\r\n  $$.domains = {}\r\n  $$.all_data = []\r\n  $$.num_prefixes = {\r\n    y: 1e-24,\r\n    z: 1e-21,\r\n    a: 1e-18,\r\n    f: 1e-15,\r\n    p: 1e-12,\r\n    mu: 1e-6,\r\n    m: 1e-3,\r\n    none: 1e-0,\r\n    K: 1e+3,\r\n    M: 1e+6,\r\n    G: 1e+9,\r\n    T: 1e+12,\r\n    P: 1e+15,\r\n    E: 1e+18,\r\n    Z: 1e+21,\r\n    Y: 1e+24\r\n  }\r\n  $$.sortFunction = null\r\n  $$.getTextLength = $$.getLength()\r\n  // d3.formatDefaultLocale()\r\n  if (config.has_unit) {\r\n    $$.axis_format = d3.format('.3s') // ('', 1e+6)\r\n  } else {\r\n    $$.axis_format = d3.format('.3r') // ('', 1e+6)\r\n\r\n  }\r\n  // d3.formatPrefix(',.0', 1e+6);\r\n  // ({\r\n  //   y: 1e-24,\r\n  //   z: 1e-21,\r\n  //   a: 1e-18,\r\n  //   f: 1e-15,\r\n  //   p: 1e-12,\r\n  //   mu: 1e-6,\r\n  //   m: 1e-3,\r\n  //   none: 1e-0,\r\n  //   k: 1e+3,\r\n  //   M: 1e+6,\r\n  //   G: 1e+9,\r\n  //   T: 1e+12,\r\n  //   P: 1e+15,\r\n  //   E: 1e+18,\r\n  //   Z: 1e+21,\r\n  //   Y: 1e+24\r\n  // })\r\n  $$.axis_format_percent = d3.format('.3p')\r\n  $$.tick_label_format = function() {\r\n    return function(d) {\r\n      let keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(d) ? d.split(_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].join_factor) : [];\r\n      return keys.pop() || ''\r\n    }\r\n  }\r\n    // d3.formatDefaultLocale(locales['cn']);\r\n\r\n\r\n//   $$.time_format_list = [\r\n//     \"%Y\", //year with century as decimal number\r\n//     \"%y\", //year without century as decimal number \r\n//     \"%m\", //month as a decimal number\r\n//     \"%d\", //zero-padded day of the month as a decimal number\r\n//     \"%e\", //space-padded day of the month as a decimal number\r\n//     \"%A\", //full weekday name\r\n//     \"%a\", //abbr weekday name\r\n//     \"%B\", //full month name\r\n//     \"%b\", //abbr month name\r\n//     \"%H\", //hour(24-hour-clock) as a decimal number\r\n//     \"%I\", //hour(12-hour-clock) as a decimal number\r\n//     \"%M\", //minute as a decimal number\r\n//     \"%p\", //either AM or PM\r\n//     \"%S\", //second as a decimal number\r\n//     \"%u\", //Monday-based weekday as a decimal number\r\n//     \"%w\", //Sunday-based weekday as a decimal number\r\n//     \"%x\", //the locale's date\r\n//     \"%X\" //the locale's time\r\n//   ]\r\n// \r\n//   let locales = {\r\n//     cn: {\r\n//       \"decimal\": \".\",\r\n//       \"thousands\": \",\",\r\n//       \"grouping\": [3],\r\n//       \"currency\": [\"¥\", \"\"]\r\n//     },\r\n//     us: {\r\n//       \"decimal\": \".\",\r\n//       \"thousands\": \",\",\r\n//       \"grouping\": [3],\r\n//       \"currency\": [\"$\", \"\"]\r\n//     }\r\n//   }\r\n//   d3.formatDefaultLocale(locales['cn']);\r\n// \r\n//   let timeLocales = {\r\n//     cn: {\r\n//       \"dateTime\": \"%x %A %X\",\r\n//       \"date\": \"%Y年%-m月%-d日\",\r\n//       \"time\": \"%H:%M:%S\",\r\n//       \"periods\": [\"上午\", \"下午\"],\r\n//       \"days\": [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\r\n//       \"shortDays\": [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"],\r\n//       \"months\": [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"],\r\n//       \"shortMonths\": [\"一月\", \"二月\", \"三月\", \"四月\", \"五月\", \"六月\", \"七月\", \"八月\", \"九月\", \"十月\", \"十一月\", \"十二月\"]\r\n//     },\r\n//     us: {\r\n//       \"dateTime\": \"%x, %X\",\r\n//       \"date\": \"%-m/%-d/%Y\",\r\n//       \"time\": \"%-I:%M:%S %p\",\r\n//       \"periods\": [\"AM\", \"PM\"],\r\n//       \"days\": [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\r\n//       \"shortDays\": [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\r\n//       \"months\": [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\r\n//       \"shortMonths\": [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\r\n//     }\r\n//   }\r\n//   d3.timeFormatDefaultLocale(timeLocales['cn']);\r\n// \r\n//   // datetime to be used for uniqueness\r\n//   $$.datetimeId = `mc-${+new Date()}`;\r\n//   $$.dataTimeFormat = config.data_xLocaltime ? d3.timeParse : d3.utcParse;\r\n//   $$.axisTimeFormat = config.axis_x_localtime ? d3.timeFormat : d3.utcFormat;\r\n//   $$.isTimeSeries = config.axis_x_type === 'timeseries' ? true : false;\r\n// \r\n//   $$.defaultAxisTimeFormat = d => {\r\n//     const specifier = (d.getMilliseconds() && \".%L\") ||\r\n//       (d.getSeconds() && \".:%S\") ||\r\n//       (d.getMinutes() && \"%I:%M\") ||\r\n//       (d.getHours() && \"%I %p\") ||\r\n//       ((d.getDay() && d.getDate() !== 1) && \"%-m/%-d\") ||\r\n//       (d.getDate() !== 1 && \"%b %d\") ||\r\n//       (d.getMonth() && \"%-m/%-d\") ||\r\n//       \"%Y/%-m/%-d\";\r\n// \r\n//     return $$.axisTimeFormat(specifier)(d);\r\n//   };\r\n\r\n}\r\n\r\nconst getLength = function() {\r\n  const $$ = this;\r\n  let textLengthStore = {}\r\n\r\n  return function(str, styleStr, flag) {\r\n    let to_num = parseInt(styleStr)\r\n    let style = isNaN(to_num) && Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(styleStr) ? styleStr : `font-size: ${to_num || $$.textFont}`\r\n    let text = str.toString(), size = {}\r\n    let exit = textLengthStore[text]\r\n\r\n    if(exit) {\r\n      return exit\r\n    } else {\r\n      if(text === '') {\r\n        size = {\r\n          width: 0,\r\n          height: 0\r\n        }\r\n      } else if(text === 'NaN') {\r\n        size = {\r\n          width: _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1CharUpper.w * 2 + _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1Char.w,\r\n          height: _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1Char.h\r\n        }\r\n      } else if(text === 'null' || text === 'undefined') {\r\n        size = {\r\n          width: _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1Char.w * text.length,\r\n          height: _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1Char.h\r\n        }\r\n      } else {\r\n        let textNode = $$.svg.append('text').text(text).attr('style', style)\r\n        size = textNode.node() ? textNode.node().getBoundingClientRect() : {}\r\n        textNode.remove()\r\n      }\r\n      \r\n      if(flag) {\r\n        //返回对象\r\n        return {\r\n          w: size.width,\r\n          h: size.height\r\n        }\r\n      } else {\r\n        textLengthStore[text] = size.width || 0\r\n        \r\n        return size.width + 5\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst truncateText = function({text, max_length, fontSize}) {\r\n  const $$ = this;\r\n  \r\n  if(max_length <= _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1Char.w) return '..'\r\n\r\n  let textLength = $$.getTextLength(text, fontSize), long_text = false\r\n  \r\n  while (textLength > max_length && text.length > 0) {\r\n    long_text = true\r\n    text = text.slice(0, -1)\r\n    textLength = $$.getTextLength(text, fontSize);\r\n  }\r\n  return long_text ? (text+'..') : text\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  init,\r\n  truncateText,\r\n  getLength\r\n})\n\n//# sourceURL=webpack://mc/./src/init.js?");

/***/ }),

/***/ "./src/label.js":
/*!**********************!*\
  !*** ./src/label.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst generateFormatLabel = function(aggr, label_index) {\r\n  //name: label's name, aggr: label belong to which aggreration\r\n\tconst $$ = this;\r\n  const config = $$.config;\r\n  let labelList = config.label_format;\r\n  let format = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].number_format\r\n  let final_list = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(aggr) ? labelList.filter(l => l.name === aggr) : labelList\r\n    \r\n  final_list.forEach(l => {\r\n    if(!l || !l.list) return\r\n    let temp = l.list[label_index]\r\n    if(temp) {\r\n      if(temp.format) {\r\n        format = temp.format\r\n      }\r\n    } else {\r\n      //l.list[label_index] = format\r\n    }\r\n  })\r\n\r\n  return function(label) {\r\n    return $$.formatNumberFunction(label, format)\r\n  }\r\n}\r\n\r\nconst formatNumberFunction = function(label, format) {\r\n  const $$ = this;\r\n  let prefixes = $$.num_prefixes;\r\n  let new_label = label\r\n  let original = false, k_mark = true;\r\n  \r\n  if(format.decimal < 0) format.decimal = 0\r\n  if(format.decimal === '') original = true\r\n\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isNumber\"])(new_label)) {\r\n    if(isNaN(new_label)) return ''\r\n    let format_decimal = `.${format.decimal}`,\r\n        format_kMark = format.useThousandMark ? ',' : '';\r\n    if(format_kMark === '') k_mark = false\r\n\r\n    if(format.selectFormat !== 'percent') {\r\n      //单位换算\r\n      Object.keys(prefixes).forEach(p => {\r\n        // if(p === format.unit) new_label /= prefixes[p]\r\n        let splitUnit = format.unit ? format.unit.split(' ')[0] : '';\r\n        if(p === format.unit) {\r\n          new_label /= prefixes[p]\r\n        } else if (p === splitUnit) {\r\n          new_label /= prefixes[splitUnit]\r\n        }\r\n      })\r\n      //小数位数\r\n      new_label = original ? (k_mark ? d3.format(format_kMark)(new_label) : new_label) : \r\n                             d3.format(`${format_kMark}${format_decimal}f`)(new_label);\r\n      //负值显示\r\n      if (format.negative === '(1234)') {\r\n        format.negative = 0;\r\n      } else if (format.negative === '1234-') {\r\n        format.negative = 1;\r\n      }\r\n      if(parseFloat(new_label) < 0) {\r\n        if(format.negative === 0) {\r\n          new_label = original ? `(${k_mark ? d3.format(format_kMark)(Math.abs(new_label)) : Math.abs(new_label)})` : \r\n                                 `(${k_mark ? d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(label)) : d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(new_label))})`\r\n        } else if(format.negative === 1) {\r\n          new_label = original ? `${k_mark ? d3.format(format_kMark)(Math.abs(new_label)) : Math.abs(new_label)}-` : \r\n                                 `${k_mark ? d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(label)) : d3.format(`${format_kMark}${format_decimal}f`)(Math.abs(new_label))}-`\r\n        }\r\n      }\r\n      \r\n      new_label += Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(format.unit) ? format.unit : ''\r\n    } else {\r\n      new_label *= 100\r\n      //小数位数\r\n      let num = original ? (k_mark ? d3.format(`${format_kMark}`)(Math.abs(new_label)) : d3.format('')(Math.abs(new_label))) :\r\n                           d3.format(`${format_kMark}.${format.decimal}f`)(Math.abs(new_label))\r\n\r\n      if(new_label < 0) {\r\n        if(format.negative === 0) new_label = `(${num})`\r\n        else if(format.negative === 1) new_label = `${num}-` \r\n        else new_label = `-${num}` \r\n      } else {\r\n        new_label = num\r\n      }\r\n    }\r\n\r\n    //货币\r\n    if(format.selectFormat === 'currency') {\r\n      let areaCode = ['', 'CN', 'JP', 'HK', 'US', 'EUR', 'GBP'];\r\n      let moneyCode = ['', '¥', '￥', 'HK$', '＄', '€', '£'];\r\n      let zoneObj = {\r\n        CN: `¥ 人民币`,\r\n        JP: `￥ 日元`,\r\n        HK: `HK$ 港元`,\r\n        US: `＄ 美元`,\r\n        EUR: `€ 欧元`,\r\n        GBP: `£ 英镑`\r\n      };\r\n      let format_zone = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(format.zone) ? format.zone : '¥ 人民币';\r\n      for (let item in zoneObj) {\r\n        if (format_zone === zoneObj[item]) {\r\n          format_zone = item;\r\n        }\r\n      };\r\n      let prefix = moneyCode[areaCode.indexOf(format_zone.toUpperCase())] || ''\r\n      new_label = `${prefix}${new_label}`\r\n    }\r\n    //前缀后缀\r\n    new_label = `${format.prefix}${new_label}${format.suffix}`\r\n  } else {\r\n    new_label += ''\r\n  }\r\n\r\n  if(new_label === 'undefined' || new_label === 'NaN') new_label = '' \r\n\r\n  return new_label\r\n}\r\n\r\nconst generateLabelTextFormat = function(aggr, label_index) {\r\n  let $$ = this;\r\n  let config = $$.config;\r\n  let type = config.data_type;\r\n  let colored_feature = config.data_colored_feature\r\n  let labelList = config.label_text || []\r\n  let format = type === 'table' ? _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].table_text_format : _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format\r\n  let final_list = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(aggr) ? labelList.filter(l => aggr === l.name) : labelList\r\n  \r\n  final_list.forEach(l => {\r\n    if(l && l.list && l.list[label_index] && l.list[label_index].format) format = l.list[label_index].format\r\n  })\r\n\r\n  let textFont = format.fontSize,\r\n      font_style = format.fontStyle,\r\n      text_decoration = format.decoration,\r\n      font_color = format.fontColor || $$.textColor,\r\n      text_letterSpacing = format.letterSpacing,\r\n      text_lineHeight = format.lineHeight;\r\n\r\n  function init(className) {\r\n    let selector = className || `.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}`\r\n    if(type === 'map') {\r\n      $$.bigContainer.selectAll(selector)\r\n        .nodes()\r\n        .forEach(d => {\r\n          d.style['font-size'] = `${textFont}px`;\r\n          d.style['color'] = font_color;\r\n          d.style['font-style'] = font_style;\r\n          d.style['text-decoration'] = text_decoration;\r\n          d.style['letter-spacing'] = `${text_letterSpacing}px`\r\n          d.style['line-height'] = `${text_lineHeight}px`\r\n        })\r\n    } else {\r\n      $$.main.selectAll(selector)\r\n        .attr('style', `font-size:${textFont}px; ${type === 'table' && Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_feature) ? '' : 'fill'}:${font_color}; font-style:${font_style}; \r\n                text-decoration:${text_decoration}; letter-spacing:${text_letterSpacing};`)\r\n        .on('click', (e) => {\r\n          let data = ''\r\n          if(!$$.isBarLineType) {\r\n            data = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(e.data) ? e.data : Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(e.values) ? e.values[0] : e;\r\n          } else {\r\n            //bar,line\r\n            if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(e.values)) {\r\n              data = e.values[0]\r\n            } else {\r\n              let colored_feature = e.colored_feature, key = e.key;\r\n              let temp = e.data.raw_data.filter(r => r[colored_feature] === key)\r\n              if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(temp)) data = temp[0]\r\n            }\r\n          }\r\n          Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(data)\r\n        })\r\n    }\r\n  }\r\n\r\n  return {\r\n    init: init,\r\n    format: format\r\n  }\r\n}\r\n\r\nconst initClickEvent = function({selector}) {\r\n  let $$ = this;\r\n  let config = $$.config;\r\n\r\n  $$.main.selectAll(selector)\r\n    .on('click', (e) => {\r\n      let data;\r\n      if(!$$.isBarLineType) {\r\n        data = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(e.data) ? e.data : Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(e.values) ? e.values[0] : e;\r\n      } else {\r\n        //bar,line\r\n        if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(e.values)) {\r\n          data = e.values[0]\r\n        } else {\r\n          let colored_feature = e.colored_feature, key = e.key;\r\n          let temp = e.data.raw_data.filter(r => r[colored_feature] === key)\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(temp)) data = temp[0]\r\n        }\r\n      }\r\n      Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(data)\r\n    })\r\n}\r\n\r\nconst initLabels = function(label_list, aggr) {\r\n  let $$ = this;\r\n  let config = $$.config;\r\n  let type = config.data_type;\r\n\r\n  let format_list = label_list.map((l, l_idx) => {\r\n    let formatLabel = $$.generateFormatLabel(aggr, l_idx)\r\n    let initLabelText = $$.generateLabelTextFormat(aggr, l_idx)\r\n    let label_height = initLabelText.format.lineHeight > 0 ? initLabelText.format.lineHeight : _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].sizeFor1Char.h\r\n    return {\r\n      label_name: l,\r\n      formatLabel: formatLabel,\r\n      initLabelText: initLabelText,\r\n      label_height: label_height\r\n    }\r\n  })\r\n  \r\n  if(type === 'table') {\r\n    format_list.forEach(l => {\r\n      let dc_text = {};\r\n      let align = l.initLabelText.format.align\r\n      if(align === 'right') {\r\n        dc_text.anchor = 'end'\r\n      } else if(align === 'left') {\r\n        dc_text.anchor = 'start'\r\n      } else {\r\n        dc_text.anchor = 'middle'\r\n      }\r\n      l.label_style = dc_text\r\n    })\r\n  }\r\n\r\n  return format_list\r\n}\r\n\r\nconst getLabelStyleList = function() {\r\n  let $$ = this;\r\n  let config = $$.config;\r\n  let type = config.data_type;\r\n  if($$.isBarLineType) {\r\n    config.data_combined.forEach((arr, arr_idx) => {\r\n      let item = []\r\n      arr.forEach((cm, cm_idx) => {\r\n        item.push($$.initLabels(cm.bars.labels, `${arr_idx}-${cm_idx}`))\r\n      })\r\n      $$.label_format_list.push(item)\r\n    })\r\n  } else {\r\n    let labels = config.data_labeled\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(labels) && type === 'table') {\r\n      const x_aggressions = config.data_column_aggressions\r\n      const y_aggressions = config.data_row_aggressions\r\n      labels = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(x_aggressions) ? x_aggressions : Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(y_aggressions) ? y_aggressions : []\r\n    }\r\n    $$.label_format_list = $$.initLabels(labels)\r\n  }\r\n}\r\n\r\nconst initLabelStyle = function() {\r\n  this.label_format_list.forEach((arr, k) => {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(arr)) {\r\n      arr.forEach((a, idx) => {\r\n        a.forEach((l, i) => {\r\n          l.initLabelText.init(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${i}-${k}-${idx}`)\r\n          this.initClickEvent({selector: `.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${i}-${k}-${idx}`})\r\n        })\r\n      })\r\n    } else {\r\n      arr.initLabelText.init(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${k}`)\r\n      this.initClickEvent({selector: `.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${k}`})\r\n    }\r\n  })\r\n}\r\n\r\n// 重新调整柱状图标签的位置\r\nconst reSortLabel = function () {\r\n  if (this.config.data_type === 'bar' || this.config.data_type === 'bar-line') {\r\n    let mcCombined = this.main.selectAll('.mc-combined');\r\n    this.label_format_list.forEach((arr, k) => {\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isArray\"])(arr)) {\r\n        arr.forEach((a, idx) => {\r\n          mcCombined.each(function(a, b) {\r\n            let mcBarsText = d3.select(this).selectAll(`.mc-bars-${k}-${idx}`).selectAll('.mc-bars-text');\r\n            if (!mcBarsText.empty()) {\r\n              mcBarsText.remove();\r\n              d3.select(this).append(() => mcBarsText.node())\r\n            }\r\n          })\r\n          // let mcBarsText = mcCombined.selectAll(`.mc-bars-${k}-${idx}`).selectAll('.mc-bars-text');\r\n          // if (!mcBarsText.empty()) {\r\n          //   mcBarsText.remove();\r\n          //   mcCombined.append(() => mcBarsText.node())\r\n          // }\r\n        })\r\n      } else {\r\n\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  generateLabelTextFormat,\r\n  generateFormatLabel,\r\n  initLabels,\r\n  getLabelStyleList,\r\n  initLabelStyle,\r\n  initClickEvent,\r\n  formatNumberFunction,\r\n  reSortLabel\r\n})\n\n//# sourceURL=webpack://mc/./src/label.js?");

/***/ }),

/***/ "./src/multiCat.js":
/*!*************************!*\
  !*** ./src/multiCat.js ***!
  \*************************/
/*! exports provided: generate, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generate\", function() { return generate; });\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _shape_table_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./shape/table.js */ \"./src/shape/table.js\");\n/* harmony import */ var _shape_pie_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shape/pie.js */ \"./src/shape/pie.js\");\n/* harmony import */ var _shape_bubble_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./shape/bubble.js */ \"./src/shape/bubble.js\");\n/* harmony import */ var _shape_funnel_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./shape/funnel.js */ \"./src/shape/funnel.js\");\n/* harmony import */ var _shape_map_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./shape/map.js */ \"./src/shape/map.js\");\n/* harmony import */ var _shape_scatter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./shape/scatter.js */ \"./src/shape/scatter.js\");\n/* harmony import */ var _shape_bar_line_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./shape/bar-line.js */ \"./src/shape/bar-line.js\");\n/* harmony import */ var _shape_bar_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./shape/bar.js */ \"./src/shape/bar.js\");\n/* harmony import */ var _shape_line_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./shape/line.js */ \"./src/shape/line.js\");\n/* harmony import */ var _shape_area_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./shape/area.js */ \"./src/shape/area.js\");\n/* harmony import */ var _tooltip_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./tooltip.js */ \"./src/tooltip.js\");\n/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./color.js */ \"./src/color.js\");\n/* harmony import */ var _pattern_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./pattern.js */ \"./src/pattern.js\");\n/* harmony import */ var _axis_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./axis.js */ \"./src/axis.js\");\n/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./size.js */ \"./src/size.js\");\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\n/* harmony import */ var _divide_lines_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./divide-lines.js */ \"./src/divide-lines.js\");\n/* harmony import */ var _init_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./init.js */ \"./src/init.js\");\n/* harmony import */ var _label_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./label.js */ \"./src/label.js\");\n/* harmony import */ var _api_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./api.js */ \"./src/api.js\");\n/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./zoom.js */ \"./src/zoom.js\");\n/* harmony import */ var _draw_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./draw.js */ \"./src/draw.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst generate = function(config) {\r\n\tconst inst = new _Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](config);\r\n\r\n\treturn inst;\r\n}\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (generate);\r\n\n\n//# sourceURL=webpack://mc/./src/multiCat.js?");

/***/ }),

/***/ "./src/pattern.js":
/*!************************!*\
  !*** ./src/pattern.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst generatePattern = function(patterns) {\r\n  return function(d) {\r\n    let id = d;\r\n    let pattern;\r\n    if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(id)) return 'fill';\r\n    if(patterns[id]) {\r\n      pattern = patterns[id];\r\n    } else {\r\n      pattern = 'fill';\r\n    }\r\n    return pattern;\r\n  }\r\n}\r\n\r\nconst createPattern = function(fillColor, type, t) {\r\n  let $$ = this;\r\n  let pattern = $$.defs.append('pattern')\r\n    .attr(\"patternUnits\", \"userSpaceOnUse\")\r\n    .attr('id', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pattern}-${t}`)\r\n    .attr(\"width\", \"6\")\r\n    .attr(\"height\", \"6\");\r\n\r\n  let g = pattern\r\n    .append(\"g\")\r\n    .attr(\"fill-rule\", \"evenodd\")\r\n    .attr(\"stroke-width\", 1)\r\n    .append(\"g\")\r\n    .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pattern}`)\r\n    .attr(\"fill\", fillColor || 'rgb(225, 127, 8)');\r\n\r\n  switch(type) {\r\n    case 'zuo':\r\n      //左斜纹\r\n      g.append(\"polygon\").attr(\"points\", \"6 5 6 6 5 6\");\r\n      g.append(\"polygon\").attr(\"points\", \"5 0 6 0 0 6 0 5\");\r\n      break;\r\n    case 'you':\r\n      //右斜纹\r\n      g.append(\"polygon\").attr(\"points\", \"6 0 6 1 5 0\");\r\n      g.append(\"polygon\").attr(\"points\", \"0 0 6 6 5 6 0 1\");\r\n      break;\r\n    case 'heng':\r\n      //横纹\r\n      g.append('polygon').attr('points', '0 0 6 0 6 1 0 1')\r\n      break;\r\n    case 'shu':\r\n      //竖纹\r\n      g.append('polygon').attr('points', '0 0 1 0 1 6 0 6')\r\n      break;\r\n    case 'ge':\r\n      //格子\r\n      g.append('polygon').attr('points', '0 0 6 0 6 1 0 1')\r\n      g.append('polygon').attr('points', '0 0 1 0 1 6 0 6')\r\n      break;\r\n    case 'zha':\r\n      //栅栏\r\n      g.append(\"polygon\").attr(\"points\", \"6 5 6 6 5 6\");\r\n      g.append(\"polygon\").attr(\"points\", \"5 0 6 0 0 6 0 5\");\r\n      g.append(\"polygon\").attr(\"points\", \"6 0 6 1 5 0\");\r\n      g.append(\"polygon\").attr(\"points\", \"0 0 6 6 5 6 0 1\");\r\n      break;\r\n    case 'fill':\r\n      //实填充\r\n      g.append('polygon')\r\n        .attr('points', '0 0 6 0 6 6 0 6')\r\n        .attr('fill', fillColor)\r\n      break\r\n     default:\r\n      g.append(\"polygon\");\r\n  }\r\n  return pattern.node()\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  generatePattern,\r\n  createPattern\r\n})\n\n//# sourceURL=webpack://mc/./src/pattern.js?");

/***/ }),

/***/ "./src/shape/area.js":
/*!***************************!*\
  !*** ./src/shape/area.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_3__);\n\r\n\r\n\r\n\r\n\r\nconst drawOneArea = function(obj) {\r\n  const $$ = this;\r\n  const config = $$.config; \r\n  //d3提供的symbols，如果用户没有提供默认为圆点\r\n  const symbols = [d3.symbolCircle, d3.symbolTriangle, d3.symbolCross, d3.symbolDiamond, d3.symbolSquare, d3.symbolStar, d3.symbolWye]\r\n  // //列分类变量\r\n  // let categories = config.data_column_categories,\r\n      //x 轴比例尺单位\r\n     let band = $$.x.bandwidth(),\r\n      //x 轴最小band\r\n      // minBand = CLASS.min_band,\r\n      //线粗细\r\n      line_size = config.line_size,\r\n      rotated = 0,\r\n      symbol = symbols[0],\r\n      //颜色为分类变量\r\n      keys = obj.stackedKeys,\r\n      stackedData = obj.stackedData,\r\n      colorIdex = obj.multirow_idx,\r\n      //颜色相关信息\r\n      colored_stacked = obj.colored_stacked,\r\n      //标签数组\r\n      labeled_features = obj.labeled_features,\r\n      //容器\r\n      my_area = obj.container,\r\n      //y轴比例尺\r\n      yScale = obj.yScale,\r\n      //透明度\r\n      opacity = obj.opacity,\r\n      label_format_list = obj.label_format_list || [],\r\n      cmi = obj.cmi || 0,\r\n      //每个multiple到顶部的距离\r\n      distanceToTop = ($$.height_one_chart || $$.height) * obj.multirow_idx;\r\n  switch(config.line_pattern) {\r\n    case 'cross':\r\n      symbol = symbols[2];\r\n      break;\r\n    case 'cross45':\r\n      symbol = symbols[2];\r\n      rotated = 45\r\n      break;\r\n    case 'triangle':\r\n      symbol = symbols[1];\r\n      break;\r\n    case 'triangle180':\r\n      symbol = symbols[1];\r\n      rotated = 180\r\n      break;\r\n    case 'square':\r\n      symbol = symbols[4];\r\n      break;\r\n    case 'star':\r\n      symbol = symbols[5];\r\n      break;\r\n    case 'diamond':\r\n      symbol = symbols[3];\r\n      break;\r\n    case 'wye':\r\n      symbol = symbols[6];\r\n      break;\r\n    default:\r\n      symbol = symbols[0];\r\n      break;\r\n  }\r\n\r\n  //symbol 的大小\r\n  let arc = d3.symbol().type(symbol).size(line_size * 10);\r\n\r\n  my_area.attr('transform', `translate(0, ${ obj.multirow_idx * 50})`)\r\n\r\n  function getXKey (d) {\r\n    let list = config.data_column_categories;\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (d[list[i]]){\r\n        return d[list[i]];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function getYkey (d) {\r\n    let list = config.data_row_aggressions;\r\n    for (let i = 0; i < list.length; i++) {\r\n      if (d[list[i][0]]) {\r\n        return d[list[i][0]];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function hexToRgba (sHex, alpha = 1) {\r\n    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/\r\n    let sColor = sHex.toLowerCase()\r\n    if (sColor && reg.test(sColor)) {\r\n      if (sColor.length === 4) {\r\n        var sColorNew = '#'\r\n        for (let i = 1; i < 4; i += 1) {\r\n          sColorNew += sColor.slice(i, i + 1).concat(sColor.slice(i, i + 1))\r\n        }\r\n        sColor = sColorNew\r\n      }\r\n      var sColorChange = []\r\n      for (let i = 1; i < 7; i += 2) {\r\n        sColorChange.push(parseInt('0x' + sColor.slice(i, i + 2)))\r\n      }\r\n      return 'rgba(' + sColorChange.join(',') + ',' + alpha + ')'\r\n    } else {\r\n      return sColor\r\n    }\r\n  }\r\n\r\n  let colorObj = {}\r\n  function getColor(){\r\n    let index = 0;\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if(index < obj.color_schemes.length) {\r\n        colorObj[keys[index]] = obj.color_schemes[index];\r\n      }\r\n      index++\r\n    }\r\n  }\r\n\r\n  getColor();\r\n\r\n\r\n  function getKey (item) {\r\n    let key = '';\r\n    if (obj.colored_feature) {\r\n      key = item[obj.colored_feature];\r\n    } else {\r\n      key = keys[colorIdex];\r\n    }\r\n    return key;\r\n  }\r\n\r\n  if (colored_stacked) {\r\n    let area_data = stackedData;\r\n \r\n    // 面积图第一个点画不出来，需要重复第一个点\r\n    let list = config.data_row_aggressions;\r\n    for (let i = 0; i < list.length; i++) {\r\n      for (let j = 0; j < area_data.length; j++) {\r\n        let first = JSON.parse(JSON.stringify(area_data[j][0]));\r\n        first[list[i][0]] = 0;\r\n        area_data[j].unshift(first);\r\n        let last = JSON.parse(JSON.stringify(area_data[j][area_data[j].length - 1]));\r\n        last[list[i][0]] = 0;\r\n        area_data[j].push(last);\r\n      }\r\n    }\r\n    // 面积\r\n    let area = d3.area()\r\n      .defined((d) => Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d))\r\n      .x((d) => {\r\n        let key = getXKey(d);\r\n        return (($$.x(key) ? $$.x(key) : 0) + band / 2);\r\n      })\r\n      .y1((d) => {\r\n        let key = getYkey(d);\r\n        return (yScale(key)  + distanceToTop);\r\n      })\r\n      .y0((d) =>{\r\n        return yScale(0);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n    // 线\r\n    let line = d3.line()\r\n      .defined((d) => Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d))\r\n      .x((d) => {\r\n        let key = getXKey(d);\r\n        return (($$.x(key) ? $$.x(key) : 0) + band / 2);\r\n      })\r\n      .y((d) => {\r\n        let key = getYkey(d);\r\n        return (yScale(key)  + distanceToTop);\r\n      })\r\n      .curve(d3.curveMonotoneX);\r\n\r\n  \r\n    let groupByColor = my_area\r\n      .selectAll(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`)\r\n      .data(area_data)\r\n      .enter().append(\"g\")\r\n      .attr('class', function(d) {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        return d.class_name\r\n      })\r\n\r\n    // 画面积跟画线\r\n    groupByColor\r\n      .append(\"path\")\r\n      .attr('class', (d) => `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}-${keys.indexOf(d.key)}`)\r\n      .attr('d', (d) => {\r\n        return area(d)\r\n      })\r\n      .attr('fill', (d, index) => {\r\n        let key = getKey(d[0])\r\n        return hexToRgba(colorObj[key], isNaN(config.area_opacity) ? 0.25 : config.area_opacity);\r\n      })\r\n      .attr('d', (d) => {\r\n        return line(d);\r\n      })\r\n      .attr('stroke-width', 2)\r\n      .attr('stroke', (d, index)=> {\r\n        let key = getKey(d[0]);\r\n        return colorObj[key]\r\n      })\r\n      .attr(\"stroke-opacity\", opacity);\r\n\r\n    \r\n\r\n    let groupByCategory = groupByColor\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n      .append('g')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n      .data(function(d) {\r\n        return d; \r\n      })\r\n      .enter()\r\n      .append('g')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`);\r\n      \r\n    // 画点\r\n    groupByCategory.append('path')\r\n      .attr('d', (d, index) => {\r\n        return arc(d);\r\n      })\r\n      .attr('fill', (d) => {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        let key = getKey(d);\r\n        return colorObj[key]\r\n      })\r\n      .attr(\"opacity\", opacity)\r\n      .attr('transform', (d) => {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        let key = getXKey(d)\r\n        let x = $$.x(key) + band / 2;\r\n        let yKey = getYkey(d);\r\n        let y = yScale(yKey) + distanceToTop;\r\n        if (!x || !y) return;\r\n        return `translate(${x}, ${y}) rotate(${rotated})`\r\n      })\r\n      .on(\"mouseenter\", function(d) {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        $$.displayTip(d)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d) {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(config.data_click) && config.data_click(d)\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`).attr('opacity', opacity * 0.2)\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}-${keys.indexOf(d.key)}`).attr('opacity', opacity)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n\r\n    // 画标签\r\n    labeled_features.forEach((l, li) => {\r\n      let formatLabel = label_format_list[li].formatLabel\r\n      //标签之间行距\r\n      let label_height = label_format_list[li].label_height\r\n      groupByCategory\r\n        .append('text')\r\n        .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text}-${li}-${cmi}`)\r\n        .attr('text-anchor', 'middle')\r\n        .text((d) => {\r\n          return formatLabel(d[l]) \r\n        })\r\n        .attr('transform', (d) => {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n          let xKey = getXKey(d);\r\n          let yKey = getYkey(d);\r\n          let w1 = $$.x(xKey) + band / 2;\r\n          let w2 = yScale(yKey)  + distanceToTop - 8 - label_height * li\r\n          if (!w1 || !w2) return;\r\n          return `translate(${w1}, ${w2})`\r\n        })\r\n        .on(\"mouseenter\", function(d) {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n          $$.displayTip(d)\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n  }\r\n\r\n  getColorList();\r\n  \r\n  function getColorList () {\r\n    $$.modifyColorList({\r\n      colored_type: obj.colored_type,\r\n      colored_feature: keys,\r\n      keys: keys\r\n    })\r\n  }\r\n\r\n\r\n  function getColorList () {\r\n    let arr = [];\r\n    for (let i = 0; i < keys.length; i++) {\r\n      let obj = {};\r\n      obj[keys[i]] = colorObj[keys[i]];\r\n      arr.push(obj);\r\n    }\r\n    return arr;\r\n  }\r\n  $$.config.colorList = getColorList();\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawOneArea\r\n})\n\n//# sourceURL=webpack://mc/./src/shape/area.js?");

/***/ }),

/***/ "./src/shape/bar-line.js":
/*!*******************************!*\
  !*** ./src/shape/bar-line.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst drawBarLine = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const bindto = config.bindto.slice(1)\r\n  let data_column_categories = config.data_column_categories;\r\n\r\n  let cmi = 0,\r\n      axis = 'y',\r\n      aggr = '',\r\n      type = config.data_type, \r\n      colored_feature = {},\r\n      colored_type = 'bar',\r\n      colored_stacked = false,\r\n      labeled_features = [], \r\n      color_function = null,\r\n      pattern_function = null,\r\n      keys = [],\r\n      new_data = [],\r\n      color_schemes = [],\r\n      color_opacity = 1,\r\n      color_range = [],\r\n      color_colors = [],\r\n      color_patterns = [];\r\n    \r\n  function initAreaAxis (idx, x_container) {\r\n    let data = config.data_json;\r\n    let categories = config.data_column_categories\r\n    let axisData = data[idx];\r\n    let axisKey = categories[idx];\r\n    let domain_x = []\r\n    axisData.forEach((n) => {\r\n      domain_x.push(n[axisKey])\r\n    });\r\n    let axisX = d3.scaleBand().range([0, $$.width]).domain(domain_x)\r\n    $$.x = axisX;\r\n    $$.drawAxisById({\r\n      idx: idx, \r\n      container: x_container, \r\n      scale: axisX, \r\n      axis: 'x',\r\n      base_axis: true // 需要画出text的axis\r\n    });\r\n  }\r\n\r\n  function initAreaData (data) {\r\n    if (!colored_feature) {\r\n      new_data = [data];\r\n      return;\r\n    }\r\n    let obj = {}\r\n    data.forEach(item => {\r\n      if (!obj[item[colored_feature]]) {\r\n        obj[item[colored_feature]] = [];\r\n        obj[item[colored_feature]].push(item);\r\n      } else {\r\n        obj[item[colored_feature]].push(item)\r\n      }\r\n    })\r\n    for (let key in obj) {\r\n      new_data.push(obj[key])\r\n    }\r\n  }\r\n\r\n  function initAreaKey (data, area) {\r\n    if (colored_feature) {\r\n      let len = data.length;\r\n      let arr = []\r\n      for (let i = 0; i < len; i++) {\r\n        if(!arr.includes(data[i][colored_feature])) {\r\n          arr.push(data[i][colored_feature])\r\n        }\r\n      }\r\n      keys = arr;\r\n    } else {\r\n      keys.push(area)\r\n    }\r\n  }\r\n\r\n  function initAreaColor () {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(color_schemes)) {\r\n      if(colored_type === 'ordinal' || !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_type)) {\r\n        let basic_color = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_schemes;\r\n        color_schemes = basic_color;\r\n      } else if(colored_type === 'linear'){\r\n        color_schemes = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_linear;\r\n      }\r\n    }\r\n  }\r\n\r\n  function initStyle(aggr_map, aggr_index) {\r\n    cmi = aggr_index\r\n    axis = aggr_map.axis\r\n    type = aggr_map.type\r\n\r\n    let bar = aggr_map.bars,\r\n        color_style = aggr_map.color_style;\r\n\r\n    colored_feature = bar.colored && bar.colored.feature\r\n    colored_type = bar.colored && bar.colored.type\r\n    colored_stacked = bar.colored && bar.colored.stacked\r\n    labeled_features = bar.labels\r\n    aggr = bar.aggr\r\n    if(color_style) {\r\n      color_schemes = color_style.schemes \r\n      color_opacity = color_style.opacity\r\n      color_range = color_style.range \r\n      color_colors = color_style.colors \r\n      color_patterns = color_style.patterns\r\n    }\r\n  }\r\n\r\n  function initKeys(values) {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_feature)) {\r\n      if(colored_type === 'linear') {\r\n        let flag = true\r\n        let aggr_list = $$.domain_list.map(d => d.aggr_domain)\r\n        aggr_list.forEach(a => {\r\n          if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(a[colored_feature])) {\r\n            keys = a[colored_feature]\r\n            flag = false\r\n          }\r\n        })\r\n        if(flag) keys = d3.extent(values.map((d) => d[colored_feature]));\r\n      } else {\r\n        let arr = values.map(d => d[colored_feature])\r\n        let unique_arr = $$.getUniqueArray(arr)\r\n        keys = unique_arr.filter(k => Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(k))\r\n      }\r\n    } else {\r\n      keys = [aggr]\r\n    }\r\n  }\r\n\r\n  function initColorPatternSchemes(values) {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(color_schemes)) {\r\n      if(colored_type === 'ordinal' || !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_type)) {\r\n        let basic_color = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_schemes;\r\n            //slice_color = basic_color.slice(0, cmi);\r\n\r\n        color_schemes = basic_color//basic_color.slice(cmi).concat(slice_color)\r\n      } else if(colored_type === 'linear'){\r\n        color_schemes = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].basic_color_linear\r\n      }\r\n    }\r\n    color_function = $$.generateColor(color_schemes, colored_type, colored_feature, color_range, color_colors, values)\r\n    type === 'bar' && (pattern_function = $$.generatePattern(color_patterns))\r\n  }\r\n\r\n  function initBarPatterns({createBarPatterns=true}) {\r\n    if(type === 'bar' && createBarPatterns) {\r\n      keys.forEach((b,i) => {\r\n        let color = color_function(b),\r\n            patterns = ['fill', 'zuo', 'you', 'heng', 'shu', 'ge', 'zha', 'empty'];\r\n        patterns.forEach(vi => {\r\n          $$.createPattern(color, vi, `${vi}-${i}-${bindto}-${cmi}`) \r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  function getColorList() {\r\n    let colorsObj = {}\r\n    if(colored_type === 'linear') {\r\n      if(type === 'bar') {\r\n        colorsObj = $$.modifyColorList({\r\n          colored_type: colored_type,\r\n          colored_feature: colored_feature,\r\n          color_function: color_function,\r\n          keys: keys,\r\n          aggr: aggr,\r\n          cmi: cmi,\r\n          color_schemes: color_schemes,\r\n          opacity: color_opacity,\r\n          color_colors: color_colors,\r\n          color_patterns: color_patterns\r\n        })\r\n      }\r\n    } else {\r\n      colorsObj = $$.modifyColorList({\r\n        colored_type: colored_type,\r\n        colored_feature: colored_feature,\r\n        color_function: color_function,\r\n        pattern_function: pattern_function,\r\n        keys: keys,\r\n        aggr: aggr,\r\n        type: type,\r\n        cmi: cmi,\r\n        color_schemes: color_schemes,\r\n        opacity: color_opacity,\r\n        color_colors: color_colors,\r\n        color_patterns: color_patterns\r\n      })\r\n    }\r\n\r\n    return colorsObj\r\n  }\r\n  \r\n  function updateData({data, colorsObj}) {\r\n    if(colored_stacked) {\r\n      let stack = d3.stack()\r\n        //.order(d3.stackOrderInsideOut)\r\n        .keys(keys) \r\n        .offset(d3.stackOffsetDiverging);\r\n      let stackedData = d3.nest()\r\n        .key(d => {\r\n          return $$.getCombinedKeys({data: d})\r\n        })\r\n        .sortKeys($$.sortFunction)\r\n        .rollup(function(d){\r\n          let d2 = {}\r\n          data_column_categories.forEach((c) => {\r\n            d2[c] = d[0][c]\r\n          })\r\n          d.forEach(function(d){\r\n            Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(d[colored_feature]) && (d2[d[colored_feature]] = d[aggr])\r\n          })\r\n          d2.raw_data = d\r\n          return d2;\r\n        })\r\n        .entries(data)\r\n        .map(function (d) { return d.value; });\r\n      new_data = stack(stackedData);\r\n      new_data.forEach((s) => {\r\n        let key = s.key, value = `${key}(${aggr})`;\r\n\r\n        let temp = colorsObj.list.filter(l => l.unique === value)[0],\r\n            index = temp.index,\r\n            color = temp.color,\r\n            className = temp.className; \r\n\r\n        s.color = color;\r\n        s.class_name = className\r\n\r\n        s.forEach((d) => {\r\n          d.colored_feature = colored_feature;\r\n          d.key = key\r\n          d[0] = isNaN(d[0]) ? 0 : d[0];\r\n          d[1] = isNaN(d[1]) ? d[0] : d[1];\r\n          d.color = color \r\n          d.pattern = `url(#${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pattern}-${temp.fill}-${index}-${bindto}-${cmi})`\r\n          d.raw_data = d.data.raw_data.filter(f => f[colored_feature] === d.key)[0] || {}\r\n          d.class_name = className\r\n        })\r\n      })\r\n    } else {\r\n      new_data = $$.getNestedData({data: data})\r\n      new_data.forEach(d => {\r\n        d.actualVal = isNaN(d.values[0][aggr]) ? 0 : d.values[0][aggr]\r\n\r\n        let key = aggr, value = `${aggr}(${aggr})`\r\n\r\n        if(colored_type === 'linear') {\r\n          value = d.values[0][colored_feature]\r\n          d.color = color_function(value)\r\n          d.class_name = `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`\r\n          d.pattern = ''\r\n        } else {\r\n          if(colored_type === 'ordinal') {\r\n            key = d.values[0][colored_feature]\r\n            value = `${key}(${aggr})`\r\n          }\r\n          \r\n          let temp = colorsObj.list.filter(l => l.unique === value)[0],\r\n              index = temp.index;\r\n          d.color = temp.color\r\n          d.class_name = temp.className\r\n          d.pattern = `url(#${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].pattern}-${temp.fill}-${index}-${bindto}-${cmi})`\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  function addPath({bar_index, multirow_idx=0, aggr_length, scale, scale_y2, container}) {\r\n    let [first, second] = [...cmi.split('-')],\r\n        label_format_list = $$.label_format_list[first][second],\r\n        yScale = axis === 'y' ? scale : scale_y2\r\n      \r\n    switch (type) {\r\n      case 'line':\r\n        $$.drawOneLine({\r\n          stackedKeys: keys,\r\n          stackedData: new_data,\r\n          multirow_idx: multirow_idx, \r\n          colored_feature: colored_feature,\r\n          colored_stacked: colored_stacked,\r\n          labeled_features: labeled_features,\r\n          yScale: yScale,\r\n          opacity: color_opacity,\r\n          cmi: cmi,\r\n          label_format_list: label_format_list,\r\n          container: container.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].lines}-${cmi}`)\r\n        })\r\n        break;\r\n      case 'area':\r\n        $$.drawOneArea({\r\n          stackedKeys: keys,\r\n          stackedData: new_data,\r\n          multirow_idx: multirow_idx, \r\n          colored_feature: colored_feature,\r\n          colored_stacked: colored_stacked,\r\n          labeled_features: labeled_features,\r\n          color_schemes: color_schemes,\r\n          yScale: yScale,\r\n          opacity: color_opacity,\r\n          cmi: cmi,\r\n          label_format_list: label_format_list,\r\n          container: container.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].area}-${cmi}`)\r\n        })\r\n        break;\r\n      case 'bar':\r\n        $$.drawOneBar({\r\n          stackedKeys: keys,\r\n          stackedData: new_data, \r\n          multirow_idx: multirow_idx, \r\n          colored_feature: colored_feature,\r\n          colored_stacked: colored_stacked,\r\n          labeled_features: labeled_features,\r\n          yScale: yScale,\r\n          opacity: color_opacity,\r\n          cmi: cmi,\r\n          label_format_list: label_format_list,\r\n          container: container.append('g').attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bars}-${cmi}`),\r\n          aggr_length: aggr_length,\r\n          bar_index: bar_index\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    initAreaKey,\r\n    initAreaAxis,\r\n    initAreaData,\r\n    initAreaColor,\r\n    initStyle,\r\n    initKeys,\r\n    initColorPatternSchemes,\r\n    initBarPatterns,\r\n    updateData,\r\n    addPath,\r\n    getColorList\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawBarLine\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/shape/bar-line.js?");

/***/ }),

/***/ "./src/shape/bar.js":
/*!**************************!*\
  !*** ./src/shape/bar.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n\r\n\r\n\r\n\r\nconst drawOneBar = function(obj) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const isRotated = config.axis_rotated;\r\n\r\n  let minBand = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].min_band,\r\n      stackedData = obj.stackedData,\r\n      colored_stacked = obj.colored_stacked,\r\n      labeled_features = obj.labeled_features,\r\n      my_rects = obj.container,\r\n      yScale = obj.yScale,\r\n      cmi = obj.cmi || 0,\r\n      aggr_length = obj.aggr_length || 1,\r\n      opacity = obj.opacity,\r\n      label_format_list = obj.label_format_list || [],\r\n      band = $$.x.bandwidth(),\r\n      bar_width = Math.max(band / aggr_length * (1 - config.bar_padding_outter * 2 - config.bar_padding_inner * (aggr_length-1)), 0),\r\n      distanceToTop = (isRotated ? $$.width_one_chart : $$.height_one_chart) * obj.multirow_idx,\r\n      distanceToLeft = bar_width * obj.bar_index + band * config.bar_padding_outter + \r\n        band * config.bar_padding_inner * obj.bar_index;\r\n\r\n  if(colored_stacked) {\r\n    let groupByColor = my_rects\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`)\r\n      .data(stackedData)\r\n      .enter().append(\"g\")\r\n      .attr('class', d => d.class_name)\r\n\r\n    let groupByCategory = groupByColor\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n      .data(function(d) {\r\n        return d; \r\n      })\r\n      .enter().append('g')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n\r\n    groupByCategory\r\n      .append(\"rect\")\r\n      .attr('stroke', d => d.color)\r\n      .attr(\"opacity\", opacity)\r\n      .attr(\"fill\", d => d.pattern)\r\n      .attr('x', d => isRotated ? (yScale(d[0]) + distanceToTop) : ($$.x($$.getCombinedKeys({data: d.data})) + distanceToLeft))\r\n      .attr('y', d => {\r\n        return isRotated ? ($$.x($$.getCombinedKeys({data: d.data})) + distanceToLeft) : (yScale(d[1]) + distanceToTop)\r\n      })\r\n      .attr(\"height\", d => isRotated ? bar_width : Math.max(yScale(d[0]) - yScale(d[1]), 0))\r\n      .attr(\"width\", d => isRotated ? Math.max(yScale(d[1]) - yScale(d[0]), 0) : bar_width)\r\n      .on(\"mouseenter\", function(d) { \r\n        $$.displayTip(d.raw_data)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(config.data_click) && config.data_click(d.raw_data)\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n    \r\n    // let total_height = 0\r\n    // labeled_features.forEach((l, li) => {\r\n    //   let formatLabel = label_format_list[li].formatLabel,\r\n    //   //标签之间行距\r\n    //       label_height = label_format_list[li].label_height;\r\n\r\n    //   total_height += +label_height\r\n      \r\n    //   groupByCategory\r\n    //     .append('text')\r\n    //     .attr('class', `${CLASS.label_text} ${CLASS.label_text}-${li}-${cmi}`)\r\n    //     .attr('text-anchor', 'middle')\r\n    //     .text((d) => {\r\n    //       if(band < minBand) return\r\n          \r\n    //       let txt = formatLabel(d.raw_data[isDefined(l.val) ? l.val : l])\r\n\r\n    //       let max_height = isRotated ? (yScale(d[1]) - yScale(d[0])) : (yScale(d[0]) - yScale(d[1]))\r\n\r\n    //       if(isRotated && ($$.getTextLength(txt) > max_height)) return\r\n\r\n    //       if(!isRotated && (total_height > max_height)) return\r\n         \r\n    //       return txt\r\n    //     })\r\n    //     .attr('transform', (d) => {\r\n    //       let x = 0, y = 0;\r\n    //       let w1 = $$.x($$.getCombinedKeys({data: d.data})) + bar_width / 2 + distanceToLeft\r\n    //       let w2 = (yScale(d[0]) + yScale(d[1])) / 2 + distanceToTop\r\n    //       if(isRotated) {\r\n    //         y = w1 + label_height * li - label_height * (labeled_features.length - 1) / 2 + 4\r\n    //         x = w2\r\n    //       } else {\r\n    //         y = w2 + label_height * li;\r\n    //         x = w1;\r\n    //       }\r\n    //       return `translate(${x}, ${y})`\r\n    //     })\r\n    //     .on(\"mouseenter\", function(d) { \r\n    //       $$.displayTip(d.raw_data)\r\n    //     })\r\n    //     .on(\"mouseout\", function() {\r\n    //       $$.displayTip()\r\n    //     })\r\n    // })\r\n\r\n    let my_text = my_rects.append('g').attr('class', 'mc-bars-text');\r\n    let text_ground = my_text.selectAll('mc-text-element')\r\n    .data(stackedData)\r\n    .enter().append('g')\r\n    .attr('class', d => d.class_name)\r\n\r\n    let my_text_groupByCategory = text_ground\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n      .data(function(d) {\r\n        return d; \r\n      })\r\n      .enter().append('g')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n\r\n    let total_height = 0\r\n    labeled_features.forEach((l, li) => {\r\n      let formatLabel = label_format_list[li].formatLabel,\r\n      //标签之间行距\r\n          label_height = label_format_list[li].label_height;\r\n\r\n      total_height += +label_height\r\n      \r\n      my_text_groupByCategory\r\n        .append('text')\r\n        .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text}-${li}-${cmi}`)\r\n        .attr('text-anchor', 'middle')\r\n        .text((d) => {\r\n          if(band < minBand) return\r\n          \r\n          let txt = formatLabel(d.raw_data[Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(l.val) ? l.val : l])\r\n\r\n          let max_height = isRotated ? (yScale(d[1]) - yScale(d[0])) : (yScale(d[0]) - yScale(d[1]))\r\n\r\n          if(isRotated && ($$.getTextLength(txt) > max_height)) return\r\n\r\n          if(!isRotated && (total_height > max_height)) return\r\n         \r\n          return txt\r\n        })\r\n        .attr('transform', (d) => {\r\n          let x = 0, y = 0;\r\n          let w1 = $$.x($$.getCombinedKeys({data: d.data})) + bar_width / 2 + distanceToLeft\r\n          let w2 = (yScale(d[0]) + yScale(d[1])) / 2 + distanceToTop\r\n          if(isRotated) {\r\n            y = w1 + label_height * li - label_height * (labeled_features.length - 1) / 2 + 4\r\n            x = w2\r\n          } else {\r\n            y = w2 + label_height * li;\r\n            x = w1;\r\n          }\r\n          return `translate(${x}, ${y})`\r\n        })\r\n        .on(\"mouseenter\", function(d) { \r\n          $$.displayTip(d.raw_data)\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n\r\n  } else {\r\n    let group = my_rects.selectAll(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`)\r\n      .data(stackedData)\r\n      .enter().append('g')\r\n      .attr('class', d => d.class_name)\r\n\r\n    group\r\n      .append(\"rect\")\r\n      .attr(\"x\", function(d) {\r\n        if(isRotated) {\r\n          return distanceToTop + (d.actualVal < 0 ? Math.abs(yScale(0) - Math.abs(yScale(d.actualVal) - yScale(0))) : yScale(0))\r\n        } else {\r\n          return $$.x(d.key) + distanceToLeft\r\n        }\r\n      })\r\n      .attr('y', d => {\r\n        return isRotated ? ($$.x(d.key) + distanceToLeft) : (yScale(Math.max(d.actualVal, 0)) + distanceToTop)\r\n      })\r\n      .attr('height', d => isRotated ? bar_width : Math.abs(yScale(d.actualVal) - yScale(0)))\r\n      .attr('width', d => isRotated ? Math.abs(yScale(d.actualVal) - yScale(0)) : bar_width)\r\n      .attr('stroke', d => d.color)\r\n      .attr('fill', d => d.pattern || d.color)\r\n      .attr(\"opacity\", opacity)\r\n      .on(\"mouseenter\", function(d) {\r\n        $$.displayTip(d.values[0])\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(config.data_click) && config.data_click(d.values[0])\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n\r\n    /*\r\n    // 每条柱子跟文本说明在同个组(g)里面，会出现前面柱子的文本说明过长而被后面的柱子挡住\r\n    //add bar labels\r\n    let total_height = 0\r\n    labeled_features.forEach((l, li) => {\r\n      let formatLabel = label_format_list[li].formatLabel,\r\n      //标签之间行距\r\n          label_height = label_format_list[li].label_height;\r\n      \r\n      total_height += +label_height\r\n\r\n      group\r\n        .append('text')\r\n        .attr(\"class\", `${CLASS.label_text} ${CLASS.label_text}-${li}-${cmi}`)\r\n        .attr('text-anchor', d => isRotated ? (d.actualVal >= 0 ? 'start' : 'end') : 'middle')\r\n        .text((d) => {\r\n          if(band < minBand) return\r\n\r\n          let bar_h = Math.abs(yScale(0) - yScale(d.actualVal))\r\n\r\n          let space_h = isRotated ? $$.width_one_chart : ($$.height_one_chart - bar_h)\r\n          \r\n          let txt = formatLabel(d.values[0][isDefined(l.val) ? l.val : l]);\r\n\r\n          if(isRotated && $$.getTextLength(txt) > space_h) return\r\n\r\n          if(!isRotated && (total_height > space_h)) return\r\n\r\n          return txt;\r\n        })\r\n        .attr('transform', (d) => {\r\n          let x = 0, y = 0;\r\n          let w1 = $$.x(d.key) + bar_width / 2 + distanceToLeft\r\n          let w2 = yScale(d.actualVal) + distanceToTop;\r\n          if(isRotated) {\r\n            y = w1 + label_height * li - label_height * (labeled_features.length - 1) / 2 + 4\r\n            x = w2 + (d.actualVal >= 0 ? 2 : -2)\r\n          } else {\r\n            y = w2 + (d.actualVal >= 0 ? -(label_height * li + 4) : (label_height * li + 14))\r\n            x = w1\r\n          }\r\n          return `translate(${x}, ${y})`\r\n        })\r\n        .on(\"mouseenter\", function(d) {\r\n          $$.displayTip(d.values[0])\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n    */\r\n\r\n    // 将每个柱子的文本说明独立出来，在柱子绘制完成之后再进行绘制，使得文本说明在柱子的上一层\r\n    // let my_text = d3.create('g').attr('class', 'mc-bars-text');\r\n    let my_text = my_rects.append('g').attr('class', 'mc-bars-text');\r\n    let text_ground = my_text.selectAll('mc-text-element')\r\n    .data(stackedData)\r\n    .enter().append('g')\r\n    .attr('class', d => d.class_name)\r\n    let total_height = 0\r\n    labeled_features.forEach((l, li) => {\r\n      let formatLabel = label_format_list[li].formatLabel,\r\n      //标签之间行距\r\n          label_height = label_format_list[li].label_height;\r\n      \r\n      total_height += +label_height\r\n\r\n      text_ground\r\n        .append('text')\r\n        .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text}-${li}-${cmi}`)\r\n        .attr('text-anchor', d => isRotated ? (d.actualVal >= 0 ? 'start' : 'end') : 'middle')\r\n        .text((d) => {\r\n          if(band < minBand) return\r\n\r\n          let bar_h = Math.abs(yScale(0) - yScale(d.actualVal))\r\n\r\n          let space_h = isRotated ? $$.width_one_chart : ($$.height_one_chart - bar_h)\r\n          \r\n          let txt = formatLabel(d.values[0][Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(l.val) ? l.val : l]);\r\n\r\n          if(isRotated && $$.getTextLength(txt) > space_h) return\r\n\r\n          if(!isRotated && (total_height > space_h)) return\r\n\r\n          return txt;\r\n        })\r\n        .attr('transform', (d) => {\r\n          let x = 0, y = 0;\r\n          let w1 = $$.x(d.key) + bar_width / 2 + distanceToLeft\r\n          let w2 = yScale(d.actualVal) + distanceToTop;\r\n          if(isRotated) {\r\n            y = w1 + label_height * li - label_height * (labeled_features.length - 1) / 2 + 4\r\n            x = w2 + (d.actualVal >= 0 ? 2 : -2)\r\n          } else {\r\n            y = w2 + (d.actualVal >= 0 ? -(label_height * li + 4) : (label_height * li + 14))\r\n            x = w1\r\n          }\r\n          return `translate(${x}, ${y})`\r\n        })\r\n        .on(\"mouseenter\", function(d) {\r\n          $$.displayTip(d.values[0])\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n    // my_rects.append(() => my_text.node())\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawOneBar\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/shape/bar.js?");

/***/ }),

/***/ "./src/shape/bubble.js":
/*!*****************************!*\
  !*** ./src/shape/bubble.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst drawBubble = function () {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n\r\n  let color = config.data_colored_feature,\r\n    colored_type = config.data_colored_type,\r\n    //size\r\n    size = config.data_sized_feature,\r\n    //labels\r\n    labels = config.data_labeled,\r\n    //settings\r\n    opacity = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(config.color_opacity[0]) ? config.color_opacity[0] : 1,\r\n    order_style = config.order_style,\r\n    width = config.table_body_width,\r\n    height = config.table_body_height,\r\n    arc_size = config.arc_size / 100,\r\n    //init d3.pack and d3.hierarchy\r\n    pack = d3.pack().size([width * arc_size, height * arc_size]).padding(2 * arc_size),\r\n    keys = [],\r\n    root = [],\r\n    nodes = [];\r\n\r\n  labels = labels.map(l => {\r\n    return {\r\n      label: l,\r\n      format: $$.label_format_list.filter(f => f.label_name === l)[0]\r\n    }\r\n  })\r\n\r\n  function initData(data) {\r\n    keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color) ? $$.getUniqueArray(data.map(d => d[color])) : []\r\n    debugger\r\n    root = d3.hierarchy({\r\n      children: data\r\n    }).sum(d => {\r\n      return d[size]\r\n    })\r\n    if (order_style == -1) {\r\n      root.sort((a, b) => b.value - a.value)\r\n    } else if (order_style == 1) {\r\n      root.sort((a, b) => a.value - b.value)\r\n    } else {\r\n      root.sort(() => Math.random() * 2 - 1)\r\n    }\r\n\r\n    nodes = pack(root).leaves().filter(d => !isNaN(d.x) && !isNaN(d.y) && !isNaN(d.r)).map((d, i) => {\r\n      return {\r\n        x: d.x,\r\n        y: d.y,\r\n        id: `circle_${i}`,\r\n        r: 0,\r\n        radius: d.r,\r\n        value: d.value,\r\n        color: $$.color(d.data[color]),\r\n        data: d.data,\r\n        key: keys.length ? keys.indexOf(d.data[color]) : i\r\n      }\r\n    })\r\n  }\r\n\r\n  function initGroup(idx, idy) {\r\n    $$.bigContainer\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n      .data(nodes)\r\n      .enter().append('g')\r\n      .attr('class', (d) => `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${d.key}`)\r\n      .attr('id', d => `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].bubble}-${d.id}`)\r\n      .attr('transform', `translate(${idx * width}, ${idy * height})`)\r\n  }\r\n\r\n  function addCircles(idx, idy) {\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n      .attr(\"opacity\", opacity)\r\n      .append('circle')\r\n      .attr('r', d => d.radius)\r\n      .attr('fill', d => d.color)\r\n      .attr(\"transform\", d => `translate(${d.x},${d.y})`)\r\n      .on(\"mouseenter\", function (d) {\r\n        $$.displayTip(d.data)\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function (d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(d.data)\r\n        $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n  }\r\n\r\n  function addLabels(idx, idy) {\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`).append('text')\r\n      .on('click', function (d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(d.data)\r\n        // $$.bigContainer.selectAll(`.${CLASS.element}`).attr('opacity', opacity * 0.2)\r\n        // d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n      .on(\"mouseenter\", function (d) {\r\n        $$.displayTip(d.data)\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        $$.displayTip()\r\n      })\r\n      .attr(\"transform\", d => `translate(${d.x}, ${d.y - labels.reduce((a, b) => a += +b.format.label_height, 0) / 2})`)\r\n      .attr('text-anchor', 'middle')\r\n      .selectAll('tspan')\r\n      .data(d => {\r\n        let allow = labels.map((l, i) => {\r\n          return {\r\n            val: d.data[l.label],\r\n            format: l.format,\r\n            idx: i\r\n          }\r\n        }).filter(l => $$.getTextLength(l.format.formatLabel(l.val)) < d.radius * 2)\r\n\r\n        if (allow.reduce((a, b) => a += +b.label_height, 0) >= d.radius * 2) {\r\n          allow = allow.slice(0, 2)\r\n        }\r\n\r\n        return allow\r\n      })\r\n      .enter().append('tspan')\r\n      .attr('class', d => `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${d.idx}`)\r\n      .attr('x', 0)\r\n      .attr('dy', d => `${d.format.label_height}px`)\r\n      .text(d => d.format.formatLabel(d.val))\r\n\r\n  }\r\n\r\n  function getColorList() {\r\n    $$.modifyColorList({\r\n      colored_type: colored_type,\r\n      colored_feature: color,\r\n      keys: keys\r\n    })\r\n  }\r\n\r\n  return {\r\n    initGroup,\r\n    addCircles,\r\n    addLabels,\r\n    getColorList,\r\n    initData\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawBubble\r\n})\n\n//# sourceURL=webpack://mc/./src/shape/bubble.js?");

/***/ }),

/***/ "./src/shape/funnel.js":
/*!*****************************!*\
  !*** ./src/shape/funnel.js ***!
  \*****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst drawFunnel = function() {\r\n\tconst $$ = this;\r\n\tconst config = $$.config;\r\n\r\n  let labels = config.data_labeled,\r\n      //settings\r\n      format_list = $$.label_format_list,\r\n      width = config.table_body_width,\r\n      height = config.table_body_height,\r\n      funnel_shape = config.funnel_shape,\r\n      funnel_minwidth = (config.data_compare.length && config.funnel_compare_layout === 'horizontal') ? config.funnel_minwidth / 2 : config.funnel_minwidth,\r\n      funnel_sort = config.funnel_sort,\r\n      funnel_gap = config.funnel_gap || 0,\r\n      funnel_conversion = config.funnel_conversion,\r\n      funnel_conversionColor = config.funnel_conversionColor,\r\n      funnel_conversionFontsize = config.funnel_conversionFontsize,\r\n      // 生成的绘图数据\r\n      keys = [],\r\n      new_data = [],\r\n      // 绘图临时变量\r\n      dy = 0,\r\n      size = {},\r\n      color = {},\r\n      colored_type = '',\r\n      opacity = 0, // config in draw.js\r\n      align = config.funnel_align, // 对齐 left,center,right\r\n      row_min_height = config.funnel_rowMinHeight, // 最小行高\r\n      inner_padding_left = config.funnel_innerPaddingLeft, // 漏斗图的内padding，避免 label 超出\r\n      inner_padding_right = config.funnel_innerPaddingRight,\r\n      label_position = config.funnel_labelPosition,\r\n      ctWidth = 0, // 实际的画图需要宽度\r\n      isCompareDrawing = false; // 是否是对比图形的第二个图\r\n\r\n  labels = labels.map(l => {\r\n    return {\r\n      label: l,\r\n      format: format_list.filter(f => f.label_name === l)[0]\r\n    }\r\n  })\r\n\r\n  function initConfig ({ funnelAlign, rowMinHeight, paddingLeft, paddingRight, labelPosition, funnelOpacity, sized, colored, coloredType, isCompare } = {}) {\r\n    color = colored\r\n    colored_type = coloredType\r\n    size = sized\r\n    align = funnelAlign // 对齐 left,center,right\r\n    row_min_height = rowMinHeight // 最小行高\r\n    inner_padding_left = paddingLeft // 漏斗图的内padding，避免 label 超出\r\n    inner_padding_right = paddingRight\r\n    label_position = labelPosition\r\n    opacity = funnelOpacity\r\n    ctWidth = width - inner_padding_left - inner_padding_right\r\n    isCompareDrawing = isCompare\r\n  }\r\n\r\n  function initData(data, funnel_type) {\r\n    let ct_height = height;\r\n    new_data = []\r\n    keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color) ? $$.getUniqueArray(data.map(d => d[color])) : []\r\n    data.forEach((rawData, idx) => {\r\n      // rawData.index = idx;\r\n      new_data.push({\r\n        data: rawData,\r\n        value: rawData[size],\r\n        prevLeftX: 0, \r\n        prevRightX: 0, \r\n        prevY: 0, \r\n        nextLeftX: 0, \r\n        nextRightX: 0, \r\n        nextY: 0,\r\n      })\r\n    })\r\n\r\n    const bottomLeftX = (ctWidth - funnel_minwidth) / 2;\r\n    if (!isCompareDrawing) {\r\n      const longerLength = Math.max(config.data_json.length, config.data_compare.length);\r\n      dy = height / longerLength;\r\n\r\n      if (dy < row_min_height) { // 支持滚动\r\n        ct_height = row_min_height * longerLength;\r\n        dy = row_min_height;\r\n      }\r\n    }\r\n\r\n    if (funnel_type === 'data') { // 跟随数据设置宽度\r\n      const maxValue = Math.max(...new_data.map(el => el.value));\r\n      const minValue = Math.min(...new_data.map(el => el.value));\r\n      const addend = maxValue <= 0 ? 1 : minValue < 0 ? -minValue : 0;\r\n      const widthRange = ctWidth - funnel_minwidth;\r\n      const needReverse = funnel_sort === 1;\r\n      // const needReverse = new_data[0].value === minValue; // 当第一个数值与最小值相同时，将顶点放在上方\r\n\r\n      new_data.forEach(({ value }, i) => {\r\n        const getRowWidth = (val) => (val + addend) / (maxValue + addend) * widthRange + funnel_minwidth;\r\n        let prevWidth = getRowWidth(value);\r\n        let nextWidth = i + 1 !== new_data.length ? getRowWidth(new_data[i + 1].value) : funnel_minwidth;\r\n        const prevY = i * dy;\r\n        const nextY = (i + 1) * dy;\r\n\r\n        if (needReverse) {\r\n          prevWidth = i !== 0 ? getRowWidth(new_data[i - 1].value) : funnel_minwidth;\r\n          nextWidth = getRowWidth(value)\r\n        }\r\n\r\n        // default align center\r\n        let prevLeftX = (ctWidth - prevWidth) / 2;\r\n        let prevRightX = prevLeftX + prevWidth;\r\n        let nextLeftX = (ctWidth - nextWidth) / 2;\r\n        let nextRightX = nextLeftX + nextWidth;\r\n        if (align === 'right') {\r\n          prevLeftX *= 2;\r\n          prevRightX = ctWidth;\r\n          nextLeftX *= 2;\r\n          nextRightX = ctWidth;\r\n        } else if (align === 'left') {\r\n          prevLeftX = 0;\r\n          prevRightX = prevWidth;\r\n          nextLeftX = 0;\r\n          nextRightX = nextWidth;\r\n        }\r\n\r\n        Object.assign(new_data[i], { prevLeftX, prevRightX, prevY, nextLeftX, nextRightX, nextY })\r\n      })\r\n    } else if (funnel_type === 'smooth' || funnel_type === 'smooth_invert') { // 直接等差显示三角形 / 梯形\r\n      const lineNum = new_data.length;\r\n      const isInvert = funnel_type === 'smooth_invert';\r\n      let dx = bottomLeftX / lineNum;\r\n\r\n      let prevLeftX = 0;\r\n      let prevRightX = ctWidth;\r\n\r\n      if (isInvert) {\r\n        prevLeftX = bottomLeftX;\r\n        prevRightX = ctWidth - bottomLeftX;\r\n        if (align === 'left') {\r\n          prevLeftX = 0;\r\n          prevRightX = 0;\r\n        } else if (align === 'right') {\r\n          prevLeftX = ctWidth;\r\n          prevRightX = ctWidth;\r\n        }\r\n      }\r\n      if (funnel_shape === 'rect') { // 倒置矩形样式校正\r\n        dx *= lineNum / (lineNum - 1)\r\n        isInvert ? prevLeftX += dx : prevLeftX -= dx;\r\n        isInvert ? prevRightX -= dx : prevLeftX += dx;\r\n      }\r\n\r\n      let nextLeftX;\r\n      let nextRightX;\r\n\r\n      new_data.forEach((d, i) => {\r\n        const prevY = i * dy;\r\n        const nextY = (i + 1) * dy;\r\n        nextLeftX = prevLeftX + dx;\r\n        nextRightX = prevRightX - dx;\r\n        if (isInvert) {\r\n          nextLeftX = prevLeftX - dx;\r\n          nextRightX = prevRightX + dx;\r\n        }\r\n        if (isInvert && funnel_shape === 'rect') { // 倒置矩形样式校正\r\n          prevLeftX = nextLeftX;\r\n          prevRightX = nextRightX;\r\n        }\r\n        \r\n        if (align === 'right') {\r\n          prevRightX = ctWidth;\r\n          nextRightX = ctWidth;\r\n          isInvert ? (nextLeftX -= dx) : (nextLeftX += dx);\r\n        } else if (align === 'left') {\r\n          prevLeftX = 0;\r\n          nextLeftX = 0;\r\n          isInvert ? (nextRightX += dx) : (nextRightX -= dx);\r\n        }\r\n        Object.assign(new_data[i], { prevLeftX, prevRightX, prevY, nextLeftX, nextRightX, nextY })\r\n\r\n        prevLeftX = nextLeftX;\r\n        prevRightX = nextRightX;\r\n      });\r\n    }\r\n    return {\r\n      ct_height,\r\n    }\r\n  }\r\n\r\n  // 拼接形状 path 字符串\r\n  function _generatePath ({ prevLeftX, prevRightX, prevY, nextLeftX, nextRightX, nextY }) {\r\n    const gap = funnel_gap;\r\n    prevLeftX += inner_padding_left\r\n    prevRightX += inner_padding_left\r\n    nextLeftX += inner_padding_left\r\n    nextRightX += inner_padding_left\r\n    const paths = funnel_shape === 'rect' ?\r\n      [\r\n        [ prevLeftX, prevY, \"M\" ],\r\n        [ prevRightX, prevY, \"L\" ],\r\n        [ prevRightX, nextY - gap, \"L\" ],\r\n        [ prevLeftX, nextY - gap, \"L\" ],\r\n        [ prevLeftX, prevY, \"L\" ],\r\n      ]\r\n      :\r\n      [\r\n        [ prevLeftX, prevY, \"M\" ],\r\n        [ prevRightX, prevY, \"L\" ],\r\n        [ nextRightX, nextY - gap, \"L\" ],\r\n        [ nextLeftX, nextY - gap, \"L\" ],\r\n        [ prevLeftX, prevY, \"L\" ],\r\n      ]\r\n\r\n    return paths.reduce((acc, path) => acc + path [2] + path [0] + \",\" + path [1] + \" \", '');\r\n  }\r\n\r\n  function initGroup({ idx, idy, suffix = '', startY = 0 }) {\r\n    $$.bigContainer\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}${suffix}`)\r\n      .data(new_data)\r\n      .enter().append('g')\r\n      .attr('class', (d, i) => {\r\n        return `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}${suffix} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${keys.length ? keys.indexOf(d.data[color] || i) : i}`\r\n      })\r\n      .attr('transform', `translate(${idx * width}, ${idy * height + startY})`)\r\n  }\r\n\r\n  function addPath({ idx, idy, suffix = '' }) {\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}${suffix}`)\r\n      .attr(\"opacity\", opacity)\r\n      .append('path')\r\n      .attr('d', _generatePath)\r\n      .attr('stroke', '#fff')\r\n      .attr('stroke-width', dy > 4 ? 2 : 0)\r\n      .style('fill', (d, i) => $$.color(d.data[color] || i))\r\n      .on(\"mouseenter\", function(d) {\r\n        $$.displayTip(d.data)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d){\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(d.data)\r\n        $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n  }\r\n\r\n  function addLabels ({ idx, idy, suffix = '' }) {\r\n    let textAnchor;\r\n    if (label_position === 'left') { textAnchor = 'end' }\r\n    else if (label_position === 'right') { textAnchor = 'start' }\r\n    else { textAnchor = 'middle' }\r\n\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}${suffix}`).append('text')\r\n      .attr(\"transform\", _getLabelPos)\r\n      .attr('text-anchor', textAnchor)\r\n      .selectAll('tspan')\r\n      .data(d => {\r\n        let allow = labels\r\n          .map((l, i) => {\r\n            return {val: d.data[l.label], format: l.format, idx: i}\r\n          })\r\n        return allow\r\n      })\r\n      .enter().append('tspan')\r\n      .attr('class', d => `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${d.idx}`)\r\n      .attr('x', 0)\r\n      .attr('dy', d => `${d.format.label_height}px`)\r\n      .text(d => d.format.formatLabel(d.val))\r\n      .on(\"mouseenter\", function(d) {\r\n        $$.displayTip(d.data)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n\r\n    function _getLabelPos (d) {\r\n      const { prevLeftX, prevRightX, prevY, nextLeftX, nextRightX, nextY } = d;\r\n      const centerY = nextY - (nextY - prevY) / 2;\r\n      const labelTotalHeight = labels.reduce((a, b) => a += +b.format.label_height, 0)\r\n      const labelStartY = centerY - labelTotalHeight / 2;\r\n      let labelX = 0;\r\n      switch (label_position) {\r\n        case 'left': {\r\n          const labelMargin = Math.abs(prevLeftX - nextLeftX) / (nextY - prevY) * labelTotalHeight / 2;\r\n          labelX = Math.abs(prevLeftX - nextLeftX) / 2 + Math.min(prevLeftX, nextLeftX) + inner_padding_left - labelMargin;\r\n          break;\r\n        }\r\n        case 'right': {\r\n          const labelMargin = Math.abs(prevRightX - nextRightX) / (nextY - prevY) * labelTotalHeight / 2;\r\n          labelX = Math.abs(prevRightX - nextRightX) / 2 + Math.min(prevRightX, nextRightX) + inner_padding_left + labelMargin;\r\n          break;\r\n        }\r\n        case 'middle':\r\n        default:\r\n          labelX = (prevLeftX + nextLeftX + prevRightX + nextRightX) / 4 + inner_padding_left;\r\n      }\r\n      return `translate(${labelX}, ${labelStartY})`\r\n    }\r\n  }\r\n\r\n  function addConversions ({ idx, idy, suffix = '' }) {\r\n    if (!funnel_conversion) { return; }\r\n    let textPosition = 'right';\r\n    let textAnchor = 'start'; // position right\r\n    if (config.data_compare.length && !isCompareDrawing) {\r\n      textPosition = 'left';\r\n      textAnchor = 'end';\r\n    }\r\n    const item = (new_data[0] && new_data[0].data) || {};\r\n    let conversionKey = null;\r\n    for (let key in item) {\r\n      if (key.indexOf('conversion') !== -1) {\r\n        conversionKey = key;\r\n        break;\r\n      }\r\n    }\r\n    if (!conversionKey) { return; }\r\n    // const needReverse = funnel_sort === 1; // TODO support reverse\r\n    const conversions = new_data.map(d => d.data[conversionKey]);\r\n    const lineWidth = 24;\r\n    const conversionMargin = 15; // 转化率与图形距离\r\n\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}${suffix}`)\r\n      .append('line')\r\n      .attr('x1', ({ prevLeftX, prevRightX }) => {\r\n        if (textPosition === 'left') {\r\n          return prevLeftX + inner_padding_left - lineWidth - conversionMargin\r\n        } else {\r\n          return prevRightX + inner_padding_left + conversionMargin\r\n        }\r\n      })\r\n      .attr('x2', ({ prevLeftX, prevRightX }) => {\r\n        if (textPosition === 'left') {\r\n          return prevLeftX + inner_padding_left - conversionMargin\r\n        } else {\r\n          return prevRightX + inner_padding_left + lineWidth + conversionMargin\r\n        }\r\n      })\r\n      .attr('y1', d => d.prevY - funnel_gap / 2)\r\n      .attr('y2', d => d.prevY - funnel_gap / 2)\r\n      .attr('opacity', 0.5)\r\n      .attr('fill', 'none')\r\n      .data(conversions)\r\n      .attr('stroke-width', d => d ? '1px' : '0')\r\n      .attr('stroke', funnel_conversionColor)\r\n\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}${suffix}`)\r\n      .append('text')\r\n      .attr(\"transform\", _getConversionPos)\r\n      .attr('text-anchor', textAnchor)\r\n      .style('font-size', `${funnel_conversionFontsize}px`)\r\n      .style('fill', funnel_conversionColor)\r\n      .data(conversions)\r\n      .text(d => {\r\n        if (!d) return '';\r\n        let str = Math.round(d*1e4) / 100 + '%'\r\n        return str\r\n      })\r\n\r\n    function _getConversionPos ({ prevLeftX, prevRightX, prevY }) {\r\n      const y = prevY + funnel_conversionFontsize / 2 - funnel_gap;\r\n      if (textPosition === 'left') {\r\n        return `translate(${prevLeftX + inner_padding_left - lineWidth - conversionMargin - 2}, ${y})`\r\n      } else {\r\n        return `translate(${prevRightX + inner_padding_left + lineWidth + conversionMargin + 2}, ${y})`\r\n      }\r\n    }\r\n  }\r\n\r\n  function getColorList() {\r\n    $$.modifyColorList({\r\n      colored_type: colored_type,\r\n      colored_feature: color,\r\n      keys: keys\r\n    })\r\n  }\r\n\r\n  return {\r\n    initConfig,\r\n    initData,\r\n    initGroup,\r\n    addPath,\r\n    addLabels,\r\n    addConversions,\r\n    getColorList,\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n\tdrawFunnel\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/shape/funnel.js?");

/***/ }),

/***/ "./src/shape/line.js":
/*!***************************!*\
  !*** ./src/shape/line.js ***!
  \***************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n\r\n\r\n\r\n\r\nconst drawOneLine = function(obj) {\r\n  const $$ = this;\r\n  const config = $$.config; \r\n  //d3提供的symbols，如果用户没有提供默认为圆点\r\n  const symbols = [d3.symbolCircle, d3.symbolTriangle, d3.symbolCross, d3.symbolDiamond, d3.symbolSquare, d3.symbolStar, d3.symbolWye]\r\n  //列分类变量\r\n  let categories = config.data_column_categories,\r\n      //x 轴比例尺单位\r\n      band = $$.x.bandwidth(),\r\n      //x 轴最小band\r\n      minBand = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].min_band,\r\n      //线粗细\r\n      line_size = config.line_size,\r\n      rotated = 0,\r\n      symbol = symbols[0],\r\n      //颜色为分类变量\r\n      keys = obj.stackedKeys,\r\n      stackedData = obj.stackedData,\r\n      //颜色相关信息\r\n      colored_stacked = obj.colored_stacked,\r\n      //标签数组\r\n      labeled_features = obj.labeled_features,\r\n      //容器\r\n      my_lines = obj.container,\r\n      //y轴比例尺\r\n      yScale = obj.yScale,\r\n      //透明度\r\n      opacity = obj.opacity,\r\n      label_format_list = obj.label_format_list || [],\r\n      cmi = obj.cmi || 0,\r\n      //每个multiple到顶部的距离\r\n      distanceToTop = ($$.height_one_chart || $$.height) * obj.multirow_idx;\r\n  switch(config.line_pattern) {\r\n    case 'cross':\r\n      symbol = symbols[2];\r\n      break;\r\n    case 'cross45':\r\n      symbol = symbols[2];\r\n      rotated = 45\r\n      break;\r\n    case 'triangle':\r\n      symbol = symbols[1];\r\n      break;\r\n    case 'triangle180':\r\n      symbol = symbols[1];\r\n      rotated = 180\r\n      break;\r\n    case 'square':\r\n      symbol = symbols[4];\r\n      break;\r\n    case 'star':\r\n      symbol = symbols[5];\r\n      break;\r\n    case 'diamond':\r\n      symbol = symbols[3];\r\n      break;\r\n    case 'wye':\r\n      symbol = symbols[6];\r\n      break;\r\n    default:\r\n      symbol = symbols[0];\r\n      break;\r\n  }\r\n\r\n  //symbol 的大小\r\n  let arc = d3.symbol().type(symbol).size(line_size * 25);\r\n\r\n  if(colored_stacked) {\r\n    let line_data = stackedData;\r\n    if(categories.length > 1) {\r\n      line_data = line_data.map((s) => {\r\n        let last_cat = categories[categories.length-2]\r\n        let last_key = s[0].data[last_cat]\r\n        let arr = []\r\n        s.forEach((ss) => {\r\n          if(ss.data[last_cat] !== last_key) {\r\n            arr.push(undefined)\r\n            last_key = ss.data[last_cat]\r\n          }\r\n          arr.push(ss)\r\n        })\r\n        arr.index = s.index;\r\n        arr.key = s.key\r\n        arr = s\r\n        return arr\r\n      })\r\n    }\r\n\r\n    let valueLine = d3.line()\r\n      .defined(d => Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d))\r\n      .x(d => $$.x($$.getCombinedKeys({data: d.data})) + band / 2)\r\n      .y(d => yScale(d[1] - Math.max(d[0], 0)) + distanceToTop)\r\n\r\n\r\n    let groupByColor = my_lines\r\n      .selectAll(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`)\r\n      .data(line_data)\r\n      .enter().append(\"g\")\r\n      .attr('class', function(d) {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        return d.class_name\r\n      })\r\n\r\n    let groupByCategory = groupByColor\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n      .data(function(d) {\r\n        return d; \r\n      })\r\n      .enter().append('g')\r\n      .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`)\r\n\r\n    groupByColor\r\n      .append(\"path\")\r\n      .attr('class', (d) => `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}-${keys.indexOf(d.key)}`)\r\n      .attr('d', (d) => {\r\n        return valueLine(d)\r\n      })\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', line_size)\r\n      .attr('stroke', d => d.color)\r\n      .attr(\"stroke-opacity\", opacity)\r\n\r\n    groupByCategory\r\n      .append('path')\r\n      .attr('d', (d) => {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        return arc(d)\r\n      })\r\n      .attr('fill', d => Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d) ? d.color : 'none')\r\n      .attr(\"opacity\", opacity)\r\n      .attr('transform', (d) => {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        let key = $$.getCombinedKeys({data: Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d.data) ? d.data : d})\r\n        let x = $$.x(key) + band / 2;\r\n        let y = yScale(d[1] - Math.max(d[0], 0)) + distanceToTop\r\n\r\n        return `translate(${x}, ${y})rotate(${rotated})`\r\n      })\r\n      .on(\"mouseenter\", function(d) {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        $$.displayTip(d.raw_data)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d) {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(config.data_click) && config.data_click(d.raw_data)\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}`).attr('opacity', opacity * 0.2)\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].stacked_group}-${keys.indexOf(d.key)}`).attr('opacity', opacity)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n\r\n    labeled_features.forEach((l, li) => {\r\n      let formatLabel = label_format_list[li].formatLabel\r\n      //标签之间行距\r\n      let label_height = label_format_list[li].label_height\r\n\r\n      groupByCategory\r\n        .append('text')\r\n        .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text}-${li}-${cmi}`)\r\n        .attr('text-anchor', 'middle')\r\n        .text((d) => {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d) || !Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d.raw_data) || band < minBand) return\r\n\r\n          if(labeled_features.length * label_height > yScale(d[0]) - yScale(d[1])) return\r\n\r\n          return formatLabel(d.raw_data[l]) \r\n        })\r\n        .attr('transform', (d) => {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n\r\n          let w1 = $$.x($$.getCombinedKeys({data: d.data})) + band / 2;\r\n          let w2 = yScale(d[1] - Math.max(d[0], 0)) + distanceToTop - 5 - label_height * li\r\n\r\n          return `translate(${w1}, ${w2})`\r\n        })\r\n        .on(\"mouseenter\", function(d) {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n          $$.displayTip(d.raw_data)\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n  } else {\r\n    let line_data = stackedData\r\n\r\n    if(categories.length > 1) {\r\n      line_data = []\r\n      let last_cat = categories[categories.length-2]\r\n      let last_key = stackedData[0].values[0][last_cat]\r\n      stackedData.forEach((s) => {\r\n        if(s.values[0][last_cat] !== last_key) {\r\n          line_data.push(undefined)\r\n          last_key = s.values[0][last_cat]\r\n        }\r\n        line_data.push(s)\r\n      })\r\n    }\r\n\r\n    let valueLine = d3.line()\r\n      .defined((d) => Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d))\r\n      .x((d) => $$.x(d.key) + band / 2)\r\n      .y((d) => yScale(d.actualVal) + distanceToTop)\r\n\r\n    my_lines\r\n      .selectAll('path')\r\n      .data([line_data])\r\n      .enter().append('path')\r\n      .attr('class', d => d[0].class_name)\r\n      .attr('d', valueLine)\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', line_size)\r\n      .attr('stroke', d => d[0].color)\r\n      .attr(\"stroke-opacity\", opacity)\r\n\r\n    let group = my_lines.selectAll(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`)\r\n      .data(stackedData)\r\n      .enter().append('g')\r\n      .attr('class', (d) => {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        return d.class_name\r\n      })\r\n\r\n    // add points\r\n    group\r\n      .append('path')\r\n      .attr('d', arc)\r\n      .attr('fill', d => d.color)\r\n      .attr('transform', (d) => {\r\n        if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n        let x = $$.x(d.key) + band / 2,\r\n            y = yScale(d.actualVal) + distanceToTop\r\n\r\n        return `translate(${x}, ${y})rotate(${rotated})`\r\n      })\r\n      .attr(\"opacity\", opacity)\r\n      .on(\"mouseenter\", function(d) {\r\n        $$.displayTip(d.values[0])\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isFunction\"])(config.data_click) && config.data_click(d.values[0])\r\n        $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n\r\n    // add labels\r\n    labeled_features.forEach((l,li) => {\r\n      let formatLabel = label_format_list[li].formatLabel,\r\n      //标签之间行距\r\n          label_height = label_format_list[li].label_height;\r\n\r\n      group\r\n        .append('text')\r\n        .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].label_text}-${li}-${cmi}`)\r\n        .attr('text-anchor', 'middle')\r\n        .text((d) => {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d) || band < minBand) return\r\n          return formatLabel(d.values[0][l])\r\n        })\r\n        .attr('transform', (d) => {\r\n          if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d)) return\r\n\r\n          let w1 = $$.x(d.key) + band / 2,\r\n              w2 = yScale(d.actualVal) - 4 + distanceToTop - label_height * li\r\n\r\n          return `translate(${w1}, ${w2})`\r\n        })\r\n        .on(\"mouseenter\", function(d) {\r\n          $$.displayTip(d.values[0])\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawOneLine\r\n})\n\n//# sourceURL=webpack://mc/./src/shape/line.js?");

/***/ }),

/***/ "./src/shape/map.js":
/*!**************************!*\
  !*** ./src/shape/map.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst drawMap = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const bindto = config.bindto;\r\n\r\n  let all_circles = [],\r\n      x_aggressions = config.data_column_aggressions,\r\n      y_aggressions = config.data_row_aggressions,\r\n      //data\r\n      data = [],\r\n      //color\r\n      colored_feature = config.data_colored_feature,\r\n      colored_type = config.data_colored_type,\r\n      //labels\r\n      labeled_features = config.data_labeled,\r\n      //size\r\n      sized_feature = config.data_sized_feature,\r\n      //settings\r\n      opacity = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(config.color_opacity[0]) ? config.color_opacity[0] : 1,\r\n      //label format\r\n      format_list = $$.label_format_list,\r\n      //event\r\n      map_center = config.map_center,\r\n      zoom_level = config.map_level,\r\n      map_change = config.map_change,\r\n      width = config.table_body_width,\r\n      height = config.table_body_height,\r\n      map_width = width - $$.margins.paddingLeft - $$.margins.paddingRight,\r\n      map_height = height - $$.margins.paddingTop - $$.margins.paddingBtm,\r\n      map = '',\r\n      keys = [];\r\n\r\n  function initData(values) {\r\n    data = values\r\n    keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_feature) ? $$.getUniqueArray(data.map(d => d[colored_feature])) : []\r\n  }\r\n\r\n  function createMap(idx, idy) {\r\n    $$.bigContainer.append('div')\r\n      .attr('id', `${bindto.slice(1)}-${idx}-${idy}`)\r\n      .attr('style', `width: ${map_width}px; height: ${map_height}px; display: block; position: absolute;\r\n        transform: translate(${idx * width}px,  ${idy * height}px)`)\r\n\r\n    map = L.map(`${bindto.slice(1)}-${idx}-${idy}`, {preferCanvas: true, zoomControl: false});\r\n    // L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', \r\n    // { maxZoom: 18,\r\n    //   attribution: '<a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\r\n    //   id: 'mapbox.light', //street, light, dark, satellite, outdoors \r\n    //   accessToken: 'pk.eyJ1IjoiY2Fyb2xseW5uIiwiYSI6ImNqbHJ0Znp5dDA4dTYzdnJ4Z2dtZmF6anAifQ.cXeSRUkVZ4wZ8l35rJvmlA'\r\n    // }).addTo(map);\r\n    L.tileLayer.provider('CartoDB.PositronNoLabels').addTo(map); \r\n    //OpenStreetMap.BlackAndWhite, OpenStreetMap.DE, OpenStreetMap.Mapnik, CartoDB.VoyagerNoLabels, CartoDB.PositronNoLabels\r\n  }\r\n\r\n  function setView() {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(map_center) || !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(zoom_level)) {\r\n      return\r\n    }\r\n    map.setView(map_center, zoom_level)\r\n  }\r\n\r\n  function optimizeBounds() {\r\n    let latlngs = data.map(v => [v[x_aggressions[0]], v[y_aggressions[0]]]).filter(v => Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(v[0]) && Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(v[1]))\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(latlngs)) {\r\n      let polyline = L.polyline(latlngs)\r\n      map.fitBounds(polyline.getBounds()).panInsideBounds(polyline.getBounds())\r\n    }\r\n  }\r\n  \r\n  function addSymbols() {\r\n    let tooltip=config.tooltip_name||[]\r\n    data.forEach((v) => {\r\n      let color_feature = v[colored_feature]\r\n      let position = [v[x_aggressions[0]], v[y_aggressions[0]]]\r\n      if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(position[0]) || !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(position[1])) return\r\n      let circle = L.circleMarker(position, {\r\n        color: $$.color(color_feature),\r\n        fillColor: $$.color(color_feature),\r\n        fillOpacity: opacity,\r\n        radius: $$.size(v[sized_feature]) * (map._zoom > 5 ? map._zoom / 5 : 1),\r\n        stroke: false,\r\n        className: `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].point}`\r\n      }).addTo(map);\r\n\r\n      circle.on('mouseover', function() {\r\n        if(!config.tooltip_show) return\r\n        if (tooltip.length===0)return\r\n        for (const key in v) {\r\n          if (v.hasOwnProperty(key)) {\r\n            if (tooltip.indexOf(key)===-1){\r\n              delete  v[key]\r\n            }\r\n          }\r\n        }\r\n        // if(!config.map_showLatLong) {\r\n        //   delete v.latitude\r\n        //   delete v.longitude\r\n        // }\r\n        L.tooltip({\r\n          permanent: false,\r\n          direction: 'auto',\r\n          className: `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].tooltip}`\r\n        })\r\n        .setLatLng(position)\r\n        .setContent($$.formatTooltipText(v))\r\n        .addTo(map);\r\n      })\r\n\r\n      circle.on('mouseout', function() {\r\n        $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].tooltip}`).remove()\r\n      })\r\n\r\n      circle.on('click', function() {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(v)\r\n        all_circles.forEach(c => c.setStyle({fillOpacity: opacity * 0.2}))\r\n        circle.setStyle({fillOpacity: opacity})\r\n      })\r\n\r\n      circle.raw_data = v\r\n      all_circles.push(circle)\r\n    })\r\n  }\r\n\r\n  function addLabels(idx, idy) {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(labeled_features)) return\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].labels}-${idx}-${idy}`).remove();\r\n    //sort 升序\r\n    all_circles.sort((a, b) => b._point.y - a._point.y)\r\n\r\n    all_circles.forEach((circle,i) => {\r\n      let v = circle.raw_data\r\n      let position = [v[x_aggressions[0]], v[y_aggressions[0]]]\r\n      let max_txt = 0;\r\n      labeled_features.forEach((l, j) => {\r\n        let txt = format_list[j].formatLabel(v[l])\r\n        max_txt = txt.length > max_txt ? txt.length : max_txt\r\n      })\r\n\r\n      let x_left = circle._point.x - max_txt * 8;\r\n      let x_right = circle._point.x + max_txt * 8;\r\n      let y_bottom = circle._point.y + labeled_features.length * 20 + 20;\r\n\r\n      let slice_begin = 0\r\n      for(let k = 0; k < i; k++) {\r\n        if(all_circles[k]._point.y <= y_bottom) {\r\n          slice_begin = k;\r\n          break;\r\n        }\r\n      }\r\n\r\n      let slice_data = all_circles.slice(i - slice_begin > 100 ? (i - 100) : slice_begin, i)\r\n\r\n      let excludes = slice_data.filter((v, idx) => idx !== i && \r\n        (v._point.x >= x_left && v._point.x <= x_right && v._point.y <= y_bottom));\r\n\r\n      if(excludes.length) return\r\n        \r\n      let str = ``\r\n      labeled_features.forEach((l, k) => {\r\n        str += `<div class=\"${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${k}\">${format_list[k].formatLabel(v[l])}</div>`\r\n      })\r\n\r\n      L.tooltip({\r\n        permanent: true,\r\n        direction: 'bottom',\r\n        className: `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].labels} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].labels}-${idx}-${idy}` //${CLASS.leaflet}-${CLASS.labels} \r\n      })\r\n      .setContent(str)\r\n      .setLatLng(position)\r\n      .addTo(map)\r\n    })\r\n\r\n    d3.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].labels}`).style(\"background-color\", \"transparent\")\r\n    d3.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].labels}`).style(\"border\", \"none\")\r\n    d3.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].leaflet}-${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].labels}`).style(\"box-shadow\", \"none\")\r\n  }\r\n\r\n  function getColorList() {\r\n    $$.modifyColorList({\r\n      colored_type: colored_type,\r\n      colored_feature: colored_feature,\r\n      keys: keys\r\n    })\r\n  }\r\n\r\n  function getSizeList() {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(sized_feature)) {\r\n      let range = d3.extent(data.sort((a, b) => a[sized_feature] - b[sized_feature]).map(d => d[sized_feature]))\r\n      $$.modifySizeList({\r\n        sizeRange: range,\r\n        sized_feature: sized_feature\r\n      })\r\n    }\r\n  }\r\n\r\n  function addEvents(idx, idy) {\r\n    map.on('zoomend', function() {\r\n      let zoom_level = map.getZoom();\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(map_change)) map_change('zoom', zoom_level)\r\n\r\n      setTimeout(() => {\r\n        addLabels(idx, idy);\r\n        $$.initLabelStyle();\r\n      }, 0)\r\n    })\r\n\r\n    map.on('moveend', function() {\r\n      let move_center = [map.getCenter().lat, map.getCenter().lng]\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(map_change)) map_change('move', move_center)\r\n    })\r\n  }\r\n\r\n  function getAllCircles() {\r\n    return all_circles\r\n  }\r\n\r\n  function getMapInstance() {\r\n    return map\r\n  }\r\n  \r\n  return {\r\n    setView,\r\n    optimizeBounds,\r\n    addSymbols,\r\n    addLabels,\r\n    addEvents,\r\n    getColorList,\r\n    getSizeList, \r\n    getAllCircles,\r\n    getMapInstance,\r\n    initData,\r\n    createMap\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawMap\r\n})\n\n//# sourceURL=webpack://mc/./src/shape/map.js?");

/***/ }),

/***/ "./src/shape/pie.js":
/*!**************************!*\
  !*** ./src/shape/pie.js ***!
  \**************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst drawPie = function () {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n\r\n  let color = config.data_colored_feature,\r\n    colored_type = config.data_colored_type,\r\n    //size\r\n    size = config.data_sized_feature,\r\n    //labels\r\n    labels = config.data_labeled,\r\n    //settings\r\n    opacity = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(config.color_opacity[0]) ? config.color_opacity[0] : 1,\r\n    format_list = $$.label_format_list,\r\n    width = config.table_body_width,\r\n    height = config.table_body_height,\r\n    radius = d3.min([width, height]) / 2 * config.arc_size / 100,\r\n    arc = d3.arc().outerRadius(radius * 0.7).innerRadius(radius * config.arc_innerRadius),\r\n    label_arc = d3.arc().outerRadius(radius).innerRadius(radius * config.arc_innerRadius||0.5),\r\n    pie = d3.pie().value(d => d[size]).sort(null),\r\n    keys = [],\r\n    new_data = [];\r\n\r\n  labels = labels.map(l => {\r\n    return {\r\n      label: l,\r\n      format: format_list.filter(f => f.label_name === l)[0]\r\n    }\r\n  })\r\n\r\n  let total_height = labels.reduce((a, b) => a += +b.format.label_height, 0)\r\n\r\n  function initData(data) {\r\n    keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(color) ? $$.getUniqueArray(data.map(d => d[color])) : []\r\n    new_data = pie(data).filter(d => d.endAngle - d.startAngle > 0);\r\n\r\n    let distance = 0,\r\n      total_dis = total_height;\r\n    let mid_point = new_data.findIndex(d => midAngle(d) >= Math.PI)\r\n\r\n    new_data.forEach((d, i) => {\r\n      let pos_label = label_arc.centroid(d);\r\n      d.labels = []\r\n      d.distance = i === mid_point ? 0 : i ? Math.abs(pos_label[1] - distance) : 0\r\n\r\n      if (d.distance >= total_height) {\r\n        d.labels = labels\r\n      } else {\r\n        if (i === mid_point || i === 0) {\r\n          total_dis = 0\r\n          d.labels = labels\r\n        } else if (total_dis < total_height) {\r\n          total_dis += d.distance\r\n          if ((d.endAngle - d.startAngle) > Math.PI / 4) {\r\n            d.labels = labels\r\n          }\r\n        } else {\r\n          total_dis = 0\r\n          d.labels = labels\r\n        }\r\n      }\r\n\r\n      distance = pos_label[1]\r\n    })\r\n  }\r\n\r\n  function initGroup(idx, idy) {\r\n    $$.bigContainer\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n      .data(new_data)\r\n      .enter().append('g')\r\n      .attr('class', (d, i) => {\r\n        return `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${keys.length ? keys.indexOf(d.data[color]) : i}`\r\n      })\r\n      .attr('transform', `translate(${idx * width + width / 2}, ${idy * height + height / 2})`)\r\n\r\n    // 将每个数据的饼、线、文本都放在一起，其中的线有可能会被后面的饼给遮住；所以需要将线隔离出来\r\n    $$.bigContainer\r\n      .selectAll()\r\n      .data(new_data)\r\n      .enter().append('g')\r\n      .attr('class', (d, i) => {\r\n        return `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}-polyline ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${keys.length ? keys.indexOf(d.data[color]) : i}`\r\n      })\r\n      .attr('transform', `translate(${idx * width + width / 2}, ${idy * height + height / 2})`)\r\n  }\r\n\r\n  function addPath(idx, idy) {\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n      .attr(\"opacity\", opacity)\r\n      .append('path')\r\n      .attr('d', arc)\r\n      .style('fill', (d) => $$.color(d.data[color]))\r\n      .on(\"mouseenter\", function (d) {\r\n        $$.displayTip(d.data)\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function (d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(d.data)\r\n        $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n  }\r\n\r\n  function midAngle(d) {\r\n    return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n  }\r\n\r\n  function addLabels(idx, idy) {\r\n    if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(labels)) return\r\n    // $$.bigContainer.selectAll(`.${CLASS.element}-${idx}-${idy}`).append('polyline')\r\n    //   .attr('points', function (d) {\r\n    //     if (isEmpty(d.labels)) return []\r\n    //     let pos_label = label_arc.centroid(d);\r\n    //     let pos = [radius * (midAngle(d) < Math.PI ? 1 : -1), pos_label[1]]\r\n    //     //if(pos[1] + height / 2 + total_height > height || (pos[1] - total_height/2) < -height/2) return []\r\n    //     return [arc.centroid(d), pos_label, pos]\r\n    //   })\r\n    //   .attr('opacity', 0.3)\r\n    //   .attr('fill', 'none')\r\n    //   .attr('stroke-width', '1px')\r\n    //   .attr('stroke', $$.textColor)\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}-polyline`).append('polyline')\r\n      .attr('points', function (d) {\r\n        if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(d.labels)) return []\r\n        let pos_label = label_arc.centroid(d);\r\n        let pos = [radius * (midAngle(d) < Math.PI ? 1 : -1), pos_label[1]]\r\n        //if(pos[1] + height / 2 + total_height > height || (pos[1] - total_height/2) < -height/2) return []\r\n        return [arc.centroid(d), pos_label, pos]\r\n      })\r\n      .attr('opacity', 0.3)\r\n      .attr('fill', 'none')\r\n      .attr('stroke-width', '1px')\r\n      .attr('stroke', $$.textColor)\r\n\r\n\r\n    $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`).append('text')\r\n      .attr('transform', function (d) {\r\n        let pos = label_arc.centroid(d);\r\n        pos[0] = radius * (midAngle(d) < Math.PI ? 1 : -1) + (midAngle(d) < Math.PI ? 3 : -3)\r\n        if (pos[1] + height / 2 + total_height > height || (pos[1] - total_height / 2) < -height / 2) {\r\n          d.labels = d.labels.slice(0, d.labels.length - 1)\r\n        }\r\n        pos[1] = pos[1] - total_height / 2 - (labels.length === 1 ? 5 : 0)\r\n        return 'translate(' + pos + ')';\r\n      })\r\n      .style('text-anchor', d => midAngle(d) < Math.PI ? 'start' : 'end')\r\n      .on(\"mouseenter\", function (d) {\r\n        $$.displayTip(d.data)\r\n      })\r\n      .on(\"mouseout\", function () {\r\n        $$.displayTip()\r\n      })\r\n      .selectAll('tspan')\r\n      .data(d => {\r\n        return d.labels.map((v, i) => {\r\n          let label = d.data[v.label];\r\n          return {\r\n            val: label.length > 12 ? label.substr(0, 12) + '...' : label,\r\n            idx: i,\r\n            format: v.format\r\n          }\r\n        })\r\n      })\r\n      .enter().append('tspan')\r\n      .attr('class', d => `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${d.idx}`)\r\n      .attr('x', 0)\r\n      .attr('dy', d => `${d.format.label_height}px`)\r\n      .text(d => d.format.formatLabel(d.val))\r\n\r\n  }\r\n\r\n  function getColorList() {\r\n    $$.modifyColorList({\r\n      colored_type: colored_type,\r\n      colored_feature: color,\r\n      keys: keys\r\n    })\r\n  }\r\n\r\n  return {\r\n    initGroup,\r\n    addPath,\r\n    addLabels,\r\n    getColorList,\r\n    initData\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawPie\r\n})\n\n//# sourceURL=webpack://mc/./src/shape/pie.js?");

/***/ }),

/***/ "./src/shape/scatter.js":
/*!******************************!*\
  !*** ./src/shape/scatter.js ***!
  \******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst drawScatter = function() {\r\n\tconst $$ = this;\r\n  const config = $$.config;\r\n\r\n  let colored_feature = config.data_colored_feature,\r\n      colored_type = config.data_colored_type,\r\n      //labels\r\n      labeled_features = config.data_labeled,\r\n      //size\r\n      sized_feature = config.data_sized_feature,\r\n      //settings\r\n      opacity = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(config.color_opacity[0]) ? config.color_opacity[0] : 1,\r\n      x_aggressions = config.data_column_aggressions[0],\r\n      y_aggressions = config.data_row_aggressions[0],\r\n      format_list = $$.label_format_list,\r\n      data = [],\r\n      keys = [],\r\n      width = config.table_body_width,\r\n      height = config.table_body_height;\r\n\r\n  function initData({x_scale, y_scale, values}) {\r\n    data = values\r\n    keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_feature) ? $$.getUniqueArray(data.map(d => d[colored_feature])) : []\r\n\r\n    data.forEach((d, i) =>{\r\n      let x1 = x_scale(isNaN(d[x_aggressions[0]]) ? 0 : d[x_aggressions[0]]);\r\n      let y1 = y_scale(isNaN(d[y_aggressions[0]]) ? 0 : d[y_aggressions[0]]);\r\n\r\n      d.cx = x1\r\n      d.cy = y1\r\n\r\n      if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(labeled_features)) {\r\n        let max_txt = 0\r\n        labeled_features.forEach((l, li) => {\r\n          let txt = format_list[li].formatLabel(d[l], l)\r\n          max_txt = Math.max(txt.length, max_txt)\r\n        })\r\n        let x_left = x1 - max_txt * 6;\r\n        let x_right = x1 + max_txt * 6;\r\n        let y_bottom = y1 + format_list.reduce((a, b) => a += +b.label_height, 0);\r\n        let excludes = data.filter((v, idx) => {\r\n          let d_x = x_scale(isNaN(v[x_aggressions[0]]) ? 0 : v[x_aggressions[0]]);\r\n          let d_y = y_scale(isNaN(v[y_aggressions[0]]) ? 0 : v[y_aggressions[0]]);\r\n          return idx !== i && (d_x >= x_left && d_x <= x_right && d_y >= y1 && d_y <= y_bottom)\r\n        });\r\n\r\n        if(excludes.length) d.show_label = false;\r\n        else d.show_label = true\r\n      }\r\n    })\r\n  }\r\n\r\n  function initGroup(idx, idy, svg) {\r\n    svg\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n      .data(data)\r\n      .enter().append('g')\r\n      .attr('class', (d, i) => `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${keys.length ? keys.indexOf(d[colored_feature]) : i}`)\r\n      .attr('transform', `translate(${idx * width}, ${idy * height})`)\r\n  }\r\n\r\n  function addCircles(idx, idy, svg) {\r\n    svg\r\n      .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n      .attr(\"opacity\", opacity)\r\n      .append('circle')\r\n      .attr('cx', d => d.cx)\r\n      .attr('cy', d => d.cy)\r\n      .attr('r', d => {\r\n        return $$.size(d[sized_feature])\r\n      })\r\n      .attr('fill', function(d) {\r\n        return $$.color(d[colored_feature])\r\n      })\r\n      .on(\"mouseenter\", function(d) {\r\n        delete d.show_label\r\n        delete d.cx\r\n        delete d.cy\r\n        $$.displayTip(d)\r\n      })\r\n      .on(\"mouseout\", function() {\r\n        $$.displayTip()\r\n      })\r\n      .on('click', function(d) {\r\n        Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(config.data_click) && config.data_click(d)\r\n        $$.bigContainer.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`).attr('opacity', opacity * 0.2)\r\n        d3.select(this.parentNode).attr('opacity', opacity)\r\n      })\r\n  }\r\n\r\n  function addLabels(idx, idy, svg) {\r\n    labeled_features.forEach((v, i) => {\r\n      svg\r\n        .selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}-${idx}-${idy}`)\r\n        .append('text')\r\n        .attr('class', `${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text} ${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].label_text}-${i}`)\r\n        .attr('x', d => d.cx + $$.size(d[sized_feature]))\r\n        .attr('y', d => d.cy + format_list[i].label_height * i)\r\n        .text(d => d.show_label ? format_list[i].formatLabel(d[v], v) : '') \r\n        .on(\"mouseenter\", function(d) {\r\n          delete d.show_label\r\n          delete d.cx\r\n          delete d.cy\r\n          $$.displayTip(d)\r\n        })\r\n        .on(\"mouseout\", function() {\r\n          $$.displayTip()\r\n        })\r\n    })\r\n  }\r\n\r\n  function getColorList() {\r\n    $$.modifyColorList({\r\n      colored_type: colored_type,\r\n      colored_feature: colored_feature,\r\n      keys: keys\r\n    })\r\n  }\r\n\r\n  function getSizeList() {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(sized_feature)) {\r\n      let range = d3.extent(data.sort((a, b) => a[sized_feature] - b[sized_feature]).map(d => d[sized_feature]))\r\n      $$.modifySizeList({\r\n        sizeRange: range,\r\n        sized_feature: sized_feature\r\n      })\r\n    }\r\n  }\r\n\r\n  return {\r\n    initData,\r\n    initGroup,\r\n    addCircles,\r\n    addLabels,\r\n    getColorList,\r\n    getSizeList\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n\tdrawScatter\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/shape/scatter.js?");

/***/ }),

/***/ "./src/shape/table.js":
/*!****************************!*\
  !*** ./src/shape/table.js ***!
  \****************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3 */ \"d3\");\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(d3__WEBPACK_IMPORTED_MODULE_3__);\n\r\n\r\n\r\n\r\n\r\nconst drawTable = function () {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  let colored_feature = config.data_colored_feature,\r\n    colored_type = config.data_colored_type,\r\n    data = [],\r\n    keys = [];\r\n\r\n  let {\r\n    table_padding_left,\r\n    table_padding_right,\r\n    table_padding_top,\r\n    table_padding_bottom,\r\n    table_body_width,\r\n    table_body_height,\r\n    table_title: tableTitle,\r\n    table_inner_width: cellBorderWidth,\r\n    table_outter_width: headBorderWidth,\r\n    table_outter_color: outerBorderColor,\r\n    table_inner_color: innerBorderColor,\r\n  } = config;\r\n  let paddingLeft = Number(table_padding_left),\r\n    paddingRight = Number(table_padding_right),\r\n    paddingTop = Number(table_padding_top),\r\n    paddingBottom = Number(table_padding_bottom);\r\n  let width = Number(table_body_width) + paddingLeft + paddingRight;\r\n\r\n  let height = Number(table_body_height) + paddingTop + paddingBottom;\r\n  $$.color = $$.generateColor();\r\n\r\n  let mode = config.table_mode;\r\n\r\n  let maxHeight = d3.max(tableTitle, function (d) {\r\n    return Math.max(Number(d.style['line-height']));\r\n  });\r\n\r\n  let titleKey = config.data_column_categories.join(' / ');\r\n  let titleMatch = tableTitle.find((i) => i.key === titleKey);\r\n  let titleStyle = JSON.parse(JSON.stringify(_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format));\r\n  let titleShow = config.data_column_categories.length > 0;\r\n  if (titleMatch) {\r\n    titleStyle = titleMatch.style;\r\n    titleShow = titleMatch.show;\r\n    titleStyle.color = titleStyle.fill;\r\n  } else {\r\n    titleStyle.color = config.font_color;\r\n  }\r\n  if (titleMatch) {\r\n    titleStyle.lineHeight = Number(titleStyle['line-height']) + 16;\r\n  } else {\r\n    titleStyle.lineHeight = Number(titleStyle.lineHeight) + 16;\r\n  }\r\n  let aggShow = false;\r\n\r\n  let drawTable = function () {\r\n    //获取标签样式\r\n    $$.getLabelStyleList();\r\n\r\n    var minRowHeight = 30;\r\n    var currentRowHeight = height;\r\n    let formatList = $$.label_format_list;\r\n    let tooltipText = config.tooltip_text;\r\n    let tooltipFormat = config.tooltip_format;\r\n    let rowAggression = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_row_aggressions)\r\n      ? Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_labeled)\r\n        ? []\r\n        : config.data_labeled\r\n      : config.data_row_aggressions;\r\n    let columnAggression = config.data_column_aggressions;\r\n\r\n    let aggMatchLen = 0;\r\n    let singleHeadFlag = false;\r\n    // let aggHeadHideLen = columnAggression.filter(i => {\r\n    //   let match = tableTitle.find(m => m.key === i);\r\n    //   return match && !match.show\r\n    // }).length\r\n    // let hideHeadFlag = aggHeadHideLen === columnAggression.length\r\n    isAggShow();\r\n    if (!aggShow) {\r\n      aggShow = aggMatchLen < rowAggression.length; // 说明会显示\r\n    }\r\n    let titleFlag =\r\n      Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_row_categories) &&\r\n      Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_column_categories) &&\r\n      Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_column_aggressions);\r\n\r\n    //将列和数据赋给gridOptions\r\n    let colorFeature = config.data_colored_feature;\r\n    let start = new Date().getTime();\r\n    let columns = initColumns();\r\n    let gridData = initData();\r\n    console.log('数据处理时间:', new Date().getTime() - start);\r\n    console.log(gridData);\r\n    console.log(columns);\r\n    let startRender = new Date().getTime();\r\n    var gridOptions = initConfig();\r\n\r\n    // var minRowHeight = 30;\r\n    // var currentRowHeight;\r\n    var eGridDiv = document.querySelector(config.bindto);\r\n    if (!eGridDiv) {\r\n      return;\r\n    }\r\n    let dom = document.querySelectorAll(`.dashboard_charts`); //  //\r\n    if (dom.length > 1) {\r\n      dom = document.getElementById(config.bindto.slice(1));\r\n    } else {\r\n      dom = dom[0];\r\n    }\r\n    let { background: bgColor, index } = config.table_background;\r\n\r\n    let { cHeight, cWidth } = setWidthHeight();\r\n    eGridDiv.style.border = headBorderWidth + 'px solid ' + outerBorderColor;\r\n    eGridDiv.style.height = cHeight - headBorderWidth * 2 + 'px'; //cHeight - headBorderWidth * 2 + 'px';\r\n    eGridDiv.style.width = cWidth;\r\n    if (bgColor && bgColor.indexOf('/') > -1) {\r\n      eGridDiv.style.background = 'inherit';\r\n    } else {\r\n      eGridDiv.style.background = bgColor;\r\n      eGridDiv.style.opacity = config.table_background.opacity || 1;\r\n    }\r\n\r\n    eGridDiv.classList.add('ag-theme-balham');\r\n\r\n    // document.addEventListener('DOMContentLoaded', function() {\r\n    //   var eGridDiv = document.querySelector(config.bindto);\r\n    //   eGridDiv.style.height='700px'\r\n    //   new agGrid.Grid(eGridDiv, gridOptions);\r\n    // });\r\n    new agGrid.Grid(eGridDiv, gridOptions);\r\n\r\n    function isAggShow() {\r\n      rowAggression.forEach((i) => {\r\n        let match = tableTitle.find((m) => m.key === i);\r\n        if (match) {\r\n          aggMatchLen++;\r\n        }\r\n        if (match && match.show) {\r\n          aggShow = match.show;\r\n        }\r\n      });\r\n    }\r\n\r\n    function setWidthHeight() {\r\n      if (!dom) {\r\n        return {\r\n          cWidth: config.size_width,\r\n          cHeight: config.size_height,\r\n        };\r\n      }\r\n      let cHeight = dom.clientHeight; // - 10;\r\n      let cWidth = '100%';\r\n      if (config.size_width) {\r\n        cWidth = config.size_width + 'px'; //- 10\r\n      }\r\n      if (config.size_height) {\r\n        cHeight = config.size_height; // - 10;\r\n      }\r\n      return {\r\n        cWidth,\r\n        cHeight,\r\n      };\r\n    }\r\n\r\n    function onFirstDataRendered(params) {\r\n      if (this.onGridSizeChanged) {\r\n        this.onGridSizeChanged(params);\r\n      } else if (onGridSizeChanged) {\r\n        onGridSizeChanged(params);\r\n      }\r\n    }\r\n\r\n    function onGridSizeChanged(params) {\r\n      // get the height of the grid body - this excludes the height of the headers\r\n      if (!document.getElementsByClassName('ag-body-viewport')[0]) {\r\n        return;\r\n      }\r\n\r\n      var gridHeight = document.getElementsByClassName('ag-body-viewport')[0]\r\n        .offsetHeight;\r\n\r\n      // get the rendered rows\r\n      var renderedRows = params.api.getRenderedNodes();\r\n\r\n      // if the rendered rows * min height is greater than available height, just just set the height\r\n      // to the min and let the scrollbar do its thing\r\n      if (renderedRows.length * minRowHeight >= gridHeight) {\r\n        if (currentRowHeight !== minRowHeight) {\r\n          currentRowHeight = minRowHeight;\r\n          params.api.resetRowHeights();\r\n        }\r\n      } else {\r\n        // set the height of the row to the grid height / number of rows available\r\n        currentRowHeight = Math.floor(gridHeight / renderedRows.length);\r\n        params.api.resetRowHeights();\r\n      }\r\n    }\r\n\r\n    function getCurrentHeight(params) {\r\n      var gridHeight = document.getElementsByClassName('ag-body-viewport')[0]\r\n        .offsetHeight;\r\n      var renderedRows = gridData.length;\r\n      if (renderedRows * minRowHeight >= gridHeight) {\r\n        if (currentRowHeight !== minRowHeight) {\r\n          currentRowHeight = minRowHeight;\r\n          params.api.resetRowHeights();\r\n        }\r\n      } else {\r\n        // set the height of the row to the grid height / number of rows available\r\n        currentRowHeight = Math.floor(gridHeight / renderedRows);\r\n        params.api.resetRowHeights();\r\n      }\r\n    }\r\n\r\n    function modifyHeight() {\r\n      gridData.forEach((i) => {\r\n        i.columnStyle.height = currentRowHeight;\r\n        i.columnStyle.lineHeight = currentRowHeight + 'px';\r\n      });\r\n    }\r\n    /**\r\n     * 初始化config\r\n     */\r\n    function initConfig() {\r\n      return {\r\n        columnDefs: columns,\r\n        //rowData: gridData,\r\n        onGridReady: function (params) {\r\n          if (mode === 'fitHeight' || mode === 'full') {\r\n            getCurrentHeight(params);\r\n            // 获取currentHeight\r\n            modifyHeight();\r\n          }\r\n\r\n          let wrap = eGridDiv.querySelector(\r\n            '.ag-theme-balham .ag-root-wrapper'\r\n          );\r\n          if (bgColor && bgColor.indexOf('/') > -1) {\r\n            wrap.style.background = 'inherit';\r\n          } else {\r\n            wrap.style.background = bgColor;\r\n            wrap.style.opacity = config.table_background.opacity || 1;\r\n          }\r\n\r\n          let headDom = eGridDiv.querySelector('.ag-header');\r\n          headDom.style.borderColor = innerBorderColor;\r\n          headDom.style.borderWidth = cellBorderWidth + 'px';\r\n          headDom.style.borderBottomWidth = cellBorderWidth + 'px';\r\n          if (titleFlag) {\r\n            headDom.style.display = 'none !important';\r\n          }\r\n          let noGroup = eGridDiv.querySelectorAll(\r\n            '.ag-header-row .ag-header-group-cell-no-group'\r\n          );\r\n          noGroup.forEach((i) => {\r\n            i.style.borderRight =\r\n              cellBorderWidth + 'px solid ' + innerBorderColor;\r\n          });\r\n\r\n          let domHeight = cHeight || (dom && dom.clientHeight);\r\n          let domWidth =dom && dom.clientWidth;\r\n          let colLength = params.columnApi.getAllDisplayedColumns().length;\r\n          // + (cellBorderWidth * colLength)\r\n          let curWidth = colLength * width;\r\n          let headCount =\r\n            params.columnApi.columnController.primaryHeaderRowCount;\r\n          let rowCount = gridData.length;\r\n          // + (headCount + rowCount) * cellBorderWidth\r\n          if (currentRowHeight === Infinity) {\r\n            currentRowHeight = height;\r\n          }\r\n          let tempHeight =\r\n            mode === 'fitHeight' || mode === 'full' ? currentRowHeight : height;\r\n          let curHeight = singleHeadFlag\r\n            ? rowCount * tempHeight\r\n            : headCount * maxHeight + rowCount * tempHeight;\r\n          let hBorderLen = 1; //(headCount + rowCount - 1) * cellBorderWidth;\r\n          let lBorderLen = 1; // colLength * cellBorderWidth;\r\n          if (mode === 'standard' || mode === 'fitHeight') {\r\n            if (curWidth < domWidth) {\r\n              if (curHeight < domHeight) {\r\n                eGridDiv.style.width = curWidth + 'px';\r\n                eGridDiv.style.height =\r\n                  curHeight + headBorderWidth * 2 + hBorderLen + 'px';\r\n                eGridDiv.querySelector('.ag-body-horizontal-scroll') &&\r\n                  eGridDiv.querySelector('.ag-body-horizontal-scroll').remove();\r\n              } else {\r\n                eGridDiv.style.width =\r\n                  curWidth + 10 + headBorderWidth * 2 + lBorderLen + 'px';\r\n              }\r\n            } else {\r\n              eGridDiv.style.width = '100%';\r\n              if (curHeight < domHeight) {\r\n                eGridDiv.style.height =\r\n                  curHeight + 10 + headBorderWidth * 2 + hBorderLen + 'px'; // 11\r\n              }\r\n            }\r\n          }\r\n          // if (mode === 'standard' || mode === 'fitHeight') {\r\n          //   if (curWidth < domWidth) {\r\n          //     eGridDiv.style.width = curWidth + 10 + 'px'\r\n          //   } else {\r\n          //     eGridDiv.style.width = '100%'\r\n          //     //eGridDiv.style.height = config.size_height + 6 + 'px'\r\n          //   }\r\n          // }\r\n          // mode === 'standard' ||\r\n          if (mode === 'fitWidth') {\r\n            if (curHeight < domHeight) {\r\n              if (curWidth > domWidth) {\r\n                eGridDiv.style.height =\r\n                  curHeight + headBorderWidth * 2 + +lBorderLen + 'px'; // 10\r\n              } else {\r\n                eGridDiv.style.height =\r\n                  curHeight + headBorderWidth * 2 + hBorderLen + 'px'; //1\r\n              }\r\n            }\r\n          }\r\n          if (mode === 'full' || mode === 'fitWidth') {\r\n            if (\r\n              curHeight >\r\n              domHeight - rowCount * cellBorderWidth - headBorderWidth * 2\r\n            ) {\r\n              eGridDiv.style.width = 'calc(100% - 10px)';\r\n              // eGridDiv.style.width =\r\n              //   config.size_width + headBorderWidth * 2 + lBorderLen + 'px';\r\n            } else {\r\n              eGridDiv.style.width = '100%';\r\n              // eGridDiv.style.width =\r\n              //   config.size_width + headBorderWidth * 2 + lBorderLen - 10 + 'px';\r\n              if (mode === 'full') {\r\n                eGridDiv.style.height =\r\n                  curHeight +\r\n                  (rowCount * cellBorderWidth) / 2 -\r\n                  cellBorderWidth +\r\n                  headBorderWidth * 2 +\r\n                  'px';\r\n              }\r\n              eGridDiv.querySelector('.ag-body-horizontal-scroll') &&\r\n                eGridDiv.querySelector('.ag-body-horizontal-scroll').remove();\r\n            }\r\n          }\r\n          if (mode === 'full' || mode === 'fitWidth') {\r\n            gridOptions.api.sizeColumnsToFit(); //调整表格大小自适应\r\n            if (\r\n              curHeight >\r\n              domHeight - rowCount * cellBorderWidth - headBorderWidth * 2\r\n            ) {\r\n              eGridDiv.style.width = '100%';\r\n            }\r\n          }\r\n\r\n          gridOptions.api.setRowData(gridData);\r\n          console.log('数据处理时间:', new Date().getTime() - startRender);\r\n        },\r\n        onFirstDataRendered: onFirstDataRendered,\r\n        onGridSizeChanged: onGridSizeChanged,\r\n        defaultColDef: {\r\n          editable: false, //单元表格是否可编辑\r\n          enableRowGroup: true,\r\n          enablePivot: true,\r\n          enableValue: true,\r\n          color: config['font-color'],\r\n          width: width,\r\n          height: 30,\r\n          'padding-left': table_padding_left,\r\n          'padding-right': table_padding_right + 4,\r\n          'padding-top': table_padding_top,\r\n          'padding-bottom': table_padding_bottom,\r\n          suppressMovable: true,\r\n        },\r\n        suppressCellSelection: true,\r\n        cellClass: 'no-border',\r\n        headerHeight: titleFlag ? 0 : maxHeight,\r\n        suppressRowTransform: true,\r\n        suppressDragLeaveHidesColumns: true,\r\n        tooltipShowDelay: 0,\r\n        components: {\r\n          showCellRenderer: createShowCellRenderer(),\r\n          customTooltip: createTooltip(),\r\n          agColumnHeader: createCustomHeader(),\r\n        },\r\n        getRowStyle: function (params) {\r\n          let style = {\r\n            background: 'rgba(255, 255, 255, 0.3)',\r\n          };\r\n          if (params.node.rowIndex % 2 === 0) {\r\n            style.background = 'rgba(255, 255, 255, 0.1)';\r\n          }\r\n          return style;\r\n        },\r\n        getRowHeight: function (params) {\r\n          let tempHeight = height;\r\n          tempHeight =\r\n            (params.data.columnStyle &&\r\n              Number(params.data.columnStyle.height)) ||\r\n            30;\r\n          if (mode === 'full' || mode === 'fitHeight') {\r\n            return currentRowHeight || tempHeight;\r\n          }\r\n          return tempHeight;\r\n        },\r\n        onBodyScroll: function (params) {\r\n          let { direction } = params;\r\n          if (direction === 'horizontal') {\r\n            let noGroup = eGridDiv.querySelectorAll(\r\n              '.ag-header-row .ag-header-group-cell-no-group'\r\n            );\r\n            noGroup.forEach((i) => {\r\n              i.style.borderRight =\r\n                cellBorderWidth + 'px solid ' + innerBorderColor;\r\n            });\r\n            gridOptions.api.checkGridSize();\r\n            gridOptions.api.doLayout();\r\n          }\r\n        },\r\n      };\r\n    }\r\n\r\n    /**\r\n     * 初始化data\r\n     */\r\n    function initData() {\r\n      let resGridData = [];\r\n      let resGridData1 = [];\r\n      let rowCategory = config.data_row_categories;\r\n      // 先考虑categories不存在\r\n      if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(rowCategory)) {\r\n        // 行数据的第一列值就是rowAggression\r\n        let curAgg = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(rowAggression) ? columnAggression : rowAggression;\r\n        if (curAgg.length === 0) {\r\n          return resGridData;\r\n        }\r\n        let obj1 = {};\r\n        for (let i = 0; i < curAgg.length; i++) {\r\n          let agg = curAgg[i];\r\n          let obj = {};\r\n          let matchAgg = tableTitle.find((m) => m.key === agg);\r\n          if (!matchAgg) {\r\n            obj['data_row_aggressions'] = agg;\r\n          } else if (matchAgg && matchAgg.show) {\r\n            obj['data_row_aggressions'] = matchAgg.title;\r\n          }\r\n\r\n          obj.columnStyle = returnColumnStyle(agg);\r\n          obj1.columnStyle = obj.columnStyle;\r\n          let match = formatList.find((i) => i.label_name === agg);\r\n          config.data_json.map((row) => {\r\n            if (row.hasOwnProperty(agg)) {\r\n              Object.assign(obj, returnValue(row, agg, match));\r\n              Object.assign(obj1, returnValue(row, agg, match));\r\n            }\r\n          });\r\n          resGridData.push(obj);\r\n        }\r\n        resGridData1.push(obj1);\r\n        if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(rowAggression)) {\r\n          return resGridData1;\r\n        }\r\n      } else {\r\n        resGridData = getGridData(rowCategory);\r\n      }\r\n\r\n      return resGridData;\r\n    }\r\n\r\n    function returnColProp(i) {\r\n      let prop = '';\r\n      config.data_column_categories.forEach((c) => {\r\n        prop += i[c] + '-';\r\n      });\r\n      if (prop) {\r\n        prop = prop.substr(0, prop.length - 1);\r\n      }\r\n      return prop;\r\n    }\r\n\r\n    function returnColumnStyle(agg) {\r\n      let match = formatList.find((i) => i.label_name === agg);\r\n      let style = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].table_text_format;\r\n      if (match) {\r\n        style = match.initLabelText.format;\r\n      }\r\n      let columnStyle = {\r\n        textDecoration: style.decoration,\r\n        color: style.setFlag ? style.fontColor : config.font_color,\r\n        fontSize: style.fontSize + 'px',\r\n        fontStyle: style.fontStyle,\r\n        letterSpacing: style.letterSpacing + 'px',\r\n        paddingLeft: paddingLeft + 'px',\r\n        paddingBottom: paddingBottom + 'px',\r\n        paddingTop: paddingTop + 'px',\r\n        paddingRight: paddingRight + 4 + 'px',\r\n        //lineHeight: Number(style.lineHeight) + paddingBottom + paddingTop + 'px',\r\n        textAlign: style.align,\r\n        // height: Number(style.lineHeight) + paddingBottom + paddingTop\r\n      };\r\n\r\n      if (mode === 'full' || mode === 'fitHeight') {\r\n        if (currentRowHeight) {\r\n          columnStyle.height = currentRowHeight;\r\n          columnStyle.lineHeight = currentRowHeight + 'px';\r\n        }\r\n      } else {\r\n        columnStyle.height =\r\n          Number(style.lineHeight) + paddingBottom + paddingTop;\r\n        if (paddingBottom === 0 && paddingTop === 0) {\r\n          columnStyle.lineHeight = columnStyle.height + 'px';\r\n        }\r\n      }\r\n      return columnStyle;\r\n    }\r\n\r\n    function returnValue(i, agg, match) {\r\n      let obj = {};\r\n      let colProp = returnColProp(i);\r\n      if (columnAggression.length > 0) {\r\n        colProp = colProp.length > 0 ? colProp + '-' + agg : agg;\r\n      }\r\n      let columnProp = colProp || 'singleHead';\r\n      columnProp = columnProp\r\n        .replace(/,/g, '')\r\n        .replace(/\\(/g, '')\r\n        .replace(/\\)/g, '')\r\n        .replace(/\\s+/g, '')\r\n        .replace(/\\./, '');\r\n      obj[columnProp] = {};\r\n      obj[columnProp].value =\r\n        i[agg] || i[agg] === 0\r\n          ? match\r\n            ? match.formatLabel(i[agg])\r\n            : i[agg]\r\n          : '';\r\n      if (colorFeature) {\r\n        obj[columnProp].labelValue = i[colorFeature];\r\n      } else {\r\n        obj[columnProp].labelValue = i[agg];\r\n      }\r\n\r\n      obj[columnProp].label = [];\r\n      obj[columnProp].columnStyle = returnColumnStyle(agg);\r\n\r\n      let tooltipObj = JSON.parse(JSON.stringify(tooltipText));\r\n      for (const key in i) {\r\n        if (key === 'MC-HIDDEN-KEY') {\r\n          continue;\r\n        }\r\n        if (i.hasOwnProperty(key)) {\r\n          let flag = !!tooltipObj[key];\r\n          const ele = flag ? tooltipObj[key] : _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format;\r\n          if (rowAggression.indexOf(key) > -1 && agg !== key) {\r\n            continue;\r\n          }\r\n          let labelObj = {};\r\n          labelObj.tooltipFormat = {};\r\n          labelObj.name = flag ? tooltipObj[key].title : key;\r\n          labelObj.value = i[key];\r\n          labelObj.style = ele;\r\n          labelObj.display = ele.display ? ele.display : 'auto';\r\n          let format = flag ? tooltipFormat[key] : _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].number_format;\r\n          Object.assign(labelObj.tooltipFormat, format);\r\n          if (flag) {\r\n            // ele.display !== 'none' &&\r\n            if (rowAggression.indexOf(key) === -1) {\r\n              obj[columnProp].label.push(labelObj);\r\n            } else if (key === agg) {\r\n              // ele.display !== 'none' &&\r\n              obj[columnProp].label.push(labelObj);\r\n            }\r\n          } else {\r\n            obj[columnProp].label.push(labelObj);\r\n          }\r\n        }\r\n      }\r\n      return obj;\r\n    }\r\n\r\n    function getGridData(rowCategory) {\r\n      let resData = [];\r\n\r\n      let catData = getColumn(rowCategory);\r\n      let catArr = [];\r\n      let catReverse = JSON.parse(JSON.stringify(rowCategory)).reverse();\r\n      // 计算出span\r\n      let spanObj = {};\r\n      let tempData = [];\r\n      getSpanProcess(catData, spanObj);\r\n      let test = JSON.parse(JSON.stringify(spanObj));\r\n      console.log(test);\r\n\r\n      function getSpanProcess(curData, obj) {\r\n        curData.map((curRow) => {\r\n          let key = curRow.parentKey\r\n            ? curRow.parentKey + '-' + curRow.key\r\n            : curRow.key;\r\n          key = key\r\n            .replace(/,/g, '')\r\n            .replace(/\\(/g, '')\r\n            .replace(/\\)/g, '')\r\n            .replace(/\\s+/g, '')\r\n            .replace(/\\./, '');\r\n          curRow.values.map((row, idx) => {\r\n            let arr = [];\r\n            if (curRow.values[0].key) {\r\n              getSpan(curRow.values, arr, obj);\r\n              obj[key] = {};\r\n              obj[key].total = arr.reduce((prev, curr) => {\r\n                return prev + curr;\r\n              });\r\n              obj[key].len = obj[key].total;\r\n            }\r\n            if (row.key) {\r\n              let parentKey = key;\r\n              row.parentKey = parentKey;\r\n              tempData.push(row);\r\n              if (idx === curRow.values.length - 1) {\r\n                let tempChildData = JSON.parse(JSON.stringify(tempData));\r\n                tempData = [];\r\n                getSpanProcess(tempChildData, obj);\r\n              }\r\n            } else if (curRow.values) {\r\n              obj[key] = {};\r\n              obj[key].total = curRow.values.length;\r\n              obj[key].len = curRow.values.length;\r\n            }\r\n          });\r\n        });\r\n      }\r\n      // 最终返回count\r\n      function getSpan(curData, arr, obj) {\r\n        curData.map((row) => {\r\n          if (row.values && row.values[0].key) {\r\n            getSpan(row.values, arr, obj);\r\n          } else {\r\n            // 最后的一个cat\r\n            if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(rowAggression)) {\r\n              arr.push(1);\r\n            } else {\r\n              arr.push(rowAggression.length ? rowAggression.length : 1);\r\n            }\r\n          }\r\n        });\r\n      }\r\n\r\n      function findSpanByCat(catArr, catName, idx, deduceFlag) {\r\n        idx = catArr.length - idx - 1;\r\n        let curCatArr = JSON.parse(JSON.stringify(catArr));\r\n        curCatArr.reverse();\r\n        // idx = curCatArr.indexOf(catName)\r\n        let str = curCatArr.slice(0, idx + 1).join('-');\r\n        if (deduceFlag) {\r\n          spanObj[str] ? (spanObj[str].len > 1 ? spanObj[str].len-- : 1) : 1;\r\n        }\r\n        return spanObj[str] ? spanObj[str] : 1;\r\n      }\r\n\r\n      function gridDataProcess(rowData) {\r\n        rowData.map((row, rowIdx) => {\r\n          // 如果存在，说明\r\n          if (row.values[0].key) {\r\n            // 跨行显示\r\n            catArr.unshift(row.key);\r\n            gridDataProcess(row.values);\r\n            catArr.shift();\r\n          } else {\r\n            catArr.unshift(row.key);\r\n            // 最后的一个cat\r\n            if (columnAggression.length > 0) {\r\n              // let len = 1\r\n              let deepCatArr = JSON.parse(JSON.stringify(catArr));\r\n              let obj = {};\r\n              catReverse.map((rowCat, idx) => {\r\n                obj[rowCat] = {};\r\n                obj[rowCat].value = deepCatArr[idx];\r\n                let { len, total } = findSpanByCat(\r\n                  deepCatArr,\r\n                  deepCatArr[idx],\r\n                  idx\r\n                );\r\n                if (idx === 0) {\r\n                  obj[rowCat].rowSpan = 1;\r\n                } else {\r\n                  obj[rowCat].rowSpan = len > 0 ? len : 1;\r\n                  findSpanByCat(deepCatArr, deepCatArr[idx], idx, true);\r\n                }\r\n                if (rowIdx % total !== 0) {\r\n                  obj[rowCat].grpSpan = true;\r\n                }\r\n                columnAggression.map((agg) => {\r\n                  obj.columnStyle = returnColumnStyle(agg);\r\n                  let match = formatList.find((i) => i.label_name === agg);\r\n                  row.values.forEach((i) => {\r\n                    let key = i['MC-HIDDEN-KEY'];\r\n                    let propArr = key.split(_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].join_factor);\r\n                    if (i.hasOwnProperty(agg)) {\r\n                      Object.assign(obj, returnValue(i, agg, match));\r\n                    }\r\n                  });\r\n                });\r\n              });\r\n              resData.push(obj);\r\n            } else if (rowAggression.length > 0) {\r\n              rowAggression.map((agg, aggIdx) => {\r\n                let obj = {};\r\n                let len = 1;\r\n                let deepCatArr = JSON.parse(JSON.stringify(catArr));\r\n                let matchAgg = tableTitle.find((m) => m.key === agg);\r\n                catReverse.map((rowCat, idx) => {\r\n                  obj[rowCat] = {};\r\n                  obj[rowCat].value = deepCatArr[idx];\r\n                  let lenObj = findSpanByCat(deepCatArr, deepCatArr[idx], idx);\r\n                  if (idx === 0) {\r\n                    len = rowAggression.length ? rowAggression.length : 1;\r\n                    if (aggIdx !== 0) {\r\n                      // len = len - ((rowIdx + 1) * rowAggression.length - 1)\r\n                      len = len - aggIdx;\r\n                    }\r\n                  } else {\r\n                    len = lenObj.len;\r\n                  }\r\n                  obj[rowCat].rowSpan = len > 0 ? len : 1;\r\n                  if (\r\n                    (rowIdx *\r\n                      (rowAggression.length ? rowAggression.length : 1)) %\r\n                      (lenObj.total || 1) ===\r\n                    0\r\n                  ) {\r\n                    if (aggIdx !== 0) {\r\n                      obj[rowCat].grpSpan = true;\r\n                    }\r\n                  } else {\r\n                    obj[rowCat].grpSpan = true;\r\n                  }\r\n                  if (idx !== 0) {\r\n                    len = findSpanByCat(deepCatArr, deepCatArr[idx], idx, true)\r\n                      .len;\r\n                  }\r\n                });\r\n                obj.columnStyle = returnColumnStyle(agg);\r\n                let match = formatList.find((i) => i.label_name === agg);\r\n                row.values.forEach((i) => {\r\n                  obj.data_row_aggressions = matchAgg ? matchAgg.title : agg;\r\n                  let key = i['MC-HIDDEN-KEY'];\r\n                  let propArr = key.split(_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].join_factor);\r\n                  if (i.hasOwnProperty(agg)) {\r\n                    if (\r\n                      (propArr.length > 1 &&\r\n                        propArr[propArr.length - 1] === agg) ||\r\n                      Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_row_aggressions)\r\n                    ) {\r\n                      Object.assign(obj, returnValue(i, agg, match));\r\n                    }\r\n                  }\r\n                });\r\n                resData.push(obj);\r\n              });\r\n            } else {\r\n              // let len = 1\r\n              let deepCatArr = JSON.parse(JSON.stringify(catArr));\r\n              let obj = {};\r\n              catReverse.map((rowCat, idx) => {\r\n                obj[rowCat] = {};\r\n                obj[rowCat].value = deepCatArr[idx];\r\n                let { len, total } = findSpanByCat(\r\n                  deepCatArr,\r\n                  deepCatArr[idx],\r\n                  idx\r\n                );\r\n                if (idx === 0) {\r\n                  obj[rowCat].rowSpan = 1;\r\n                } else {\r\n                  obj[rowCat].rowSpan = len > 0 ? len : 1;\r\n                  len = findSpanByCat(deepCatArr, deepCatArr[idx], idx, true);\r\n                }\r\n\r\n                if (rowIdx % total !== 0) {\r\n                  obj[rowCat].grpSpan = true;\r\n                }\r\n\r\n                obj.columnStyle = returnColumnStyle('');\r\n                let match = null;\r\n                row.values.forEach((i) => {\r\n                  Object.assign(obj, returnValue(i, '', match));\r\n                });\r\n              });\r\n              resData.push(obj);\r\n            }\r\n\r\n            catArr.shift();\r\n          }\r\n        });\r\n      }\r\n      gridDataProcess(catData);\r\n      return resData;\r\n    }\r\n    ///////////////结束获取data/////////////////////\r\n\r\n    /**\r\n     * 开始初始化grid的column\r\n     */\r\n    function initColumns() {\r\n      let colCategory = config.data_column_categories;\r\n      let partColumn = getColumn(colCategory);\r\n      let temColumn = $$.config.data_row_categories;\r\n      let resColumn = [];\r\n\r\n      temColumn.forEach((i) => {\r\n        let match = tableTitle.find((t) => t.key === i);\r\n        let style = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format;\r\n        let show = true;\r\n        if (match) {\r\n          style = JSON.parse(JSON.stringify(match.style));\r\n          style.color = style.fill;\r\n          show = match.show;\r\n        } else {\r\n          style.color = config.font_color;\r\n        }\r\n        resColumn.push({\r\n          headerName: match ? match.title : i,\r\n          field: i,\r\n          cellRenderer: 'showCellRenderer',\r\n          headerTooltip: match ? match.title : i,\r\n          headerComponentParams: {\r\n            style: style,\r\n            show: show,\r\n            maxHeight,\r\n            cellBorderWidth,\r\n            borderTopShow: '1',\r\n            innerBorderColor: innerBorderColor,\r\n          },\r\n          pinned: 'left',\r\n          lockPinned: true,\r\n          cellClass: 'lock-pinned',\r\n          tooltipComponent: 'customTooltip',\r\n          tooltipField: i,\r\n          tooltipComponentParams: {\r\n            style: _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format,\r\n            header: true,\r\n          },\r\n          cellStyle: (params) => {\r\n            if (params.value) {\r\n              let height = 0;\r\n              if (mode === 'full' || mode === 'fitHeight') {\r\n                if (currentRowHeight) {\r\n                  height = params.value.rowSpan * currentRowHeight + 'px';\r\n                }\r\n              } else {\r\n                height =\r\n                  params.value.rowSpan * params.data.columnStyle.height + 'px';\r\n              }\r\n              return retHeadCellStyle(height);\r\n            }\r\n          },\r\n          rowSpan: function (params) {\r\n            return params.data[i].rowSpan;\r\n          },\r\n          cellClassRules: {\r\n            'cell-span': (params) => {\r\n              return params.data[i].rowSpan ? true : false;\r\n            },\r\n            'cell-group': 'true',\r\n            'cont-span': (params) => {\r\n              return params.data[i].grpSpan ? true : false;\r\n            },\r\n          },\r\n        });\r\n      });\r\n      let flag = !aggShow && !titleShow; //\r\n      if (!flag && config.data_row_aggressions.length > 0) {\r\n        let curStyle = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format;\r\n        if (tableTitle.length > 0) {\r\n          curStyle = tableTitle[0].style;\r\n          curStyle.color = curStyle.fill;\r\n        }\r\n        resColumn.push({\r\n          headerName: titleShow ? '' : titleMatch ? titleMatch.title : titleKey,\r\n          field:\r\n            aggShow && !Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_row_aggressions)\r\n              ? 'data_row_aggressions'\r\n              : '',\r\n          headerTooltip: titleShow\r\n            ? ''\r\n            : titleMatch\r\n            ? titleMatch.title\r\n            : titleKey,\r\n          tooltipField: 'data_row_aggressions',\r\n          tooltipComponent: 'customTooltip',\r\n          pinned: 'left',\r\n          lockPinned: true,\r\n          cellClass: 'lock-pinned',\r\n          tooltipComponentParams: {\r\n            style: _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format,\r\n            header: true,\r\n          },\r\n          headerComponentParams: {\r\n            style: curStyle,\r\n            show: titleShow,\r\n            maxHeight,\r\n            cellBorderWidth,\r\n            borderTopShow: '1',\r\n            innerBorderColor: innerBorderColor,\r\n          },\r\n          cellStyle: (params) => {\r\n            // params.value\r\n            let style = params.data.columnStyle;\r\n            let height = 0;\r\n            if (mode === 'full' || mode === 'fitHeight') {\r\n              if (currentRowHeight) {\r\n                height = currentRowHeight + 'px';\r\n              }\r\n            } else {\r\n              height = style.height + 'px';\r\n            }\r\n            return retHeadCellStyle(height);\r\n          },\r\n        });\r\n      }\r\n      if (Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(colCategory)) {\r\n        if (columnAggression.length > 0) {\r\n          resColumn.push(...getGridColumn(geneColumnAgg(true)));\r\n        } else {\r\n          resColumn.push(...getGridColumn(partColumn));\r\n        }\r\n      } else {\r\n        resColumn.push(...getGridColumn(partColumn));\r\n      }\r\n      return resColumn;\r\n    }\r\n\r\n    function retHeadCellStyle(height) {\r\n      let curStyle = {\r\n        borderWidth: cellBorderWidth + 'px',\r\n      };\r\n      if (height) {\r\n        curStyle.height = height + ' !important';\r\n        curStyle.lineHeight = height;\r\n      }\r\n      if (bgColor && bgColor.indexOf('/') > -1) {\r\n        if (index === 15) {\r\n          curStyle.background = '#2b0b0b';\r\n        } else if (index === 17) {\r\n          curStyle.background = 'rgb(3,18,49)';\r\n        } else {\r\n          curStyle.backgroundImage = `url(${bgColor})`;\r\n          curStyle.backgroundSize = `${width}px ${height}px`; // 可以使用cover\r\n          curStyle.backgroundPosition = 'top right'; //背景图片居中显示，让多余部分相对容器对此展示\r\n          curStyle.backgroundRepeat = 'no-repeat';\r\n        }\r\n      } else {\r\n        curStyle.background = bgColor || '#fff';\r\n      }\r\n      curStyle.opacity = config.table_background.opacity\r\n        ? (config.table_background.opacity * 100) / 100\r\n        : 1;\r\n      curStyle.borderColor = innerBorderColor;\r\n      curStyle.color = config.font_color;\r\n      return curStyle;\r\n    }\r\n\r\n    function getGridColumn(column) {\r\n      let resColumn = [];\r\n\r\n      let rowCat = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_row_aggressions)\r\n        ? Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isEmpty\"])(config.data_labeled)\r\n          ? []\r\n          : config.data_labeled\r\n        : config.data_row_aggressions;\r\n\r\n      maxHeight = maxHeight ? maxHeight + 16 : Number(titleStyle.lineHeight);\r\n\r\n      function gridColumnProcess(original, target, propName) {\r\n        original.forEach((parent, idx) => {\r\n          let temColumnObj = {\r\n            tooltipComponent: 'customTooltip',\r\n            headerName: parent.title ? parent.title : parent.key,\r\n            headerTooltip: parent.title ? parent.title : parent.key,\r\n            resizable: false,\r\n            headerGroupComponent: createHeaderGroupComponent(),\r\n            headerGroupComponentParams: {\r\n              style: titleStyle,\r\n              show: true,\r\n              maxHeight,\r\n              cellBorderWidth,\r\n              innerBorderColor: innerBorderColor,\r\n              borderBottomShow: titleShow ? '1' : '0', //无\r\n              borderTopShow: titleShow ? '0' : '1', // 无\r\n            },\r\n            headerComponentParams: {\r\n              style: parent.parentTitleStyle\r\n                ? parent.parentTitleStyle\r\n                : titleStyle,\r\n              // className: hideHeadFlag ? 'hide-head' : '',\r\n              show: parent.show === '1' ? false : true,\r\n              maxHeight,\r\n              innerBorderColor: innerBorderColor,\r\n              cellBorderWidth,\r\n              borderTopShow: titleShow ? '0' : '1', // 无\r\n            },\r\n            tooltipComponentParams: {\r\n              context: $$,\r\n            },\r\n            cellRenderer: (params) => {\r\n              var eDiv = document.createElement('span');\r\n              eDiv.innerHTML =\r\n                params.value && (params.value.value || params.value.value === 0)\r\n                  ? params.value.value\r\n                  : '';\r\n              params.eGridCell.addEventListener('click', function () {\r\n                let label = params.value && params.value.label;\r\n                let obj = {};\r\n                label.forEach((i) => {\r\n                  obj[i.name] = i.value;\r\n                });\r\n                typeof config.data_click === 'function' &&\r\n                  config.data_click(obj);\r\n              });\r\n\r\n              return eDiv;\r\n            },\r\n            // cellRenderer: (params) => {\r\n            //   return params.value && (params.value.value || params.value.value === 0) ? params.value.value : ''\r\n            // },\r\n            cellStyle: (params) => {\r\n              let style = {};\r\n              if (params.columnStyle) {\r\n                style = JSON.parse(JSON.stringify(params.columnStyle));\r\n              }\r\n              if (params.value) {\r\n                if (params.value.columnStyle) {\r\n                  style = JSON.parse(JSON.stringify(params.value.columnStyle));\r\n                }\r\n                style.height = style.height + 'px !important';\r\n                // && colorFeature === params.data.data_row_aggressions\r\n                if (\r\n                  colorFeature &&\r\n                  params.value &&\r\n                  (params.value.value || params.value.value === 0)\r\n                ) {\r\n                  style.color = $$.color(params.value.labelValue);\r\n                } else if (!colorFeature) {\r\n                } else if (config.colorList.length === 0) {\r\n                  style.color = config.font_color;\r\n                }\r\n              }\r\n              if (mode === 'full' || mode === 'fitHeight') {\r\n                if (currentRowHeight) {\r\n                  style.height = currentRowHeight + 'px !important';\r\n                  style.lineHeight = currentRowHeight + 'px !important';\r\n                }\r\n              }\r\n              let opacity = config.color_opacity ? config.color_opacity[0] : 1;\r\n              style.borderWidth = cellBorderWidth + 'px';\r\n              style.borderRightColor = innerBorderColor + ' !important';\r\n              style.borderBottomColor = innerBorderColor + ' !important';\r\n              if (colorFeature) {\r\n                style.opacity = (opacity * 100) / 100;\r\n              } else {\r\n                style.opacity = '100%';\r\n              }\r\n\r\n              return style;\r\n            },\r\n          };\r\n          if (parent.key) {\r\n            propName.push(parent.key);\r\n            if (parent.values[0].key) {\r\n              temColumnObj.children = gridColumnProcess(\r\n                parent.values,\r\n                temColumnObj.columns || [],\r\n                propName\r\n              );\r\n            } else {\r\n              if (columnAggression.length > 0 && parent.type !== 'columnAgg') {\r\n                let colAggValues = geneColumnAgg();\r\n                temColumnObj.children = gridColumnProcess(\r\n                  colAggValues,\r\n                  temColumnObj.columns || [],\r\n                  propName\r\n                );\r\n              }\r\n\r\n              temColumnObj.field = propName\r\n                .join('-')\r\n                .replace(/,/g, '')\r\n                .replace(/\\(/g, '')\r\n                .replace(/\\)/g, '')\r\n                .replace(/\\s+/g, '')\r\n                .replace(/\\./, ''); // parent.key;\r\n              temColumnObj.tooltipField = temColumnObj.field;\r\n            }\r\n            propName.pop();\r\n            target.push(temColumnObj);\r\n          } else {\r\n            if (idx === 0 && rowCat.length > 0) {\r\n              temColumnObj.field = 'singleHead';\r\n              temColumnObj.tooltipField = 'singleHead';\r\n              temColumnObj.headerComponentParams.show = false;\r\n              singleHeadFlag =\r\n                config.data_row_categories.length > 0 ? false : true;\r\n              // temColumnObj.headerComponentParams.hasSpace = '1'\r\n              temColumnObj.headerComponentParams.maxHeight = 0;\r\n              target.push(temColumnObj);\r\n            }\r\n          }\r\n        });\r\n        return target;\r\n      }\r\n      let propName = [];\r\n      resColumn = gridColumnProcess(column, resColumn, propName);\r\n      if (titleShow) {\r\n        let obj = {\r\n          tooltipComponent: 'customTooltip',\r\n          headerName: titleMatch ? titleMatch.title : titleKey,\r\n          headerTooltip: titleMatch ? titleMatch.title : titleKey,\r\n          children: resColumn,\r\n          tooltipComponentParams: {\r\n            context: $$,\r\n          },\r\n          headerGroupComponent: createHeaderGroupComponent(),\r\n          headerGroupComponentParams: {\r\n            style: titleStyle,\r\n            show: titleShow,\r\n            maxHeight,\r\n            cellBorderWidth,\r\n            innerBorderColor: innerBorderColor,\r\n            borderBottomShow: '1', //无\r\n            borderTopShow: '1', // 无\r\n          },\r\n        };\r\n        return [obj];\r\n      } else {\r\n        return resColumn;\r\n      }\r\n    }\r\n\r\n    function geneColumnAgg(useStyleFlag) {\r\n      let colAggValues = [];\r\n      let curStyle = _Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].text_format;\r\n      if (tableTitle.length > 0) {\r\n        curStyle = tableTitle[0].style;\r\n        curStyle.color = curStyle.fill;\r\n      }\r\n      columnAggression.map((i) => {\r\n        let match = tableTitle.find((m) => m.key === i);\r\n        let flag = (match && match.show) || !match;\r\n        colAggValues.push({\r\n          title: match ? match.title : i,\r\n          key: i,\r\n          values: [{}],\r\n          type: 'columnAgg',\r\n          show: flag ? '' : '1',\r\n          parentTitleStyle: useStyleFlag ? curStyle : null,\r\n        });\r\n      });\r\n      return colAggValues;\r\n    }\r\n\r\n    function getColumn(colCategory) {\r\n      // colCategory = ['品牌', '产品主类']\r\n      let nest = d3.nest();\r\n      for (var i = 0; i < colCategory.length; i++) {\r\n        nest.key($$.createNestingFunction(colCategory[i]));\r\n      }\r\n      let resData = nest.entries(config.data_json);\r\n      return resData;\r\n    }\r\n    /////////////////////结束获取grid的column////////////////////////\r\n  };\r\n\r\n  function initData(values) {\r\n    data = values;\r\n    keys = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isDefined\"])(colored_feature)\r\n      ? $$.getUniqueArray(data.map((d) => d.values[0][colored_feature]))\r\n      : [];\r\n  }\r\n\r\n  function getColorList() {\r\n    $$.modifyColorList({\r\n      colored_type: colored_type,\r\n      colored_feature: colored_feature,\r\n      keys: keys,\r\n    });\r\n  }\r\n\r\n  return {\r\n    drawTable,\r\n    getColorList,\r\n    initData,\r\n  };\r\n};\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  drawTable,\r\n});\r\n\n\n//# sourceURL=webpack://mc/./src/shape/table.js?");

/***/ }),

/***/ "./src/size.js":
/*!*********************!*\
  !*** ./src/size.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n\r\n\r\n\r\n\r\nconst generateSize = function () {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const min_radius = config.point_size;\r\n  const max_radius = min_radius * 8;\r\n  const mid_radius = max_radius / 3;\r\n  let data = config.data_json;\r\n  let sizeRange = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(config.data_range_size) ? [] : config.data_range_size[0];\r\n  let sized_feature = config.data_sized_feature;\r\n  let domain = [], range = []\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(sized_feature)) {\r\n    domain = d3.extent(data.map(v => v[sized_feature]))\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(sizeRange[0]) && sizeRange[0] !== null) domain[0] = Number(sizeRange[0])\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(sizeRange[1]) && sizeRange[1] !== null) domain[1] = Number(sizeRange[1])\r\n    if(domain[0] > domain[1]) domain[0] = domain[1]\r\n    range = [min_radius, max_radius]\r\n    \r\n    if(domain[0] === domain[1]) range = [mid_radius, mid_radius]\r\n  } else {\r\n    range = [mid_radius, mid_radius]\r\n  }\r\n  \r\n  $$.userDefined_sizeRange = domain\r\n\r\n  let scale = d3.scaleLinear().range(range).domain(domain).clamp(true)\r\n\r\n  return function(d) {\r\n    return Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(d) ? Math.max(scale(d), 0) : mid_radius;\r\n  }\r\n}\r\n\r\nconst modifySizeList = function({sizeRange, sized_feature}) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  let val = Math.floor(($$.userDefined_sizeRange[1] - $$.userDefined_sizeRange[0]) / 5);\r\n  if(val === 0) return\r\n  let size_list = []\r\n  for(let i=1; i<=5; i++) {\r\n    size_list.push({\r\n      val: $$.axis_format(i * val), \r\n      radius: $$.size(i * val), \r\n      sized_feature: sized_feature, \r\n    })\r\n  }\r\n\r\n  size_list[0].originalVal = sizeRange[0]\r\n  size_list[4].originalVal = sizeRange[1]\r\n\r\n  if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.sizeList)) {\r\n    config.sizeList = []\r\n  }\r\n  config.sizeList.push({\r\n    key: sized_feature,\r\n    name: sized_feature,\r\n    list: size_list\r\n  })\r\n}\r\n\r\nconst updateMargins = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  let data = config.data_json,\r\n      type = config.data_type,\r\n      isRotated = config.axis_rotated,\r\n      axis_x_type = config.axis_x_type,\r\n      column_cat = config.data_column_categories,\r\n      row_cat = config.data_row_categories,\r\n      row_aggressions = config.data_row_aggressions,\r\n      column_aggr = config.data_column_aggressions,\r\n      isScatter = type === 'scatter',\r\n      isTable = type === 'table',\r\n      row_length = $$.nest_by_row.length;\r\n\r\n  let margins = {\r\n    titlePadding: 5,\r\n    row_cat_space: 0,\r\n    row_title_space: 0,\r\n    column_cat_space: 0,\r\n    column_title_space: 0,\r\n    paddingLeft: config.smallMultiplePadding_left,\r\n    paddingRight: config.smallMultiplePadding_right,\r\n    paddingTop: config.smallMultiplePadding_top,\r\n    paddingBtm: config.smallMultiplePadding_bottom,\r\n    axis_left_space: 0,\r\n    axis_right_space: 0,\r\n    axis_btm_space: 0, //根据tick text是否rotate来决定\r\n    rotate_x_tick_text: false\r\n  }\r\n  \r\n  let title_height = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h + margins.titlePadding\r\n  if($$.isBarLineType) {\r\n    margins.row_cat_space = row_cat.length * (isRotated ? $$.x_category_height : $$.y_category_width)\r\n    margins.row_title_space = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(row_cat) ? 0 : title_height\r\n    margins.column_cat_space = Math.max(column_cat.length - 1, 0) * (isRotated ? $$.y_category_width : $$.x_category_height)\r\n    margins.column_title_space = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(column_cat) ? 0 : title_height\r\n  } else {\r\n    margins.row_cat_space = config.table_header_left_width.reduce((a, b) => a += b, 0)\r\n    margins.column_cat_space = column_cat.length * config.table_header_top_height\r\n    margins.column_title_space = isTable ? title_height : 0\r\n  }\r\n\r\n  $$.width = config.size_width - margins.paddingLeft - margins.paddingRight\r\n  $$.height = config.size_height - margins.paddingTop - margins.paddingBtm\r\n\r\n  let domain_x = [], x_tick_range = config.axis_x_tick_range;\r\n  if($$.isBarLineType) {\r\n    domain_x = $$.nest_by_column.map(v => v.key)\r\n  } else if(isScatter) {\r\n    if(!Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(x_tick_range)) {\r\n      domain_x = x_tick_range\r\n    } else {\r\n      let data_x = d3.extent(data.map(d => d[column_aggr[0]]))\r\n      domain_x = [Math.min(d3.min(data_x), 0), d3.max(data_x) * 1.1]\r\n    }\r\n  }\r\n\r\n  let tickLength = 6, tickLabel_to_label_dis = 10, limitHeight = (isRotated ? config.size_width : config.size_height)*0.4, size_limit = {width: 0, height: 0};\r\n  let y_tick_length = 0, y2_tick_length = 0, show_y2 = false, show_y = false\r\n  $$.domain_list.forEach(yDomain => {\r\n    let domain_y = yDomain.y, domain_y2 = yDomain.y2, y_format = yDomain.y_percent ? $$.axis_format_percent :  $$.axis_format, y2_format = yDomain.y2_percent ? $$.axis_format_percent : $$.axis_format;\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(domain_y)) {\r\n      y_tick_length = Math.max(d3.max(domain_y.map(d => y_format(d).toString().length * _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.w)), y_tick_length)\r\n      show_y = true\r\n    }\r\n\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(domain_y2)) {\r\n      y2_tick_length = Math.max(d3.max(domain_y2.map(d => y2_format(d).toString().length * _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.w)), y2_tick_length)\r\n      show_y2 = true\r\n    }\r\n  })\r\n\r\n  if(show_y) {\r\n    margins.axis_left_space = tickLength + y_tick_length + tickLabel_to_label_dis + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h\r\n  }\r\n  if(show_y2) {\r\n    margins.axis_right_space = tickLength + y2_tick_length + tickLabel_to_label_dis + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h\r\n  }\r\n  \r\n  if($$.isBarLineType || isScatter) {\r\n    let maxTickLength = d3.max(data.map(s => {\r\n      let cat = '' + s[column_cat[column_cat.length-1]] || 'null'\r\n      if(axis_x_type === 'bin') cat = $$.axis_format(+cat);\r\n      return $$.getTextLength(cat)\r\n    }))\r\n\r\n    margins.axis_btm_space = Math.min(tickLength + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h + tickLabel_to_label_dis + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h, limitHeight)\r\n\r\n    if(isRotated) {\r\n      margins.axis_btm_space = Math.min(tickLength + maxTickLength, limitHeight) + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h\r\n      $$.width = Math.max(config.size_width - margins.paddingLeft - margins.paddingRight - \r\n        margins.column_cat_space - margins.column_title_space - margins.axis_btm_space, size_limit.width)\r\n      \r\n      $$.height = Math.max(config.size_height - margins.paddingTop - margins.paddingBtm - \r\n        margins.row_cat_space - margins.row_title_space - margins.axis_left_space - \r\n        margins.axis_right_space, size_limit.height)\r\n\r\n      // 调整$$.height的值，以免出现这种情况：数值很少的情况下也会有滚动条\r\n      if ($$.nest_by_column.length <= 8) {\r\n        let marTop = margins.row_cat_space + margins.row_title_space + margins.axis_right_space;\r\n        let marBottom = margins.axis_left_space + margins.paddingBtm;\r\n        $$.height = Math.max($$.config.container_height - marTop - marBottom - 10, size_limit.height)\r\n      }\r\n      \r\n      $$.width_one_chart = $$.width / (row_length * row_aggressions.length || 1);\r\n      $$.height_one_chart = $$.height\r\n\r\n      $$.x = d3.scaleBand().range([0, $$.height]).domain(domain_x)\r\n    } else {\r\n      $$.width = Math.max(config.size_width - margins.paddingLeft - margins.paddingRight - \r\n        margins.row_cat_space - margins.row_title_space - margins.axis_left_space - margins.axis_right_space, size_limit.width)\r\n\r\n      $$.height = config.size_height - margins.paddingTop - margins.paddingBtm - \r\n        margins.column_cat_space - margins.column_title_space\r\n\r\n      if($$.isBarLineType) {\r\n  \r\n        $$.x = d3.scaleBand().range([0, $$.width]).domain(domain_x)\r\n\r\n        if($$.x.bandwidth() <= maxTickLength || config.axis_x_tick_rotate) {\r\n          margins.rotate_x_tick_text = true\r\n        }\r\n\r\n        if(margins.rotate_x_tick_text) {\r\n          margins.axis_btm_space = Math.min(tickLength + maxTickLength + tickLabel_to_label_dis + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h, limitHeight)\r\n        }\r\n\r\n        $$.height = Math.max($$.height - margins.axis_btm_space, size_limit.height)\r\n\r\n        $$.height_one_chart = $$.height / (row_length * row_aggressions.length || 1);\r\n        if (type === 'area') {\r\n          $$.height_one_chart = $$.height_one_chart - 10;\r\n        }\r\n        $$.width_one_chart = $$.width\r\n      } else {\r\n        $$.width_one_chart = config.table_body_width - margins.axis_left_space - \r\n          margins.paddingLeft - margins.paddingRight;\r\n\r\n        $$.height_one_chart = config.table_body_height - margins.axis_btm_space - \r\n          margins.paddingTop - margins.paddingBtm;\r\n\r\n        $$.x = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"notEmpty\"])(x_tick_range) ? d3.scaleLinear().range([0, $$.width_one_chart]).domain(domain_x) : \r\n          d3.scaleLinear().range([0, $$.width_one_chart]).domain(domain_x).nice()\r\n      }\r\n    }\r\n\r\n    $$.domains[config.axis_x_text_title] = {\r\n      domain: $$.x.domain(),\r\n      ticks_length: isScatter ? $$.x.ticks().length : domain_x.length\r\n    }\r\n  }\r\n\r\n  $$.margin = {\r\n    top: (isRotated ? (margins.row_cat_space + margins.row_title_space + margins.axis_right_space) : \r\n         (margins.column_cat_space + margins.column_title_space)) + margins.paddingTop,\r\n\r\n    bottom: (isRotated ? margins.axis_left_space : margins.axis_btm_space) + margins.paddingBtm,\r\n\r\n    left: (isRotated ? (margins.column_cat_space + margins.column_title_space + margins.axis_btm_space) : \r\n          (margins.row_cat_space + margins.row_title_space + margins.axis_left_space)) + margins.paddingLeft,\r\n\r\n    right: (isRotated ? 0 : margins.axis_right_space) + margins.paddingRight\r\n  }\r\n\r\n  $$.margins = margins\r\n}\r\n\r\nconst updateSize = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const isRotated = config.axis_rotated;\r\n  const containerWidth = config.container_width;\r\n  const containerHeight = config.container_height;\r\n  const type = config.data_type\r\n  $$.currentWidth = config.size_width\r\n  $$.currentHeight = config.size_height\r\n\r\n  let top = $$.margin.top\r\n  let left = $$.margin.left\r\n  let bottom = $$.margin.bottom\r\n  let right = $$.margin.right\r\n\r\n  if($$.isBarLineType) {\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(containerWidth) && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(containerHeight)) {\r\n      //影响tooltip定位\r\n      $$.fixedContainer = true\r\n      if(isRotated) {\r\n        let height = containerHeight - top - bottom\r\n        $$.divMain.style('overflow', 'hidden auto').style('height', `${Math.min(height, $$.height)}px`)\r\n      } else {\r\n        $$.divMain.style('overflow', 'auto hidden')\r\n      }\r\n    }\r\n\r\n    $$.svg_yAxis\r\n      .attr('width', isRotated ? $$.currentWidth : left)\r\n      .attr('height', isRotated ? bottom : $$.currentHeight)\r\n      \r\n    $$.svg\r\n      .attr('width', isRotated ? $$.currentWidth : $$.width)\r\n      .attr('height', isRotated ? $$.height : $$.currentHeight)\r\n\r\n    $$.svg_y2Axis\r\n      .attr('width', isRotated ? $$.currentWidth : right)\r\n      .attr('height', isRotated ? (top + 1) < 30 ? 30 : top + 1 : $$.currentHeight)\r\n    if (type === 'area') {\r\n      $$.main.attr('transform', `translate(${isRotated ? left : 0}, ${isRotated ? 0 : 50})`)\r\n      $$.ySvg.attr('transform', `translate(${isRotated ? left : $$.margins.row_title_space}, ${isRotated ? 0 : 50})`)\r\n    } else {\r\n      $$.main.attr('transform', `translate(${isRotated ? left : 0}, ${isRotated ? 0 : top})`)\r\n      $$.ySvg.attr('transform', `translate(${isRotated ? left : $$.margins.row_title_space}, ${isRotated ? 0 : top})`)\r\n    }\r\n    $$.y2Svg.attr('transform', `translate(${isRotated ? left : 0}, ${top + (isRotated ? $$.margins.row_title_space : 0)})`)\r\n  } else {\r\n    $$.svg.attr('width', $$.currentWidth)\r\n          .attr('height', $$.currentHeight)\r\n\r\n    if(type === 'map') {\r\n      let height = $$.nest_by_row.length * config.table_body_height\r\n      let width = $$.nest_by_column.length * config.table_body_width\r\n      $$.bigContainer.attr(\"style\", `transform: translate(${left}px, ${top}px); height: ${height}px; width: ${width}px`)\r\n    } else {\r\n      const isTable = type === 'table'\r\n      if(isTable) {\r\n        $$.main.attr(\"transform\", `translate(${0}, ${$$.margins.column_title_space})`)\r\n      }\r\n      $$.bigContainer.attr(\"transform\", `translate(${isTable ? 0 : left}, ${isTable ? 0 : top})`)\r\n    }\r\n  }\r\n}\r\n\r\nconst definedChartSize = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  \r\n  let isTable = config.data_type === 'table',\r\n      isRotated = config.axis_rotated,\r\n      column_categories = config.data_column_categories, \r\n      row_categories = config.data_row_categories,\r\n      column_aggressions = config.data_column_aggressions,\r\n      row_aggressions = config.data_row_aggressions,\r\n      total_rows = $$.nest_by_row.length * (isTable ? 1 : Math.max(row_aggressions.length, 1)) || 1, \r\n      total_columns = $$.nest_by_column.length || 1, \r\n      row_factor = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(row_aggressions) || !isTable ? 0 : 1,\r\n      col_factor = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(column_aggressions) || !isTable ? 0 : 1,\r\n      labels = isTable ? config.data_labeled : [], \r\n      header_height = config.table_header_top_height,\r\n      calculateHeader = config.table_header_auto,\r\n      limit_max = 300,\r\n      table_title = config.table_title;\r\n  //label_features 表格的时候需要\r\n  const column_width = 50, height = 400, width = 600\r\n\r\n  let size = {width: isRotated ? height : width, height: isRotated ? width : height};\r\n\r\n  if(!$$.isBarLineType) {\r\n    if(calculateHeader || Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(config.table_header_left_width)) {\r\n      //表格行属性的宽度根据数据最长的长度来决定\r\n      config.table_header_left_width = []\r\n      let list = row_factor ? row_categories.concat('') : row_categories\r\n      list.forEach((r, i) => {\r\n        let temp_arr = []\r\n        let user_defined_title = false\r\n        if(r !== '') {\r\n          let style = $$.getTextStyle(table_title, r)\r\n          //如果style.title不为undefined的话说明用户定义的title，这个时候宽度无需限制为limit_max\r\n          user_defined_title = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(style.title)\r\n          let title = user_defined_title ? style.title : r\r\n          let length = $$.getTextLength(title, style.style)\r\n          if(user_defined_title && length > limit_max) {\r\n            limit_max = length\r\n          }\r\n          temp_arr.push(length)\r\n        }\r\n        $$.nest_by_row.forEach(n => {\r\n          let keys = n.key.split(`${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].join_factor}`)\r\n          let key = keys[i] || ''\r\n          if(r === '') {\r\n            let style = $$.getTextStyle(table_title, key)\r\n            user_defined_title = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(style.title)\r\n            let title = user_defined_title ? style.title : key\r\n            let length = $$.getTextLength(title, style.style)\r\n            if(user_defined_title && length > limit_max) {\r\n              limit_max = length\r\n            }\r\n            temp_arr.push(length)\r\n          } else {\r\n            temp_arr.push($$.getTextLength(key))\r\n          }\r\n        })\r\n        let length = Math.min(d3.max(temp_arr), limit_max)\r\n        config.table_header_left_width.push(length)\r\n      })\r\n    }\r\n    \r\n    let temp_width = (config.size_width - config.table_header_left_width.reduce((a, b) => a += b, 0)) /total_columns\r\n    let temp_height = ((config.size_height - (column_categories.length + col_factor) * header_height - _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h - 5) / total_rows);\r\n    let cell_height = 24 * (labels.length + row_factor + col_factor) + config.table_padding_top + config.table_padding_bottom\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.size_width) && !Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.size_height)) {\r\n      config.table_body_width = temp_width\r\n      config.table_body_height = isTable ? cell_height : height\r\n    } else if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.size_height) && !Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.size_width)) {\r\n      config.table_body_height = temp_height\r\n      if(!isTable) {\r\n        config.table_body_width = width\r\n      }\r\n    } else if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.size_width) && Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(config.size_height)) {\r\n      config.table_body_width = temp_width\r\n      config.table_body_height = temp_height\r\n    } else {\r\n      config.table_body_height = isTable ? cell_height : height\r\n      if(!isTable) {\r\n        config.table_body_width = width\r\n      }\r\n    }\r\n    \r\n    size.height = total_rows * config.table_body_height + (column_categories.length + col_factor) * header_height + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h + 5\r\n    size.width = total_columns * config.table_body_width + config.table_header_left_width.reduce((a, b) => a += b, 0);\r\n  } else {\r\n    let temp_w = Math.max(total_columns * column_width, width),\r\n        temp_h = total_rows * height;\r\n    size.width = isRotated ? temp_h * 1.5 : temp_w;\r\n    size.height = isRotated ? temp_w * 1.2 : temp_h;\r\n  }\r\n\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(config.size_width)) {\r\n    config.size_width = size.width\r\n  }\r\n\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isEmpty\"])(config.size_height)) {\r\n    config.size_height = size.height\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  updateSize,\r\n  generateSize,\r\n  definedChartSize,\r\n  updateMargins,\r\n  modifySizeList\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/size.js?");

/***/ }),

/***/ "./src/tooltip.js":
/*!************************!*\
  !*** ./src/tooltip.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n\r\n\r\n\r\n\r\nconst tooltip = function() {\r\n\tconst $$ = this \r\n  const config = $$.config;\r\n  const scale = config.scale;\r\n  const parent = $$.fixedContainer ? $$.divMain : $$.MyContainer;\r\n  return parent.append('div')\r\n    .attr(\"class\", `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].tooltip}`)\r\n    .attr('style', `${_Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].tooltip_style}transform: scale(${scale});`)\r\n    .style(\"opacity\", 0)\r\n    .style('left', 0)\r\n    .style('top', 0)\r\n}\r\n\r\nconst formatTooltipText = function(data) {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const tooltip_format = config.tooltip_format\r\n  const tooltip_text = config.tooltip_text\r\n  let html_content = Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isObject\"])(data) ? '' : data;\r\n\r\n  Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isObject\"])(data) && Object.keys(data).filter(k => k !== _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mc_hidden_key).forEach(v => {\r\n    let format = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].number_format\r\n    let text = _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].text_format\r\n    let title = v\r\n    if(tooltip_format[v]) {\r\n      format = tooltip_format[v]\r\n    }\r\n    if(tooltip_text[v]) {\r\n      text = tooltip_text[v]\r\n    }\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(text['title'])) {\r\n      title = text['title']\r\n    }\r\n\r\n    return html_content += `<div \r\n                              style=\"font-size: ${text.fontSize}px;  \r\n                              text-align: ${text.align}; \r\n                              color: ${text.fontColor||'#6b6b6b'}; \r\n                              font-style: ${text.fontStyle}; \r\n                              text-decoration: ${text.decoration}; \r\n                              letter-spacing: ${text.letterSpacing}px; \r\n                              line-height: ${text.lineHeight}px; display: ${text.display || \"auto\"}\">\r\n                              ${title}${title === '' ? '' : ': '}${$$.formatNumberFunction(data[v], format)} \r\n                            </div>`\r\n  })\r\n\r\n  return html_content\r\n}\r\n\r\nconst displayTip = function(data, x, y, margin_left) {\r\n  const $$ = this;\r\n  const div = $$.tooltipDiv;\r\n  const config = $$.config;\r\n\r\n  if(!config.tooltip_show) return\r\n\r\n  const scale = config.scale;\r\n  const isFixed = $$.fixedContainer\r\n  const isRotated = config.axis_rotated\r\n  if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(data)) {\r\n    const parent = isFixed ? $$.divMain : $$.MyContainer;\r\n    const parentRect = parent.node().getBoundingClientRect();\r\n    let dx = d3.event.clientX - parentRect.left,\r\n        dy = d3.event.clientY - parentRect.top,\r\n        width = 0;\r\n\r\n    dx /= scale\r\n    dy /= scale\r\n\r\n    if(Object(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"isDefined\"])(margin_left)) {\r\n      width = margin_left\r\n    } else {\r\n      if(isFixed) {\r\n        width = config.container_width - (isRotated ? $$.margin.left : $$.margin.right)\r\n      } else {\r\n        width = $$.width \r\n      }\r\n    }\r\n    let left = 0, top = 0, padding = 10\r\n\r\n    div\r\n      .html($$.formatTooltipText(data))\r\n      .style(\"opacity\", 1)\r\n      .style('display', 'block')\r\n      .style('left', () => {\r\n        let boundings = div.node().getBoundingClientRect();\r\n        // if (dx > boundings.width / 2 ) {\r\n        //   left = dx + 20 // boundings.width / 2;\r\n        // } else {\r\n        //   left = dx - boundings.width / 2;\r\n        // }\r\n\r\n        // if (dy > boundings.height / 2) {\r\n        //   top = dy + 15;\r\n        // } else {\r\n        //   top = dy + boundings.height + padding + CLASS.sizeFor1Char.h\r\n        // }\r\n        if(dx - boundings.width/2 < 0) {\r\n          left = 10\r\n        } else {\r\n          left = dx - boundings.width / 2 + ((isFixed && !isRotated) ? $$.margin.left : 0)\r\n        }\r\n        if(dx + boundings.width/2 > width) {\r\n          left = dx - boundings.width / 2\r\n        }\r\n\r\n        if(dy < boundings.height + padding) {\r\n          top = dy + padding + _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h;\r\n        } else {\r\n          top = dy - boundings.height - padding - _Classes_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].sizeFor1Char.h;\r\n        }\r\n\r\n        top += isRotated ? $$.margin.top : 0\r\n        return `${left}px`\r\n      })\r\n      .style('top', `${top}px`)\r\n  } else {\r\n      div\r\n        .style(\"opacity\", 0)\r\n        .style('display', 'none')\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_2__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  tooltip,\r\n  displayTip,\r\n  formatTooltipText\r\n})\n\n//# sourceURL=webpack://mc/./src/tooltip.js?");

/***/ }),

/***/ "./src/zoom.js":
/*!*********************!*\
  !*** ./src/zoom.js ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Chart_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Chart.js */ \"./src/Chart.js\");\n/* harmony import */ var _check_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./check.js */ \"./src/check.js\");\n/* harmony import */ var _Classes_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Classes.js */ \"./src/Classes.js\");\n\r\n\r\n\r\n\r\nconst getZoom = function() {\r\n  const $$ = this;\r\n  let zoom = d3.zoom()\r\n    .filter(function () { \r\n      return !d3.event.path[1].classList.contains(`${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`) && !d3.event.path[2].classList.contains(`${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].element}`)\r\n     })\r\n    //.scaleExtent([0.05, 90])\r\n    // .translateExtent([ [0, 0], [$$.svg.attr('width'), extent_height] ])\r\n    // .extent([ [0, 0], [$$.svg.attr('width'), extent_height] ])\r\n    .on(\"end\", function() {$$.getZoomBehavior($$)}) //'start, end, zoom'\r\n  return zoom;\r\n}\r\n\r\nconst getZoomBehavior = function(ins) {\r\n  const $$ = ins;\r\n  const config = $$.config;\r\n  const type = config.data_type;\r\n\r\n  let bindto = config.bindto.slice(1)\r\n  let zoomPanning = config.axis_zoom_panning;\r\n  let new_yScale, new_xScale;\r\n\r\n  if(config.axis_zoom_enable && Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"isFunction\"])(zoomPanning)) {\r\n    zoomPanning(bindto, d3.event.transform)\r\n  }\r\n  if(type === 'scatter') {\r\n    new_xScale = d3.event.transform.rescaleX($$.x)\r\n    new_yScale = d3.event.transform.rescaleY($$.domain_list[0].y_scale)\r\n\r\n    $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}`).remove()\r\n\r\n    $$.draw({x_scale: new_xScale, scale: new_yScale, drawClipPath: false})\r\n  } else {\r\n    $$.domain_list.forEach(d => {\r\n      if(d.y.length) {\r\n        let new_scale = d3.event.transform.rescaleY(d.y_scale)\r\n        new_scale.domain(new_scale.domain().map(dd => dd /= d3.event.transform.k))\r\n        d.y_scale = new_scale\r\n        //修改坐标轴范围\r\n        let y_title = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(d.y_style) ? d.y_style.text.title : undefined\r\n        y_title && ($$.domains[y_title] = {\r\n          domain: new_scale.domain(),\r\n          ticks_length: new_scale.ticks().length\r\n        })\r\n      }\r\n      if(d.y2.length) {\r\n        let new_scale_y2 = d3.event.transform.rescaleY(d.y2_scale)\r\n        new_scale_y2.domain(new_scale_y2.domain().map(dd => dd /= d3.event.transform.k))\r\n        d.y2_scale = new_scale_y2\r\n        //修改坐标轴范围\r\n        let y2_title = Object(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"notEmpty\"])(d.y2_style) ? d.y2_style.text.title : undefined\r\n        y2_title && ($$.domains[y2_title] = {\r\n          domain: new_scale_y2.domain(),\r\n          ticks_length: new_scale_y2.ticks().length\r\n        })\r\n      }\r\n    })\r\n\r\n    $$.main && $$.main.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}`).remove()\r\n    $$.ySvg && $$.ySvg.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}`).remove()\r\n    $$.y2Svg && $$.y2Svg.selectAll(`.${_Classes_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"].multi_row}`).remove()\r\n\r\n    $$.draw({createBarPatterns: false, drawClipPath: false, drawXaxis: false});\r\n  }\r\n  $$.initLabelStyle();\r\n}\r\n\r\nconst checkAndScale = function() {\r\n  const $$ = this;\r\n  const config = $$.config;\r\n  const type = config.data_type;\r\n  let withAxis = ['bar', 'line', 'bar-line', 'scatter']\r\n  if(withAxis.indexOf(type) !== -1) {\r\n    let scale_factor = config.axis_zoom_scale || 1,\r\n        translate_factor = config.axis_zoom_translate || {x: 0, y: 0};\r\n    if(scale_factor === 1) return\r\n    $$.svg.call($$.zoom.transform, d3.zoomIdentity.translate(translate_factor.x, translate_factor.y).scale(scale_factor))\r\n  }\r\n}\r\n\r\nObject(_check_js__WEBPACK_IMPORTED_MODULE_1__[\"extend\"])(_Chart_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype, {\r\n  getZoom,\r\n  getZoomBehavior,\r\n  checkAndScale\r\n})\r\n\n\n//# sourceURL=webpack://mc/./src/zoom.js?");

/***/ }),

/***/ "d3":
/*!**************************************************************************!*\
  !*** external {"commonjs":"d3","commonjs2":"d3","amd":"d3","root":"d3"} ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = __WEBPACK_EXTERNAL_MODULE_d3__;\n\n//# sourceURL=webpack://mc/external_%7B%22commonjs%22:%22d3%22,%22commonjs2%22:%22d3%22,%22amd%22:%22d3%22,%22root%22:%22d3%22%7D?");

/***/ })

/******/ });
});